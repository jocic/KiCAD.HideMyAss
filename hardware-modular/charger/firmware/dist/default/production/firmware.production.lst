

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 13 07:52:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F687 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011E                     	;# 
   119  011F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  019E                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0118                     	;# 
   176  0119                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011E                     	;# 
   180  011F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  019E                     	;# 
   184  001E                     _ADRESH	set	30
   185  0035                     _RB5	set	53
   186  00F9                     _GO	set	249
   187  00FA                     _CHS0	set	250
   188  00FB                     _CHS1	set	251
   189  00FC                     _CHS2	set	252
   190  00FD                     _CHS3	set	253
   191  0038                     _RC0	set	56
   192  00F8                     _ADON	set	248
   193  00FE                     _VCFG	set	254
   194  00FF                     _ADFM	set	255
   195  005B                     _RABIE	set	91
   196  005C                     _INTE	set	92
   197  005D                     _T0IE	set	93
   198  005E                     _PEIE	set	94
   199  005F                     _GIE	set	95
   200  0034                     _RB4	set	52
   201  005A                     _T0IF	set	90
   202  009E                     _ADRESL	set	158
   203  0081                     _OPTION_REG	set	129
   204  0438                     _TRISC0	set	1080
   205  0434                     _TRISB4	set	1076
   206  042D                     _TRISA5	set	1069
   207  04FC                     _ADCS0	set	1276
   208  04FD                     _ADCS1	set	1277
   209  04FE                     _ADCS2	set	1278
   210  0408                     _PS0	set	1032
   211  0409                     _PS1	set	1033
   212  040A                     _PS2	set	1034
   213  040D                     _T0CS	set	1037
   214  0466                     _ADIE	set	1126
   215  0478                     _SCS	set	1144
   216  0479                     _LTS	set	1145
   217  047A                     _HTS	set	1146
   218  047B                     _OSTS	set	1147
   219  047E                     _IRCF2	set	1150
   220  047D                     _IRCF1	set	1149
   221  047C                     _IRCF0	set	1148
   222  010C                     _EEDAT	set	268
   223  010D                     _EEADR	set	269
   224  011F                     _ANSELH	set	287
   225  011E                     _ANSEL	set	286
   226  08D7                     _C2ON	set	2263
   227  08CF                     _C1ON	set	2255
   228  018D                     _EECON2	set	397
   229  018C                     _EECON1	set	396
   230  0C63                     _WRERR	set	3171
   231  0C62                     _WREN	set	3170
   232  0C61                     _WR	set	3169
   233  0C60                     _RD	set	3168
   234                           
   235                           	psect	cinit
   236  000B                     start_initialization:	
   237                           ; #config settings
   238                           
   239  000B                     __initialization:
   240                           
   241                           ; Clear objects allocated to BITCOMMON
   242  000B  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   243                           
   244                           ; Clear objects allocated to BANK0
   245  000C  1283               	bcf	3,5	;RP0=0, select bank0
   246  000D  1303               	bcf	3,6	;RP1=0, select bank0
   247  000E  01BA               	clrf	__pbssBANK0& (0+127)
   248  000F  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   249  0010  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   250  0011  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   251  0012  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   252  0013  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   253  0014  01C0               	clrf	(__pbssBANK0+6)& (0+127)
   254  0015  01C1               	clrf	(__pbssBANK0+7)& (0+127)
   255  0016  01C2               	clrf	(__pbssBANK0+8)& (0+127)
   256  0017  01C3               	clrf	(__pbssBANK0+9)& (0+127)
   257  0018                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  0018                     __end_of__initialization:
   261  0018  0183               	clrf	3
   262  0019  281A               	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bitbssCOMMON
   265  03D8                     __pbitbssCOMMON:
   266  03D8                     _PWM_ENABLED:
   267  03D8                     	ds	1
   268                           
   269                           	psect	bssBANK0
   270  003A                     __pbssBANK0:
   271  003A                     _PWM_OFF:
   272  003A                     	ds	2
   273  003C                     _PWM_ON:
   274  003C                     	ds	2
   275  003E                     _PWM_TICKS:
   276  003E                     	ds	2
   277  0040                     _ADC_REF:
   278  0040                     	ds	2
   279  0042                     _ADC_TEMP:
   280  0042                     	ds	2
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_is_shutdown:
   285  0070                     ?_pwm_routine:	
   286                           ; 1 bit 
   287                           
   288  0070                     ??_pwm_routine:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_setup:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_set_pwm_cycle:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_set_pwm_enabled:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_calc_cycle:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_blink:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_probe_temp:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_probe_bat:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_read_data:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_main:	
   316                           ; 1 bytes @ 0x0
   317                           
   318                           
   319                           ; 1 bytes @ 0x0
   320  0070                     	ds	2
   321  0072                     ??_setup:
   322  0072                     ??_probe_temp:	
   323                           ; 1 bytes @ 0x2
   324                           
   325  0072                     ??_probe_bat:	
   326                           ; 1 bytes @ 0x2
   327                           
   328  0072                     ??_read_data:	
   329                           ; 1 bytes @ 0x2
   330                           
   331  0072                     ?_write_data:	
   332                           ; 1 bytes @ 0x2
   333                           
   334  0072                     ??_is_shutdown:	
   335                           ; 1 bytes @ 0x2
   336                           
   337  0072                     ?___wmul:	
   338                           ; 1 bytes @ 0x2
   339                           
   340  0072                     write_data@value:	
   341                           ; 2 bytes @ 0x2
   342                           
   343  0072                     ___wmul@multiplier:	
   344                           ; 1 bytes @ 0x2
   345                           
   346                           
   347                           ; 2 bytes @ 0x2
   348  0072                     	ds	1
   349  0073                     ??_write_data:
   350  0073                     read_data@address:	
   351                           ; 1 bytes @ 0x3
   352                           
   353                           
   354                           ; 1 bytes @ 0x3
   355  0073                     	ds	1
   356  0074                     write_data@address:
   357  0074                     ___wmul@multiplicand:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 2 bytes @ 0x4
   362  0074                     	ds	2
   363  0076                     ??___wmul:
   364  0076                     ___wmul@product:	
   365                           ; 1 bytes @ 0x6
   366                           
   367                           
   368                           ; 2 bytes @ 0x6
   369  0076                     	ds	2
   370  0078                     ??___awdiv:
   371                           
   372                           ; 1 bytes @ 0x8
   373  0078                     	ds	1
   374  0079                     ??_set_pwm_cycle:
   375  0079                     ??___lwdiv:	
   376                           ; 1 bytes @ 0x9
   377                           
   378                           
   379                           ; 1 bytes @ 0x9
   380  0079                     	ds	2
   381  007B                     ??_set_pwm_enabled:
   382                           
   383                           	psect	cstackBANK0
   384  0020                     __pcstackBANK0:	
   385                           ; 1 bytes @ 0xB
   386                           
   387  0020                     ?___awdiv:
   388  0020                     ___awdiv@divisor:	
   389                           ; 2 bytes @ 0x0
   390                           
   391                           
   392                           ; 2 bytes @ 0x0
   393  0020                     	ds	2
   394  0022                     ___awdiv@dividend:
   395                           
   396                           ; 2 bytes @ 0x2
   397  0022                     	ds	2
   398  0024                     ___awdiv@counter:
   399                           
   400                           ; 1 bytes @ 0x4
   401  0024                     	ds	1
   402  0025                     ___awdiv@sign:
   403                           
   404                           ; 1 bytes @ 0x5
   405  0025                     	ds	1
   406  0026                     ___awdiv@quotient:
   407                           
   408                           ; 2 bytes @ 0x6
   409  0026                     	ds	2
   410  0028                     ??_blink:
   411  0028                     ?___lwdiv:	
   412                           ; 1 bytes @ 0x8
   413                           
   414  0028                     set_pwm_cycle@cycle:	
   415                           ; 2 bytes @ 0x8
   416                           
   417  0028                     ___lwdiv@divisor:	
   418                           ; 1 bytes @ 0x8
   419                           
   420                           
   421                           ; 2 bytes @ 0x8
   422  0028                     	ds	1
   423  0029                     set_pwm_enabled@enabled:
   424                           
   425                           ; 1 bytes @ 0x9
   426  0029                     	ds	1
   427  002A                     ___lwdiv@dividend:
   428                           
   429                           ; 2 bytes @ 0xA
   430  002A                     	ds	1
   431  002B                     blink@n:
   432                           
   433                           ; 1 bytes @ 0xB
   434  002B                     	ds	1
   435  002C                     blink@delay:
   436  002C                     ___lwdiv@counter:	
   437                           ; 1 bytes @ 0xC
   438                           
   439                           
   440                           ; 1 bytes @ 0xC
   441  002C                     	ds	1
   442  002D                     blink@i:
   443  002D                     ___lwdiv@quotient:	
   444                           ; 2 bytes @ 0xD
   445                           
   446                           
   447                           ; 2 bytes @ 0xD
   448  002D                     	ds	2
   449  002F                     ??_calc_cycle:
   450                           
   451                           ; 1 bytes @ 0xF
   452  002F                     	ds	2
   453  0031                     calc_cycle@charge:
   454                           
   455                           ; 1 bytes @ 0x11
   456  0031                     	ds	1
   457  0032                     _calc_cycle$731:
   458                           
   459                           ; 2 bytes @ 0x12
   460  0032                     	ds	4
   461  0036                     ??_main:
   462                           
   463                           ; 1 bytes @ 0x16
   464  0036                     	ds	3
   465  0039                     main@cycle:
   466                           
   467                           ; 1 bytes @ 0x19
   468  0039                     	ds	1
   469                           
   470                           	psect	maintext
   471  001A                     __pmaintext:	
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 584 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  cycle           1   25[BANK0 ] unsigned char 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B00/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1
   491 ;;      Params:         0       0       0
   492 ;;      Locals:         0       1       0
   493 ;;      Temps:          0       3       0
   494 ;;      Totals:         0       4       0
   495 ;;Total ram usage:        4 bytes
   496 ;; Hardware stack levels required when called:    4
   497 ;; This function calls:
   498 ;;		_blink
   499 ;;		_calc_cycle
   500 ;;		_is_shutdown
   501 ;;		_probe_bat
   502 ;;		_probe_temp
   503 ;;		_read_data
   504 ;;		_set_pwm_cycle
   505 ;;		_set_pwm_enabled
   506 ;;		_setup
   507 ;;		_write_data
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _main
   515  001A                     _main:
   516  001A                     l1571:	
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   519                           
   520                           
   521                           ;main.c: 588:     unsigned char cycle = read_data(0x0);
   522  001A  3000               	movlw	0
   523  001B  2372               	fcall	_read_data
   524  001C  1283               	bcf	3,5	;RP0=0, select bank0
   525  001D  1303               	bcf	3,6	;RP1=0, select bank0
   526  001E  00B6               	movwf	??_main
   527  001F  0836               	movf	??_main,w
   528  0020  00B9               	movwf	main@cycle
   529  0021                     l1573:
   530                           
   531                           ;main.c: 592:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   532  0021  3006               	movlw	6
   533  0022  1283               	bcf	3,5	;RP0=0, select bank0
   534  0023  1303               	bcf	3,6	;RP1=0, select bank0
   535  0024  00B8               	movwf	??_main+2
   536  0025  3013               	movlw	19
   537  0026  00B7               	movwf	??_main+1
   538  0027  30AD               	movlw	173
   539  0028  00B6               	movwf	??_main
   540  0029                     u1437:
   541  0029  0BB6               	decfsz	??_main,f
   542  002A  2829               	goto	u1437
   543  002B  0BB7               	decfsz	??_main+1,f
   544  002C  2829               	goto	u1437
   545  002D  0BB8               	decfsz	??_main+2,f
   546  002E  2829               	goto	u1437
   547  002F  0000               	nop
   548  0030                     l1575:
   549                           
   550                           ;main.c: 594:     setup();
   551  0030  225E               	fcall	_setup
   552  0031                     l1577:
   553                           
   554                           ;main.c: 600:         set_pwm_enabled(0x0);
   555  0031  3000               	movlw	0
   556  0032  22BD               	fcall	_set_pwm_enabled
   557  0033                     l1579:
   558                           
   559                           ;main.c: 601:         set_pwm_cycle(0x0);
   560  0033  3000               	movlw	0
   561  0034  228E               	fcall	_set_pwm_cycle
   562  0035                     l1581:
   563                           
   564                           ;main.c: 605:         probe_temp();
   565  0035  22E3               	fcall	_probe_temp
   566  0036                     l1583:
   567                           
   568                           ;main.c: 607:         if (ADC_TEMP == 1023) {
   569  0036  1283               	bcf	3,5	;RP0=0, select bank0
   570  0037  1303               	bcf	3,6	;RP1=0, select bank0
   571  0038  0A42               	incf	_ADC_TEMP,w
   572  0039  3003               	movlw	3
   573  003A  1903               	skipnz
   574  003B  0643               	xorwf	_ADC_TEMP+1,w
   575  003C  1D03               	btfss	3,2
   576  003D  283F               	goto	u1321
   577  003E  2840               	goto	u1320
   578  003F                     u1321:
   579  003F  2843               	goto	l1587
   580  0040                     u1320:
   581  0040                     l1585:
   582                           
   583                           ;main.c: 608:             blink(4);
   584  0040  3004               	movlw	4
   585  0041  2140               	fcall	_blink
   586                           
   587                           ;main.c: 609:         }
   588  0042  2867               	goto	l1597
   589  0043                     l1587:
   590  0043  0843               	movf	_ADC_TEMP+1,w
   591  0044  3A80               	xorlw	128
   592  0045  00FF               	movwf	btemp+1
   593  0046  3081               	movlw	129
   594  0047  027F               	subwf	btemp+1,w
   595  0048  1D03               	skipz
   596  0049  284C               	goto	u1335
   597  004A  3031               	movlw	49
   598  004B  0242               	subwf	_ADC_TEMP,w
   599  004C                     u1335:
   600  004C  1803               	skipnc
   601  004D  284F               	goto	u1331
   602  004E  2850               	goto	u1330
   603  004F                     u1331:
   604  004F  2853               	goto	l1591
   605  0050                     u1330:
   606  0050                     l1589:
   607                           
   608                           ;main.c: 611:             blink(3);
   609  0050  3003               	movlw	3
   610  0051  2140               	fcall	_blink
   611                           
   612                           ;main.c: 612:         }
   613  0052  2867               	goto	l1597
   614  0053                     l1591:
   615  0053  1283               	bcf	3,5	;RP0=0, select bank0
   616  0054  1303               	bcf	3,6	;RP1=0, select bank0
   617  0055  0843               	movf	_ADC_TEMP+1,w
   618  0056  3A80               	xorlw	128
   619  0057  00FF               	movwf	btemp+1
   620  0058  3082               	movlw	130
   621  0059  027F               	subwf	btemp+1,w
   622  005A  1D03               	skipz
   623  005B  285E               	goto	u1345
   624  005C  30A9               	movlw	169
   625  005D  0242               	subwf	_ADC_TEMP,w
   626  005E                     u1345:
   627  005E  1C03               	skipc
   628  005F  2861               	goto	u1341
   629  0060  2862               	goto	u1340
   630  0061                     u1341:
   631  0061  2865               	goto	l1595
   632  0062                     u1340:
   633  0062                     l1593:
   634                           
   635                           ;main.c: 614:             blink(4);
   636  0062  3004               	movlw	4
   637  0063  2140               	fcall	_blink
   638                           
   639                           ;main.c: 615:         }
   640  0064  2867               	goto	l1597
   641  0065                     l1595:
   642                           
   643                           ;main.c: 617:             set_pwm_enabled(0x1);
   644  0065  3001               	movlw	1
   645  0066  22BD               	fcall	_set_pwm_enabled
   646  0067                     l1597:
   647                           
   648                           ;main.c: 622:         if (PWM_ENABLED) {
   649  0067  1C7B               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
   650  0068  286A               	goto	u1351
   651  0069  286B               	goto	u1350
   652  006A                     u1351:
   653  006A  28C7               	goto	l1623
   654  006B                     u1350:
   655  006B                     l1599:
   656                           
   657                           ;main.c: 626:             RB4 = 0x1;
   658  006B  1283               	bcf	3,5	;RP0=0, select bank0
   659  006C  1303               	bcf	3,6	;RP1=0, select bank0
   660  006D  1606               	bsf	6,4	;volatile
   661  006E                     l1601:
   662                           
   663                           ;main.c: 628:             probe_bat();
   664  006E  2309               	fcall	_probe_bat
   665  006F                     l1603:
   666                           
   667                           ;main.c: 630:             RB4 = 0x0;
   668  006F  1283               	bcf	3,5	;RP0=0, select bank0
   669  0070  1303               	bcf	3,6	;RP1=0, select bank0
   670  0071  1206               	bcf	6,4	;volatile
   671  0072                     l1605:
   672                           
   673                           ;main.c: 634:             if (ADC_REF > 285) {
   674  0072  0841               	movf	_ADC_REF+1,w
   675  0073  3A80               	xorlw	128
   676  0074  00FF               	movwf	btemp+1
   677  0075  3081               	movlw	129
   678  0076  027F               	subwf	btemp+1,w
   679  0077  1D03               	skipz
   680  0078  287B               	goto	u1365
   681  0079  301E               	movlw	30
   682  007A  0240               	subwf	_ADC_REF,w
   683  007B                     u1365:
   684  007B  1C03               	skipc
   685  007C  287E               	goto	u1361
   686  007D  287F               	goto	u1360
   687  007E                     u1361:
   688  007E  2883               	goto	l1609
   689  007F                     u1360:
   690  007F                     l1607:
   691                           
   692                           ;main.c: 635:                 set_pwm_cycle(calc_cycle(20));
   693  007F  3014               	movlw	20
   694  0080  2226               	fcall	_calc_cycle
   695  0081  228E               	fcall	_set_pwm_cycle
   696                           
   697                           ;main.c: 636:             }
   698  0082  28C7               	goto	l1623
   699  0083                     l1609:
   700  0083  1283               	bcf	3,5	;RP0=0, select bank0
   701  0084  1303               	bcf	3,6	;RP1=0, select bank0
   702  0085  0841               	movf	_ADC_REF+1,w
   703  0086  3A80               	xorlw	128
   704  0087  00FF               	movwf	btemp+1
   705  0088  3080               	movlw	128
   706  0089  027F               	subwf	btemp+1,w
   707  008A  1D03               	skipz
   708  008B  288E               	goto	u1375
   709  008C  302E               	movlw	46
   710  008D  0240               	subwf	_ADC_REF,w
   711  008E                     u1375:
   712  008E  1C03               	skipc
   713  008F  2891               	goto	u1371
   714  0090  2892               	goto	u1370
   715  0091                     u1371:
   716  0091  2896               	goto	l1613
   717  0092                     u1370:
   718  0092                     l1611:
   719                           
   720                           ;main.c: 638:                 set_pwm_cycle(calc_cycle(80));
   721  0092  3050               	movlw	80
   722  0093  2226               	fcall	_calc_cycle
   723  0094  228E               	fcall	_set_pwm_cycle
   724                           
   725                           ;main.c: 639:             }
   726  0095  28C7               	goto	l1623
   727  0096                     l1613:
   728  0096  1283               	bcf	3,5	;RP0=0, select bank0
   729  0097  1303               	bcf	3,6	;RP1=0, select bank0
   730  0098  0841               	movf	_ADC_REF+1,w
   731  0099  3A80               	xorlw	128
   732  009A  00FF               	movwf	btemp+1
   733  009B  3080               	movlw	128
   734  009C  027F               	subwf	btemp+1,w
   735  009D  1D03               	skipz
   736  009E  28A1               	goto	u1385
   737  009F  3015               	movlw	21
   738  00A0  0240               	subwf	_ADC_REF,w
   739  00A1                     u1385:
   740  00A1  1C03               	skipc
   741  00A2  28A4               	goto	u1381
   742  00A3  28A5               	goto	u1380
   743  00A4                     u1381:
   744  00A4  28C7               	goto	l1623
   745  00A5                     u1380:
   746  00A5                     l1615:
   747                           
   748                           ;main.c: 642:                 if (cycle == 0xFF) {
   749  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   750  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   751  00A7  0A39               	incf	main@cycle,w
   752  00A8  1D03               	btfss	3,2
   753  00A9  28AB               	goto	u1391
   754  00AA  28AC               	goto	u1390
   755  00AB                     u1391:
   756  00AB  28BE               	goto	l1621
   757  00AC                     u1390:
   758  00AC                     l1617:
   759                           
   760                           ;main.c: 643:                     cycle = calc_cycle(80);
   761  00AC  3050               	movlw	80
   762  00AD  2226               	fcall	_calc_cycle
   763  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   764  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   765  00B0  00B6               	movwf	??_main
   766  00B1  0836               	movf	??_main,w
   767  00B2  00B9               	movwf	main@cycle
   768  00B3  28BE               	goto	l1621
   769  00B4                     l1619:
   770                           
   771                           ;main.c: 648:                     set_pwm_cycle(cycle);
   772  00B4  0839               	movf	main@cycle,w
   773  00B5  228E               	fcall	_set_pwm_cycle
   774                           
   775                           ;main.c: 650:                     write_data(0x0, cycle);
   776  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   777  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   778  00B8  0839               	movf	main@cycle,w
   779  00B9  00B6               	movwf	??_main
   780  00BA  0836               	movf	??_main,w
   781  00BB  00F2               	movwf	write_data@value
   782  00BC  3000               	movlw	0
   783  00BD  2354               	fcall	_write_data
   784  00BE                     l1621:
   785                           
   786                           ;main.c: 646:                 while (cycle --) {
   787  00BE  3001               	movlw	1
   788  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   789  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   790  00C1  02B9               	subwf	main@cycle,f
   791  00C2  0A39               	incf	main@cycle,w
   792  00C3  1D03               	btfss	3,2
   793  00C4  28C6               	goto	u1401
   794  00C5  28C7               	goto	u1400
   795  00C6                     u1401:
   796  00C6  28B4               	goto	l1619
   797  00C7                     u1400:
   798  00C7                     l1623:
   799                           
   800                           ;main.c: 658:         if (cycle != 0x0 || is_shutdown()) {
   801  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   802  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   803  00C9  0839               	movf	main@cycle,w
   804  00CA  1D03               	btfss	3,2
   805  00CB  28CD               	goto	u1411
   806  00CC  28CE               	goto	u1410
   807  00CD                     u1411:
   808  00CD  28D3               	goto	l1627
   809  00CE                     u1410:
   810  00CE                     l1625:
   811  00CE  238D               	fcall	_is_shutdown
   812  00CF  1C03               	btfss	3,0
   813  00D0  28D2               	goto	u1421
   814  00D1  28D3               	goto	u1420
   815  00D2                     u1421:
   816  00D2  2831               	goto	l1577
   817  00D3                     u1420:
   818  00D3                     l1627:
   819                           
   820                           ;main.c: 659:             blink(2);
   821  00D3  3002               	movlw	2
   822  00D4  2140               	fcall	_blink
   823  00D5  2831               	goto	l1577
   824  00D6  280A               	ljmp	start
   825  00D7                     __end_of_main:
   826                           
   827                           	psect	text1
   828  0354                     __ptext1:	
   829 ;; *************** function _write_data *****************
   830 ;; Defined at:
   831 ;;		line 523 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  address         1    wreg     unsigned char 
   834 ;;  value           1    2[COMMON] unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  address         1    4[COMMON] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      unsigned char 
   839 ;; Registers used:
   840 ;;		wreg
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1
   846 ;;      Params:         1       0       0
   847 ;;      Locals:         1       0       0
   848 ;;      Temps:          1       0       0
   849 ;;      Totals:         3       0       0
   850 ;;Total ram usage:        3 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _write_data
   862  0354                     _write_data:
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _write_data: [wreg]
   866                           ;write_data@address stored from wreg
   867  0354  00F4               	movwf	write_data@address
   868  0355                     l1343:
   869                           
   870                           ;main.c: 523: unsigned char write_data(unsigned char address, unsigned char value);main.
      +                          c: 524: {;main.c: 527:     while (WR == 0x1)
   871  0355  2B5A               	goto	l1347
   872  0356                     l1345:
   873                           
   874                           ;main.c: 528:     {;main.c: 529:         _delay((unsigned long)((10)*(4000000/4000000.0)
      +                          ));
   875  0356  3003               	movlw	3
   876  0357  00F3               	movwf	??_write_data
   877  0358                     u1447:
   878  0358  0BF3               	decfsz	??_write_data,f
   879  0359  2B58               	goto	u1447
   880  035A                     l1347:
   881                           
   882                           ;main.c: 527:     while (WR == 0x1)
   883  035A  1683               	bsf	3,5	;RP0=1, select bank3
   884  035B  1703               	bsf	3,6	;RP1=1, select bank3
   885  035C  188C               	btfsc	12,1	;volsfr
   886  035D  2B5F               	goto	u861
   887  035E  2B60               	goto	u860
   888  035F                     u861:
   889  035F  2B56               	goto	l1345
   890  0360                     u860:
   891  0360                     l1349:
   892                           
   893                           ;main.c: 532:     EEADR = address;
   894  0360  0874               	movf	write_data@address,w
   895  0361  1283               	bcf	3,5	;RP0=0, select bank2
   896  0362  1703               	bsf	3,6	;RP1=1, select bank2
   897  0363  008D               	movwf	13	;volatile
   898                           
   899                           ;main.c: 533:     EEDAT = value;
   900  0364  0872               	movf	write_data@value,w
   901  0365  008C               	movwf	12	;volatile
   902  0366                     l1351:
   903                           
   904                           ;main.c: 534:     GIE = 0x0;
   905  0366  138B               	bcf	11,7	;volatile
   906  0367                     l1353:
   907                           
   908                           ;main.c: 535:     WREN = 0x1;
   909  0367  1683               	bsf	3,5	;RP0=1, select bank3
   910  0368  1703               	bsf	3,6	;RP1=1, select bank3
   911  0369  150C               	bsf	12,2	;volsfr
   912                           
   913                           ;main.c: 536:     EECON2 = 0x55;
   914  036A  3055               	movlw	85
   915  036B  008D               	movwf	13	;volsfr
   916                           
   917                           ;main.c: 537:     EECON2 = 0xAA;
   918  036C  30AA               	movlw	170
   919  036D  008D               	movwf	13	;volsfr
   920  036E                     l1355:
   921                           
   922                           ;main.c: 538:     WR = 0x1;
   923  036E  148C               	bsf	12,1	;volsfr
   924  036F                     l1357:
   925                           
   926                           ;main.c: 539:     WREN = 0x0;
   927  036F  110C               	bcf	12,2	;volsfr
   928  0370                     l1359:
   929                           
   930                           ;main.c: 540:     GIE = 0x1;
   931  0370  178B               	bsf	11,7	;volatile
   932  0371                     l1361:
   933  0371                     l175:	
   934                           ;main.c: 542:     return WRERR;;	Return value of _write_data is never used
   935                           
   936  0371  0008               	return
   937  0372                     __end_of_write_data:
   938                           
   939                           	psect	text2
   940  025E                     __ptext2:	
   941 ;; *************** function _setup *****************
   942 ;; Defined at:
   943 ;;		line 243 in file "main.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1
   957 ;;      Params:         0       0       0
   958 ;;      Locals:         0       0       0
   959 ;;      Temps:          0       0       0
   960 ;;      Totals:         0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _setup
   973  025E                     _setup:
   974  025E                     l1223:	
   975                           ;incstack = 0
   976                           ; Regs used in _setup: [wreg+status,2]
   977                           
   978                           
   979                           ;main.c: 247:     IRCF0 = 0x1;
   980  025E  1683               	bsf	3,5	;RP0=1, select bank1
   981  025F  1303               	bcf	3,6	;RP1=0, select bank1
   982  0260  160F               	bsf	15,4	;volatile
   983                           
   984                           ;main.c: 248:     IRCF1 = 0x1;
   985  0261  168F               	bsf	15,5	;volatile
   986                           
   987                           ;main.c: 249:     IRCF2 = 0x1;
   988  0262  170F               	bsf	15,6	;volatile
   989                           
   990                           ;main.c: 250:     OSTS = 0x0;
   991  0263  118F               	bcf	15,3	;volatile
   992                           
   993                           ;main.c: 251:     HTS = 0x1;
   994  0264  150F               	bsf	15,2	;volatile
   995                           
   996                           ;main.c: 252:     LTS = 0x1;
   997  0265  148F               	bsf	15,1	;volatile
   998                           
   999                           ;main.c: 253:     SCS = 0x1;
  1000  0266  140F               	bsf	15,0	;volatile
  1001  0267                     l1225:
  1002                           
  1003                           ;main.c: 257:     OPTION_REG = 0x80;
  1004  0267  3080               	movlw	128
  1005  0268  0081               	movwf	1	;volatile
  1006  0269                     l1227:
  1007                           
  1008                           ;main.c: 258:     C1ON = 0x0;
  1009  0269  1283               	bcf	3,5	;RP0=0, select bank2
  1010  026A  1703               	bsf	3,6	;RP1=1, select bank2
  1011  026B  1399               	bcf	25,7	;volatile
  1012  026C                     l1229:
  1013                           
  1014                           ;main.c: 259:     C2ON = 0x0;
  1015  026C  139A               	bcf	26,7	;volatile
  1016  026D                     l1231:
  1017                           
  1018                           ;main.c: 263:     GIE = 0x1;
  1019  026D  178B               	bsf	11,7	;volatile
  1020  026E                     l1233:
  1021                           
  1022                           ;main.c: 264:     PEIE = 0x1;
  1023  026E  170B               	bsf	11,6	;volatile
  1024  026F                     l1235:
  1025                           
  1026                           ;main.c: 265:     T0IE = 0x1;
  1027  026F  168B               	bsf	11,5	;volatile
  1028  0270                     l1237:
  1029                           
  1030                           ;main.c: 266:     INTE = 0x0;
  1031  0270  120B               	bcf	11,4	;volatile
  1032  0271                     l1239:
  1033                           
  1034                           ;main.c: 267:     RABIE = 0x0;
  1035  0271  118B               	bcf	11,3	;volatile
  1036  0272                     l1241:
  1037                           
  1038                           ;main.c: 268:     ADIE = 0x0;
  1039  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1041  0274  130C               	bcf	12,6	;volatile
  1042  0275                     l1243:
  1043                           
  1044                           ;main.c: 272:     T0CS = 0x0;
  1045  0275  1281               	bcf	1,5	;volatile
  1046  0276                     l1245:
  1047                           
  1048                           ;main.c: 273:     PS2 = 0x0;
  1049  0276  1101               	bcf	1,2	;volatile
  1050  0277                     l1247:
  1051                           
  1052                           ;main.c: 274:     PS1 = 0x1;
  1053  0277  1481               	bsf	1,1	;volatile
  1054  0278                     l1249:
  1055                           
  1056                           ;main.c: 275:     PS0 = 0x0;
  1057  0278  1001               	bcf	1,0	;volatile
  1058  0279                     l1251:
  1059                           
  1060                           ;main.c: 279:     ADFM = 0x1;
  1061  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1062  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1063  027B  179F               	bsf	31,7	;volatile
  1064  027C                     l1253:
  1065                           
  1066                           ;main.c: 280:     VCFG = 0x0;
  1067  027C  131F               	bcf	31,6	;volatile
  1068  027D                     l1255:
  1069                           
  1070                           ;main.c: 281:     ADON = 0x0;
  1071  027D  101F               	bcf	31,0	;volatile
  1072  027E                     l1257:
  1073                           
  1074                           ;main.c: 282:     ADCS2 = 0x0;
  1075  027E  1683               	bsf	3,5	;RP0=1, select bank1
  1076  027F  1303               	bcf	3,6	;RP1=0, select bank1
  1077  0280  131F               	bcf	31,6	;volatile
  1078  0281                     l1259:
  1079                           
  1080                           ;main.c: 283:     ADCS1 = 0x1;
  1081  0281  169F               	bsf	31,5	;volatile
  1082  0282                     l1261:
  1083                           
  1084                           ;main.c: 284:     ADCS0 = 0x1;
  1085  0282  161F               	bsf	31,4	;volatile
  1086                           
  1087                           ;main.c: 285:     ANSEL = 0xC;
  1088  0283  300C               	movlw	12
  1089  0284  1283               	bcf	3,5	;RP0=0, select bank2
  1090  0285  1703               	bsf	3,6	;RP1=1, select bank2
  1091  0286  009E               	movwf	30	;volatile
  1092  0287                     l1263:
  1093                           
  1094                           ;main.c: 286:     ANSELH = 0x0;
  1095  0287  019F               	clrf	31	;volatile
  1096  0288                     l1265:
  1097                           
  1098                           ;main.c: 290:     TRISA5 = 0x1;
  1099  0288  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0289  1303               	bcf	3,6	;RP1=0, select bank1
  1101  028A  1685               	bsf	5,5	;volatile
  1102  028B                     l1267:
  1103                           
  1104                           ;main.c: 291:     TRISB4 = 0x0;
  1105  028B  1206               	bcf	6,4	;volatile
  1106  028C                     l1269:
  1107                           
  1108                           ;main.c: 292:     TRISC0 = 0x0;
  1109  028C  1007               	bcf	7,0	;volatile
  1110  028D                     l128:
  1111  028D  0008               	return
  1112  028E                     __end_of_setup:
  1113                           
  1114                           	psect	text3
  1115  02BD                     __ptext3:	
  1116 ;; *************** function _set_pwm_enabled *****************
  1117 ;; Defined at:
  1118 ;;		line 330 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  enabled         1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  enabled         1    9[BANK0 ] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1
  1132 ;;      Params:         0       0       0
  1133 ;;      Locals:         0       1       0
  1134 ;;      Temps:          0       0       0
  1135 ;;      Totals:         0       1       0
  1136 ;;Total ram usage:        1 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    3
  1139 ;; This function calls:
  1140 ;;		_set_pwm_cycle
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _set_pwm_enabled
  1148  02BD                     _set_pwm_enabled:
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in _set_pwm_enabled: [wreg+status,2+status,0+pclath+cstack]
  1152                           ;set_pwm_enabled@enabled stored from wreg
  1153  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1154  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1155  02BF  00A9               	movwf	set_pwm_enabled@enabled
  1156  02C0                     l1537:
  1157                           
  1158                           ;main.c: 334:     PWM_ENABLED = (enabled & 0x1);
  1159  02C0  107B               	bcf	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  1160  02C1  1C29               	btfss	set_pwm_enabled@enabled,0
  1161  02C2  2AC4               	goto	u1245
  1162  02C3  147B               	bsf	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  1163  02C4                     u1245:
  1164  02C4                     l1539:
  1165                           
  1166                           ;main.c: 335:     PWM_TICKS = 0x0;
  1167  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1168  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1169  02C6  01BE               	clrf	_PWM_TICKS	;volatile
  1170  02C7  01BF               	clrf	_PWM_TICKS+1	;volatile
  1171  02C8                     l1541:
  1172                           
  1173                           ;main.c: 337:     if (PWM_ON == 0x0 && PWM_OFF == 0x0) {
  1174  02C8  083C               	movf	_PWM_ON,w
  1175  02C9  043D               	iorwf	_PWM_ON+1,w
  1176  02CA  1D03               	btfss	3,2
  1177  02CB  2ACD               	goto	u1251
  1178  02CC  2ACE               	goto	u1250
  1179  02CD                     u1251:
  1180  02CD  2AD6               	goto	l1547
  1181  02CE                     u1250:
  1182  02CE                     l1543:
  1183  02CE  083A               	movf	_PWM_OFF,w
  1184  02CF  043B               	iorwf	_PWM_OFF+1,w
  1185  02D0  1D03               	btfss	3,2
  1186  02D1  2AD3               	goto	u1261
  1187  02D2  2AD4               	goto	u1260
  1188  02D3                     u1261:
  1189  02D3  2AD6               	goto	l1547
  1190  02D4                     u1260:
  1191  02D4                     l1545:
  1192                           
  1193                           ;main.c: 338:         set_pwm_cycle(50);
  1194  02D4  3032               	movlw	50
  1195  02D5  228E               	fcall	_set_pwm_cycle
  1196  02D6                     l1547:
  1197                           
  1198                           ;main.c: 341:     RB4 = (enabled & 0x1);
  1199  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1200  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  1201  02D8  1829               	btfsc	set_pwm_enabled@enabled,0
  1202  02D9  2ADB               	goto	u1271
  1203  02DA  2ADF               	goto	u1270
  1204  02DB                     u1271:
  1205  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1206  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1207  02DD  1606               	bsf	6,4	;volatile
  1208  02DE  2AE2               	goto	u1284
  1209  02DF                     u1270:
  1210  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1211  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1212  02E1  1206               	bcf	6,4	;volatile
  1213  02E2                     u1284:
  1214  02E2                     l135:
  1215  02E2  0008               	return
  1216  02E3                     __end_of_set_pwm_enabled:
  1217                           
  1218                           	psect	text4
  1219  028E                     __ptext4:	
  1220 ;; *************** function _set_pwm_cycle *****************
  1221 ;; Defined at:
  1222 ;;		line 307 in file "main.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  cycle           1    wreg     unsigned char 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  cycle           1    8[BANK0 ] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1
  1236 ;;      Params:         0       0       0
  1237 ;;      Locals:         0       1       0
  1238 ;;      Temps:          2       0       0
  1239 ;;      Totals:         2       1       0
  1240 ;;Total ram usage:        3 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    2
  1243 ;; This function calls:
  1244 ;;		___awdiv
  1245 ;;		___wmul
  1246 ;; This function is called by:
  1247 ;;		_set_pwm_enabled
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _set_pwm_cycle
  1254  028E                     _set_pwm_cycle:
  1255                           
  1256                           ;incstack = 0
  1257                           ; Regs used in _set_pwm_cycle: [wreg+status,2+status,0+pclath+cstack]
  1258                           ;set_pwm_cycle@cycle stored from wreg
  1259  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1260  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0290  00A8               	movwf	set_pwm_cycle@cycle
  1262  0291                     l1505:
  1263                           
  1264                           ;main.c: 311:     PWM_TICKS = 0x0;
  1265  0291  01BE               	clrf	_PWM_TICKS	;volatile
  1266  0292  01BF               	clrf	_PWM_TICKS+1	;volatile
  1267  0293                     l1507:
  1268                           
  1269                           ;main.c: 312:     PWM_ON = ((cycle * 500) / 100);
  1270  0293  3064               	movlw	100
  1271  0294  00A0               	movwf	___awdiv@divisor
  1272  0295  3000               	movlw	0
  1273  0296  00A1               	movwf	___awdiv@divisor+1
  1274  0297  0828               	movf	set_pwm_cycle@cycle,w
  1275  0298  00F9               	movwf	??_set_pwm_cycle
  1276  0299  01FA               	clrf	??_set_pwm_cycle+1
  1277  029A  0879               	movf	??_set_pwm_cycle,w
  1278  029B  00F2               	movwf	___wmul@multiplier
  1279  029C  087A               	movf	??_set_pwm_cycle+1,w
  1280  029D  00F3               	movwf	___wmul@multiplier+1
  1281  029E  30F4               	movlw	244
  1282  029F  00F4               	movwf	___wmul@multiplicand
  1283  02A0  3001               	movlw	1
  1284  02A1  00F5               	movwf	___wmul@multiplicand+1
  1285  02A2  232F               	fcall	___wmul
  1286  02A3  0873               	movf	?___wmul+1,w
  1287  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1288  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1289  02A6  00A3               	movwf	___awdiv@dividend+1
  1290  02A7  0872               	movf	?___wmul,w
  1291  02A8  00A2               	movwf	___awdiv@dividend
  1292  02A9  20D7               	fcall	___awdiv
  1293  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1294  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1295  02AC  0821               	movf	?___awdiv+1,w
  1296  02AD  00BD               	movwf	_PWM_ON+1
  1297  02AE  0820               	movf	?___awdiv,w
  1298  02AF  00BC               	movwf	_PWM_ON
  1299  02B0                     l1509:
  1300                           
  1301                           ;main.c: 313:     PWM_OFF = 500 - PWM_ON;
  1302  02B0  30F4               	movlw	244
  1303  02B1  00F9               	movwf	??_set_pwm_cycle
  1304  02B2  3001               	movlw	1
  1305  02B3  00FA               	movwf	??_set_pwm_cycle+1
  1306  02B4  083C               	movf	_PWM_ON,w
  1307  02B5  0279               	subwf	??_set_pwm_cycle,w
  1308  02B6  00BA               	movwf	_PWM_OFF
  1309  02B7  083D               	movf	_PWM_ON+1,w
  1310  02B8  1C03               	skipc
  1311  02B9  0A3D               	incf	_PWM_ON+1,w
  1312  02BA  027A               	subwf	??_set_pwm_cycle+1,w
  1313  02BB  00BB               	movwf	_PWM_OFF+1
  1314  02BC                     l131:
  1315  02BC  0008               	return
  1316  02BD                     __end_of_set_pwm_cycle:
  1317                           
  1318                           	psect	text5
  1319  0372                     __ptext5:	
  1320 ;; *************** function _read_data *****************
  1321 ;; Defined at:
  1322 ;;		line 490 in file "main.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  address         1    wreg     unsigned char 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  address         1    3[COMMON] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      unsigned char 
  1329 ;; Registers used:
  1330 ;;		wreg
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1
  1336 ;;      Params:         0       0       0
  1337 ;;      Locals:         1       0       0
  1338 ;;      Temps:          1       0       0
  1339 ;;      Totals:         2       0       0
  1340 ;;Total ram usage:        2 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _read_data
  1352  0372                     _read_data:
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _read_data: [wreg]
  1356                           ;read_data@address stored from wreg
  1357  0372  00F3               	movwf	read_data@address
  1358  0373                     l1329:
  1359                           
  1360                           ;main.c: 490: unsigned char read_data(unsigned char address);main.c: 491: {;main.c: 494:
      +                               GIE = 0x0;
  1361  0373  138B               	bcf	11,7	;volatile
  1362  0374                     l1331:
  1363                           
  1364                           ;main.c: 495:     EEADR = address;
  1365  0374  0873               	movf	read_data@address,w
  1366  0375  1283               	bcf	3,5	;RP0=0, select bank2
  1367  0376  1703               	bsf	3,6	;RP1=1, select bank2
  1368  0377  008D               	movwf	13	;volatile
  1369                           
  1370                           ;main.c: 496:     EECON1 = 0x1;
  1371  0378  3001               	movlw	1
  1372  0379  1683               	bsf	3,5	;RP0=1, select bank3
  1373  037A  1703               	bsf	3,6	;RP1=1, select bank3
  1374  037B  008C               	movwf	12	;volsfr
  1375  037C                     l1333:
  1376                           
  1377                           ;main.c: 497:     RD = 0x1;
  1378  037C  140C               	bsf	12,0	;volsfr
  1379                           
  1380                           ;main.c: 499:     while (RD == 0x1) {
  1381  037D  2B82               	goto	l1337
  1382  037E                     l1335:
  1383                           
  1384                           ;main.c: 500:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1385  037E  3003               	movlw	3
  1386  037F  00F2               	movwf	??_read_data
  1387  0380                     u1457:
  1388  0380  0BF2               	decfsz	??_read_data,f
  1389  0381  2B80               	goto	u1457
  1390  0382                     l1337:
  1391                           
  1392                           ;main.c: 499:     while (RD == 0x1) {
  1393  0382  1683               	bsf	3,5	;RP0=1, select bank3
  1394  0383  1703               	bsf	3,6	;RP1=1, select bank3
  1395  0384  180C               	btfsc	12,0	;volsfr
  1396  0385  2B87               	goto	u851
  1397  0386  2B88               	goto	u850
  1398  0387                     u851:
  1399  0387  2B7E               	goto	l1335
  1400  0388                     u850:
  1401  0388                     l168:
  1402                           
  1403                           ;main.c: 503:     GIE = 0x1;
  1404  0388  178B               	bsf	11,7	;volatile
  1405  0389                     l1339:
  1406                           
  1407                           ;main.c: 505:     return EEDAT;
  1408  0389  1283               	bcf	3,5	;RP0=0, select bank2
  1409  038A  1703               	bsf	3,6	;RP1=1, select bank2
  1410  038B  080C               	movf	12,w	;volatile
  1411  038C                     l169:
  1412  038C  0008               	return
  1413  038D                     __end_of_read_data:
  1414                           
  1415                           	psect	text6
  1416  02E3                     __ptext6:	
  1417 ;; *************** function _probe_temp *****************
  1418 ;; Defined at:
  1419 ;;		line 423 in file "main.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1
  1433 ;;      Params:         0       0       0
  1434 ;;      Locals:         0       0       0
  1435 ;;      Temps:          2       0       0
  1436 ;;      Totals:         2       0       0
  1437 ;;Total ram usage:        2 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _probe_temp
  1449  02E3                     _probe_temp:
  1450  02E3                     l1305:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _probe_temp: [wreg]
  1453                           
  1454                           
  1455                           ;main.c: 427:     CHS3 = 0x0;
  1456  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1457  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1458  02E5  129F               	bcf	31,5	;volatile
  1459                           
  1460                           ;main.c: 428:     CHS2 = 0x0;
  1461  02E6  121F               	bcf	31,4	;volatile
  1462                           
  1463                           ;main.c: 429:     CHS1 = 0x1;
  1464  02E7  159F               	bsf	31,3	;volatile
  1465                           
  1466                           ;main.c: 430:     CHS0 = 0x1;
  1467  02E8  151F               	bsf	31,2	;volatile
  1468                           
  1469                           ;main.c: 432:     ADON = 0x1;
  1470  02E9  141F               	bsf	31,0	;volatile
  1471  02EA                     l1307:
  1472                           
  1473                           ;main.c: 434:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1474  02EA  3027               	movlw	39
  1475  02EB  00F3               	movwf	??_probe_temp+1
  1476  02EC  30F5               	movlw	245
  1477  02ED  00F2               	movwf	??_probe_temp
  1478  02EE                     u1467:
  1479  02EE  0BF2               	decfsz	??_probe_temp,f
  1480  02EF  2AEE               	goto	u1467
  1481  02F0  0BF3               	decfsz	??_probe_temp+1,f
  1482  02F1  2AEE               	goto	u1467
  1483  02F2                     l1309:
  1484                           
  1485                           ;main.c: 436:     GO = 0x1;
  1486  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1487  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1488  02F4  149F               	bsf	31,1	;volatile
  1489                           
  1490                           ;main.c: 438:     while (!GO) {
  1491  02F5  2AFA               	goto	l1313
  1492  02F6                     l1311:
  1493                           
  1494                           ;main.c: 439:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1495  02F6  3003               	movlw	3
  1496  02F7  00F2               	movwf	??_probe_temp
  1497  02F8                     u1477:
  1498  02F8  0BF2               	decfsz	??_probe_temp,f
  1499  02F9  2AF8               	goto	u1477
  1500  02FA                     l1313:
  1501                           
  1502                           ;main.c: 438:     while (!GO) {
  1503  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1504  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1505  02FC  1C9F               	btfss	31,1	;volatile
  1506  02FD  2AFF               	goto	u831
  1507  02FE  2B00               	goto	u830
  1508  02FF                     u831:
  1509  02FF  2AF6               	goto	l1311
  1510  0300                     u830:
  1511  0300                     l1315:
  1512                           
  1513                           ;main.c: 442:     ADC_TEMP = (ADRESH << 8) | ADRESL;
  1514  0300  081E               	movf	30,w	;volatile
  1515  0301  00C3               	movwf	_ADC_TEMP+1
  1516  0302  1683               	bsf	3,5	;RP0=1, select bank1
  1517  0303  1303               	bcf	3,6	;RP1=0, select bank1
  1518  0304  081E               	movf	30,w	;volatile
  1519  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0307  00C2               	movwf	_ADC_TEMP
  1522  0308                     l157:
  1523  0308  0008               	return
  1524  0309                     __end_of_probe_temp:
  1525                           
  1526                           	psect	text7
  1527  0309                     __ptext7:	
  1528 ;; *************** function _probe_bat *****************
  1529 ;; Defined at:
  1530 ;;		line 455 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1
  1544 ;;      Params:         0       0       0
  1545 ;;      Locals:         0       0       0
  1546 ;;      Temps:          2       0       0
  1547 ;;      Totals:         2       0       0
  1548 ;;Total ram usage:        2 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _probe_bat
  1560  0309                     _probe_bat:
  1561  0309                     l1317:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _probe_bat: [wreg]
  1564                           
  1565                           
  1566                           ;main.c: 459:     CHS3 = 0x0;
  1567  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1568  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1569  030B  129F               	bcf	31,5	;volatile
  1570                           
  1571                           ;main.c: 460:     CHS2 = 0x0;
  1572  030C  121F               	bcf	31,4	;volatile
  1573                           
  1574                           ;main.c: 461:     CHS1 = 0x1;
  1575  030D  159F               	bsf	31,3	;volatile
  1576                           
  1577                           ;main.c: 462:     CHS0 = 0x0;
  1578  030E  111F               	bcf	31,2	;volatile
  1579                           
  1580                           ;main.c: 464:     ADON = 0x1;
  1581  030F  141F               	bsf	31,0	;volatile
  1582  0310                     l1319:
  1583                           
  1584                           ;main.c: 466:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1585  0310  3027               	movlw	39
  1586  0311  00F3               	movwf	??_probe_bat+1
  1587  0312  30F5               	movlw	245
  1588  0313  00F2               	movwf	??_probe_bat
  1589  0314                     u1487:
  1590  0314  0BF2               	decfsz	??_probe_bat,f
  1591  0315  2B14               	goto	u1487
  1592  0316  0BF3               	decfsz	??_probe_bat+1,f
  1593  0317  2B14               	goto	u1487
  1594  0318                     l1321:
  1595                           
  1596                           ;main.c: 468:     GO = 0x1;
  1597  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1599  031A  149F               	bsf	31,1	;volatile
  1600                           
  1601                           ;main.c: 470:     while (!GO) {
  1602  031B  2B20               	goto	l1325
  1603  031C                     l1323:
  1604                           
  1605                           ;main.c: 471:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1606  031C  3003               	movlw	3
  1607  031D  00F2               	movwf	??_probe_bat
  1608  031E                     u1497:
  1609  031E  0BF2               	decfsz	??_probe_bat,f
  1610  031F  2B1E               	goto	u1497
  1611  0320                     l1325:
  1612                           
  1613                           ;main.c: 470:     while (!GO) {
  1614  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0322  1C9F               	btfss	31,1	;volatile
  1617  0323  2B25               	goto	u841
  1618  0324  2B26               	goto	u840
  1619  0325                     u841:
  1620  0325  2B1C               	goto	l1323
  1621  0326                     u840:
  1622  0326                     l1327:
  1623                           
  1624                           ;main.c: 474:     ADC_REF = (ADRESH << 8) | ADRESL;
  1625  0326  081E               	movf	30,w	;volatile
  1626  0327  00C1               	movwf	_ADC_REF+1
  1627  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1629  032A  081E               	movf	30,w	;volatile
  1630  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1631  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1632  032D  00C0               	movwf	_ADC_REF
  1633  032E                     l163:
  1634  032E  0008               	return
  1635  032F                     __end_of_probe_bat:
  1636                           
  1637                           	psect	text8
  1638  038D                     __ptext8:	
  1639 ;; *************** function _is_shutdown *****************
  1640 ;; Defined at:
  1641 ;;		line 557 in file "main.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;		None               void
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1
  1655 ;;      Params:         0       0       0
  1656 ;;      Locals:         0       0       0
  1657 ;;      Temps:          1       0       0
  1658 ;;      Totals:         1       0       0
  1659 ;;Total ram usage:        1 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _is_shutdown
  1671  038D                     _is_shutdown:
  1672  038D                     l1365:	
  1673                           ;incstack = 0
  1674                           ; Regs used in _is_shutdown: [wreg+status,2+status,0]
  1675                           
  1676                           
  1677                           ;main.c: 561:     if (PWM_ENABLED == 0x1) {
  1678  038D  1C7B               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  1679  038E  2B90               	goto	u871
  1680  038F  2B91               	goto	u870
  1681  0390                     u871:
  1682  0390  2BA0               	goto	l1373
  1683  0391                     u870:
  1684  0391  2B96               	goto	l1371
  1685  0392                     l1369:
  1686                           
  1687                           ;main.c: 564:             _delay((unsigned long)((10)*(4000000/4000000.0)));
  1688  0392  3003               	movlw	3
  1689  0393  00F2               	movwf	??_is_shutdown
  1690  0394                     u1507:
  1691  0394  0BF2               	decfsz	??_is_shutdown,f
  1692  0395  2B94               	goto	u1507
  1693  0396                     l1371:
  1694                           
  1695                           ;main.c: 563:         while (RB4 == 0x0) {
  1696  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0398  1E06               	btfss	6,4	;volatile
  1699  0399  2B9B               	goto	u881
  1700  039A  2B9C               	goto	u880
  1701  039B                     u881:
  1702  039B  2B92               	goto	l1369
  1703  039C                     u880:
  1704  039C                     l181:
  1705                           
  1706                           ;main.c: 567:         return RB5 == 0x0;
  1707  039C  1E86               	btfss	6,5	;volatile
  1708  039D  2B9F               	goto	u891
  1709  039E  2BA0               	goto	u890
  1710  039F                     u891:
  1711  039F  2BA2               	goto	l1375
  1712  03A0                     u890:
  1713  03A0                     l1373:
  1714  03A0  1003               	clrc
  1715  03A1  2BA3               	goto	l186
  1716  03A2                     l1375:
  1717  03A2  1403               	setc
  1718  03A3                     l186:
  1719  03A3  0008               	return
  1720  03A4                     __end_of_is_shutdown:
  1721                           
  1722                           	psect	text9
  1723  0226                     __ptext9:	
  1724 ;; *************** function _calc_cycle *****************
  1725 ;; Defined at:
  1726 ;;		line 356 in file "main.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  charge          1    wreg     unsigned char 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  charge          1   17[BANK0 ] unsigned char 
  1731 ;;  current         2    0        unsigned int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      unsigned char 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1
  1741 ;;      Params:         0       0       0
  1742 ;;      Locals:         0       5       0
  1743 ;;      Temps:          0       2       0
  1744 ;;      Totals:         0       7       0
  1745 ;;Total ram usage:        7 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    2
  1748 ;; This function calls:
  1749 ;;		___awdiv
  1750 ;;		___lwdiv
  1751 ;;		___wmul
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _calc_cycle
  1759  0226                     _calc_cycle:
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _calc_cycle: [wreg+status,2+status,0+pclath+cstack]
  1763                           ;calc_cycle@charge stored from wreg
  1764  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0228  00B1               	movwf	calc_cycle@charge
  1767  0229                     l1549:
  1768  0229                     l1553:	
  1769                           ;main.c: 364:     if (350 > 3000) {
  1770                           
  1771                           
  1772                           ;main.c: 368:     return (unsigned char)((100 * (current * (charge / 100))) / current);
  1773  0229  3064               	movlw	100
  1774  022A  00A0               	movwf	___awdiv@divisor
  1775  022B  3000               	movlw	0
  1776  022C  00A1               	movwf	___awdiv@divisor+1
  1777  022D  0831               	movf	calc_cycle@charge,w
  1778  022E  00AF               	movwf	??_calc_cycle
  1779  022F  01B0               	clrf	??_calc_cycle+1
  1780  0230  082F               	movf	??_calc_cycle,w
  1781  0231  00A2               	movwf	___awdiv@dividend
  1782  0232  0830               	movf	??_calc_cycle+1,w
  1783  0233  00A3               	movwf	___awdiv@dividend+1
  1784  0234  20D7               	fcall	___awdiv
  1785  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0237  0821               	movf	?___awdiv+1,w
  1788  0238  00F3               	movwf	___wmul@multiplier+1
  1789  0239  0820               	movf	?___awdiv,w
  1790  023A  00F2               	movwf	___wmul@multiplier
  1791  023B  305E               	movlw	94
  1792  023C  00F4               	movwf	___wmul@multiplicand
  1793  023D  3001               	movlw	1
  1794  023E  00F5               	movwf	___wmul@multiplicand+1
  1795  023F  232F               	fcall	___wmul
  1796  0240  0873               	movf	?___wmul+1,w
  1797  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0243  00B3               	movwf	_calc_cycle$731+1
  1800  0244  0872               	movf	?___wmul,w
  1801  0245  00B2               	movwf	_calc_cycle$731
  1802                           
  1803                           ;main.c: 368:     return (unsigned char)((100 * (current * (charge / 100))) / current);
  1804  0246  305E               	movlw	94
  1805  0247  00A8               	movwf	___lwdiv@divisor
  1806  0248  3001               	movlw	1
  1807  0249  00A9               	movwf	___lwdiv@divisor+1
  1808  024A  0833               	movf	_calc_cycle$731+1,w
  1809  024B  00F3               	movwf	___wmul@multiplier+1
  1810  024C  0832               	movf	_calc_cycle$731,w
  1811  024D  00F2               	movwf	___wmul@multiplier
  1812  024E  3064               	movlw	100
  1813  024F  00F4               	movwf	___wmul@multiplicand
  1814  0250  3000               	movlw	0
  1815  0251  00F5               	movwf	___wmul@multiplicand+1
  1816  0252  232F               	fcall	___wmul
  1817  0253  0873               	movf	?___wmul+1,w
  1818  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0256  00AB               	movwf	___lwdiv@dividend+1
  1821  0257  0872               	movf	?___wmul,w
  1822  0258  00AA               	movwf	___lwdiv@dividend
  1823  0259  21A2               	fcall	___lwdiv
  1824  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1825  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1826  025C  0828               	movf	?___lwdiv,w
  1827  025D                     l139:
  1828  025D  0008               	return
  1829  025E                     __end_of_calc_cycle:
  1830                           
  1831                           	psect	text10
  1832  032F                     __ptext10:	
  1833 ;; *************** function ___wmul *****************
  1834 ;; Defined at:
  1835 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  multiplier      2    2[COMMON] unsigned int 
  1838 ;;  multiplicand    2    4[COMMON] unsigned int 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  product         2    6[COMMON] unsigned int 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  2    2[COMMON] unsigned int 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1
  1850 ;;      Params:         4       0       0
  1851 ;;      Locals:         2       0       0
  1852 ;;      Temps:          0       0       0
  1853 ;;      Totals:         6       0       0
  1854 ;;Total ram usage:        6 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    1
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_set_pwm_cycle
  1861 ;;		_calc_cycle
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function ___wmul
  1867  032F                     ___wmul:
  1868  032F                     l1133:	
  1869                           ;incstack = 0
  1870                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1871                           
  1872  032F  01F6               	clrf	___wmul@product
  1873  0330  01F7               	clrf	___wmul@product+1
  1874  0331                     l1135:
  1875  0331  1C72               	btfss	___wmul@multiplier,0
  1876  0332  2B34               	goto	u541
  1877  0333  2B35               	goto	u540
  1878  0334                     u541:
  1879  0334  2B3B               	goto	l299
  1880  0335                     u540:
  1881  0335                     l1137:
  1882  0335  0874               	movf	___wmul@multiplicand,w
  1883  0336  07F6               	addwf	___wmul@product,f
  1884  0337  1803               	skipnc
  1885  0338  0AF7               	incf	___wmul@product+1,f
  1886  0339  0875               	movf	___wmul@multiplicand+1,w
  1887  033A  07F7               	addwf	___wmul@product+1,f
  1888  033B                     l299:
  1889  033B  3001               	movlw	1
  1890  033C                     u555:
  1891  033C  1003               	clrc
  1892  033D  0DF4               	rlf	___wmul@multiplicand,f
  1893  033E  0DF5               	rlf	___wmul@multiplicand+1,f
  1894  033F  3EFF               	addlw	-1
  1895  0340  1D03               	skipz
  1896  0341  2B3C               	goto	u555
  1897  0342                     l1139:
  1898  0342  3001               	movlw	1
  1899  0343                     u565:
  1900  0343  1003               	clrc
  1901  0344  0CF3               	rrf	___wmul@multiplier+1,f
  1902  0345  0CF2               	rrf	___wmul@multiplier,f
  1903  0346  3EFF               	addlw	-1
  1904  0347  1D03               	skipz
  1905  0348  2B43               	goto	u565
  1906  0349                     l1141:
  1907  0349  0872               	movf	___wmul@multiplier,w
  1908  034A  0473               	iorwf	___wmul@multiplier+1,w
  1909  034B  1D03               	btfss	3,2
  1910  034C  2B4E               	goto	u571
  1911  034D  2B4F               	goto	u570
  1912  034E                     u571:
  1913  034E  2B31               	goto	l1135
  1914  034F                     u570:
  1915  034F                     l1143:
  1916  034F  0877               	movf	___wmul@product+1,w
  1917  0350  00F3               	movwf	?___wmul+1
  1918  0351  0876               	movf	___wmul@product,w
  1919  0352  00F2               	movwf	?___wmul
  1920  0353                     l301:
  1921  0353  0008               	return
  1922  0354                     __end_of___wmul:
  1923                           
  1924                           	psect	text11
  1925  01A2                     __ptext11:	
  1926 ;; *************** function ___lwdiv *****************
  1927 ;; Defined at:
  1928 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  divisor         2    8[BANK0 ] unsigned int 
  1931 ;;  dividend        2   10[BANK0 ] unsigned int 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  quotient        2   13[BANK0 ] unsigned int 
  1934 ;;  counter         1   12[BANK0 ] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2    8[BANK0 ] unsigned int 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1
  1944 ;;      Params:         0       4       0
  1945 ;;      Locals:         0       3       0
  1946 ;;      Temps:          1       0       0
  1947 ;;      Totals:         1       7       0
  1948 ;;Total ram usage:        8 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_calc_cycle
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function ___lwdiv
  1960  01A2                     ___lwdiv:
  1961  01A2                     l1511:	
  1962                           ;incstack = 0
  1963                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1964                           
  1965  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1966  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1967  01A4  01AD               	clrf	___lwdiv@quotient
  1968  01A5  01AE               	clrf	___lwdiv@quotient+1
  1969  01A6                     l1513:
  1970  01A6  0828               	movf	___lwdiv@divisor,w
  1971  01A7  0429               	iorwf	___lwdiv@divisor+1,w
  1972  01A8  1903               	btfsc	3,2
  1973  01A9  29AB               	goto	u1171
  1974  01AA  29AC               	goto	u1170
  1975  01AB                     u1171:
  1976  01AB  29E3               	goto	l1533
  1977  01AC                     u1170:
  1978  01AC                     l1515:
  1979  01AC  01AC               	clrf	___lwdiv@counter
  1980  01AD  0AAC               	incf	___lwdiv@counter,f
  1981  01AE  29BA               	goto	l1521
  1982  01AF                     l1517:
  1983  01AF  3001               	movlw	1
  1984  01B0                     u1185:
  1985  01B0  1003               	clrc
  1986  01B1  0DA8               	rlf	___lwdiv@divisor,f
  1987  01B2  0DA9               	rlf	___lwdiv@divisor+1,f
  1988  01B3  3EFF               	addlw	-1
  1989  01B4  1D03               	skipz
  1990  01B5  29B0               	goto	u1185
  1991  01B6                     l1519:
  1992  01B6  3001               	movlw	1
  1993  01B7  00F9               	movwf	??___lwdiv
  1994  01B8  0879               	movf	??___lwdiv,w
  1995  01B9  07AC               	addwf	___lwdiv@counter,f
  1996  01BA                     l1521:
  1997  01BA  1FA9               	btfss	___lwdiv@divisor+1,7
  1998  01BB  29BD               	goto	u1191
  1999  01BC  29BE               	goto	u1190
  2000  01BD                     u1191:
  2001  01BD  29AF               	goto	l1517
  2002  01BE                     u1190:
  2003  01BE                     l1523:
  2004  01BE  3001               	movlw	1
  2005  01BF                     u1205:
  2006  01BF  1003               	clrc
  2007  01C0  0DAD               	rlf	___lwdiv@quotient,f
  2008  01C1  0DAE               	rlf	___lwdiv@quotient+1,f
  2009  01C2  3EFF               	addlw	-1
  2010  01C3  1D03               	skipz
  2011  01C4  29BF               	goto	u1205
  2012  01C5  0829               	movf	___lwdiv@divisor+1,w
  2013  01C6  022B               	subwf	___lwdiv@dividend+1,w
  2014  01C7  1D03               	skipz
  2015  01C8  29CB               	goto	u1215
  2016  01C9  0828               	movf	___lwdiv@divisor,w
  2017  01CA  022A               	subwf	___lwdiv@dividend,w
  2018  01CB                     u1215:
  2019  01CB  1C03               	skipc
  2020  01CC  29CE               	goto	u1211
  2021  01CD  29CF               	goto	u1210
  2022  01CE                     u1211:
  2023  01CE  29D6               	goto	l1529
  2024  01CF                     u1210:
  2025  01CF                     l1525:
  2026  01CF  0828               	movf	___lwdiv@divisor,w
  2027  01D0  02AA               	subwf	___lwdiv@dividend,f
  2028  01D1  0829               	movf	___lwdiv@divisor+1,w
  2029  01D2  1C03               	skipc
  2030  01D3  03AB               	decf	___lwdiv@dividend+1,f
  2031  01D4  02AB               	subwf	___lwdiv@dividend+1,f
  2032  01D5                     l1527:
  2033  01D5  142D               	bsf	___lwdiv@quotient,0
  2034  01D6                     l1529:
  2035  01D6  3001               	movlw	1
  2036  01D7                     u1225:
  2037  01D7  1003               	clrc
  2038  01D8  0CA9               	rrf	___lwdiv@divisor+1,f
  2039  01D9  0CA8               	rrf	___lwdiv@divisor,f
  2040  01DA  3EFF               	addlw	-1
  2041  01DB  1D03               	skipz
  2042  01DC  29D7               	goto	u1225
  2043  01DD                     l1531:
  2044  01DD  3001               	movlw	1
  2045  01DE  02AC               	subwf	___lwdiv@counter,f
  2046  01DF  1D03               	btfss	3,2
  2047  01E0  29E2               	goto	u1231
  2048  01E1  29E3               	goto	u1230
  2049  01E2                     u1231:
  2050  01E2  29BE               	goto	l1523
  2051  01E3                     u1230:
  2052  01E3                     l1533:
  2053  01E3  082E               	movf	___lwdiv@quotient+1,w
  2054  01E4  00A9               	movwf	?___lwdiv+1
  2055  01E5  082D               	movf	___lwdiv@quotient,w
  2056  01E6  00A8               	movwf	?___lwdiv
  2057  01E7                     l571:
  2058  01E7  0008               	return
  2059  01E8                     __end_of___lwdiv:
  2060                           
  2061                           	psect	text12
  2062  0140                     __ptext12:	
  2063 ;; *************** function _blink *****************
  2064 ;; Defined at:
  2065 ;;		line 383 in file "main.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  n               1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  n               1   11[BANK0 ] unsigned char 
  2070 ;;  i               2   13[BANK0 ] unsigned int 
  2071 ;;  delay           1   12[BANK0 ] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1
  2081 ;;      Params:         0       0       0
  2082 ;;      Locals:         0       4       0
  2083 ;;      Temps:          0       3       0
  2084 ;;      Totals:         0       7       0
  2085 ;;Total ram usage:        7 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    2
  2088 ;; This function calls:
  2089 ;;		___awdiv
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _blink
  2097  0140                     _blink:
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in _blink: [wreg+status,2+status,0+pclath+cstack]
  2101                           ;blink@n stored from wreg
  2102  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0141  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0142  00AB               	movwf	blink@n
  2105  0143                     l1557:
  2106  0143                     l1559:
  2107                           
  2108                           ;main.c: 388:     unsigned char delay = (unsigned char)(3000 / n);
  2109  0143  082B               	movf	blink@n,w
  2110  0144  00A8               	movwf	??_blink
  2111  0145  01A9               	clrf	??_blink+1
  2112  0146  0828               	movf	??_blink,w
  2113  0147  00A0               	movwf	___awdiv@divisor
  2114  0148  0829               	movf	??_blink+1,w
  2115  0149  00A1               	movwf	___awdiv@divisor+1
  2116  014A  30B8               	movlw	184
  2117  014B  00A2               	movwf	___awdiv@dividend
  2118  014C  300B               	movlw	11
  2119  014D  00A3               	movwf	___awdiv@dividend+1
  2120  014E  20D7               	fcall	___awdiv
  2121  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0151  0820               	movf	?___awdiv,w
  2124  0152  00AA               	movwf	??_blink+2
  2125  0153  082A               	movf	??_blink+2,w
  2126  0154  00AC               	movwf	blink@delay
  2127                           
  2128                           ;main.c: 392:     while (n --) {
  2129  0155  299A               	goto	l1569
  2130  0156                     l143:
  2131                           
  2132                           ;main.c: 394:         RC0 = 0x1;
  2133  0156  1407               	bsf	7,0	;volatile
  2134  0157                     l1561:
  2135                           
  2136                           ;main.c: 396:         for (i = 0; i < delay; i++) {
  2137  0157  01AD               	clrf	blink@i
  2138  0158  01AE               	clrf	blink@i+1
  2139  0159  296B               	goto	l144
  2140  015A                     l1563:
  2141                           
  2142                           ;main.c: 397:             _delay((unsigned long)((1)*(4000000/4000.0)));
  2143  015A  30C7               	movlw	199
  2144  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2145  015C  1303               	bcf	3,6	;RP1=0, select bank0
  2146  015D  00A8               	movwf	??_blink
  2147  015E                     u1517:
  2148  015E  295F               	nop2
  2149  015F  0BA8               	decfsz	??_blink,f
  2150  0160  295E               	goto	u1517
  2151  0161  2962               	nop2
  2152  0162  0000               	nop
  2153                           
  2154                           ;main.c: 399:         }
  2155  0163  3001               	movlw	1
  2156  0164  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0165  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0166  07AD               	addwf	blink@i,f
  2159  0167  1803               	skipnc
  2160  0168  0AAE               	incf	blink@i+1,f
  2161  0169  3000               	movlw	0
  2162  016A  07AE               	addwf	blink@i+1,f
  2163  016B                     l144:
  2164  016B  082C               	movf	blink@delay,w
  2165  016C  00A8               	movwf	??_blink
  2166  016D  01A9               	clrf	??_blink+1
  2167  016E  0829               	movf	??_blink+1,w
  2168  016F  022E               	subwf	blink@i+1,w
  2169  0170  1D03               	skipz
  2170  0171  2974               	goto	u1295
  2171  0172  0828               	movf	??_blink,w
  2172  0173  022D               	subwf	blink@i,w
  2173  0174                     u1295:
  2174  0174  1C03               	skipc
  2175  0175  2977               	goto	u1291
  2176  0176  2978               	goto	u1290
  2177  0177                     u1291:
  2178  0177  295A               	goto	l1563
  2179  0178                     u1290:
  2180  0178                     l146:
  2181                           
  2182                           ;main.c: 401:         RC0 = 0x0;
  2183  0178  1007               	bcf	7,0	;volatile
  2184  0179                     l1565:
  2185                           
  2186                           ;main.c: 403:         for (i = 0; i < delay; i++) {
  2187  0179  01AD               	clrf	blink@i
  2188  017A  01AE               	clrf	blink@i+1
  2189  017B  298D               	goto	l147
  2190  017C                     l1567:
  2191                           
  2192                           ;main.c: 404:             _delay((unsigned long)((1)*(4000000/4000.0)));
  2193  017C  30C7               	movlw	199
  2194  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2195  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2196  017F  00A8               	movwf	??_blink
  2197  0180                     u1527:
  2198  0180  2981               	nop2
  2199  0181  0BA8               	decfsz	??_blink,f
  2200  0182  2980               	goto	u1527
  2201  0183  2984               	nop2
  2202  0184  0000               	nop
  2203                           
  2204                           ;main.c: 405:         }
  2205  0185  3001               	movlw	1
  2206  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0188  07AD               	addwf	blink@i,f
  2209  0189  1803               	skipnc
  2210  018A  0AAE               	incf	blink@i+1,f
  2211  018B  3000               	movlw	0
  2212  018C  07AE               	addwf	blink@i+1,f
  2213  018D                     l147:
  2214  018D  082C               	movf	blink@delay,w
  2215  018E  00A8               	movwf	??_blink
  2216  018F  01A9               	clrf	??_blink+1
  2217  0190  0829               	movf	??_blink+1,w
  2218  0191  022E               	subwf	blink@i+1,w
  2219  0192  1D03               	skipz
  2220  0193  2996               	goto	u1305
  2221  0194  0828               	movf	??_blink,w
  2222  0195  022D               	subwf	blink@i,w
  2223  0196                     u1305:
  2224  0196  1C03               	skipc
  2225  0197  2999               	goto	u1301
  2226  0198  299A               	goto	u1300
  2227  0199                     u1301:
  2228  0199  297C               	goto	l1567
  2229  019A                     u1300:
  2230  019A                     l1569:
  2231                           
  2232                           ;main.c: 392:     while (n --) {
  2233  019A  3001               	movlw	1
  2234  019B  02AB               	subwf	blink@n,f
  2235  019C  0A2B               	incf	blink@n,w
  2236  019D  1D03               	btfss	3,2
  2237  019E  29A0               	goto	u1311
  2238  019F  29A1               	goto	u1310
  2239  01A0                     u1311:
  2240  01A0  2956               	goto	l143
  2241  01A1                     u1310:
  2242  01A1                     l151:
  2243  01A1  0008               	return
  2244  01A2                     __end_of_blink:
  2245                           
  2246                           	psect	text13
  2247  00D7                     __ptext13:	
  2248 ;; *************** function ___awdiv *****************
  2249 ;; Defined at:
  2250 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  divisor         2    0[BANK0 ] int 
  2253 ;;  dividend        2    2[BANK0 ] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  quotient        2    6[BANK0 ] int 
  2256 ;;  sign            1    5[BANK0 ] unsigned char 
  2257 ;;  counter         1    4[BANK0 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  2    0[BANK0 ] int 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         0       4       0
  2268 ;;      Locals:         0       4       0
  2269 ;;      Temps:          1       0       0
  2270 ;;      Totals:         1       8       0
  2271 ;;Total ram usage:        9 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_set_pwm_cycle
  2278 ;;		_calc_cycle
  2279 ;;		_blink
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function ___awdiv
  2285  00D7                     ___awdiv:
  2286  00D7                     l1461:	
  2287                           ;incstack = 0
  2288                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2289                           
  2290  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2291  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2292  00D9  01A5               	clrf	___awdiv@sign
  2293  00DA                     l1463:
  2294  00DA  1FA1               	btfss	___awdiv@divisor+1,7
  2295  00DB  28DD               	goto	u1071
  2296  00DC  28DE               	goto	u1070
  2297  00DD                     u1071:
  2298  00DD  28E5               	goto	l1469
  2299  00DE                     u1070:
  2300  00DE                     l1465:
  2301  00DE  09A0               	comf	___awdiv@divisor,f
  2302  00DF  09A1               	comf	___awdiv@divisor+1,f
  2303  00E0  0AA0               	incf	___awdiv@divisor,f
  2304  00E1  1903               	skipnz
  2305  00E2  0AA1               	incf	___awdiv@divisor+1,f
  2306  00E3                     l1467:
  2307  00E3  01A5               	clrf	___awdiv@sign
  2308  00E4  0AA5               	incf	___awdiv@sign,f
  2309  00E5                     l1469:
  2310  00E5  1FA3               	btfss	___awdiv@dividend+1,7
  2311  00E6  28E8               	goto	u1081
  2312  00E7  28E9               	goto	u1080
  2313  00E8                     u1081:
  2314  00E8  28F2               	goto	l1475
  2315  00E9                     u1080:
  2316  00E9                     l1471:
  2317  00E9  09A2               	comf	___awdiv@dividend,f
  2318  00EA  09A3               	comf	___awdiv@dividend+1,f
  2319  00EB  0AA2               	incf	___awdiv@dividend,f
  2320  00EC  1903               	skipnz
  2321  00ED  0AA3               	incf	___awdiv@dividend+1,f
  2322  00EE                     l1473:
  2323  00EE  3001               	movlw	1
  2324  00EF  00F8               	movwf	??___awdiv
  2325  00F0  0878               	movf	??___awdiv,w
  2326  00F1  06A5               	xorwf	___awdiv@sign,f
  2327  00F2                     l1475:
  2328  00F2  01A6               	clrf	___awdiv@quotient
  2329  00F3  01A7               	clrf	___awdiv@quotient+1
  2330  00F4                     l1477:
  2331  00F4  0820               	movf	___awdiv@divisor,w
  2332  00F5  0421               	iorwf	___awdiv@divisor+1,w
  2333  00F6  1903               	btfsc	3,2
  2334  00F7  28F9               	goto	u1091
  2335  00F8  28FA               	goto	u1090
  2336  00F9                     u1091:
  2337  00F9  2931               	goto	l1497
  2338  00FA                     u1090:
  2339  00FA                     l1479:
  2340  00FA  01A4               	clrf	___awdiv@counter
  2341  00FB  0AA4               	incf	___awdiv@counter,f
  2342  00FC  2908               	goto	l1485
  2343  00FD                     l1481:
  2344  00FD  3001               	movlw	1
  2345  00FE                     u1105:
  2346  00FE  1003               	clrc
  2347  00FF  0DA0               	rlf	___awdiv@divisor,f
  2348  0100  0DA1               	rlf	___awdiv@divisor+1,f
  2349  0101  3EFF               	addlw	-1
  2350  0102  1D03               	skipz
  2351  0103  28FE               	goto	u1105
  2352  0104                     l1483:
  2353  0104  3001               	movlw	1
  2354  0105  00F8               	movwf	??___awdiv
  2355  0106  0878               	movf	??___awdiv,w
  2356  0107  07A4               	addwf	___awdiv@counter,f
  2357  0108                     l1485:
  2358  0108  1FA1               	btfss	___awdiv@divisor+1,7
  2359  0109  290B               	goto	u1111
  2360  010A  290C               	goto	u1110
  2361  010B                     u1111:
  2362  010B  28FD               	goto	l1481
  2363  010C                     u1110:
  2364  010C                     l1487:
  2365  010C  3001               	movlw	1
  2366  010D                     u1125:
  2367  010D  1003               	clrc
  2368  010E  0DA6               	rlf	___awdiv@quotient,f
  2369  010F  0DA7               	rlf	___awdiv@quotient+1,f
  2370  0110  3EFF               	addlw	-1
  2371  0111  1D03               	skipz
  2372  0112  290D               	goto	u1125
  2373  0113  0821               	movf	___awdiv@divisor+1,w
  2374  0114  0223               	subwf	___awdiv@dividend+1,w
  2375  0115  1D03               	skipz
  2376  0116  2919               	goto	u1135
  2377  0117  0820               	movf	___awdiv@divisor,w
  2378  0118  0222               	subwf	___awdiv@dividend,w
  2379  0119                     u1135:
  2380  0119  1C03               	skipc
  2381  011A  291C               	goto	u1131
  2382  011B  291D               	goto	u1130
  2383  011C                     u1131:
  2384  011C  2924               	goto	l1493
  2385  011D                     u1130:
  2386  011D                     l1489:
  2387  011D  0820               	movf	___awdiv@divisor,w
  2388  011E  02A2               	subwf	___awdiv@dividend,f
  2389  011F  0821               	movf	___awdiv@divisor+1,w
  2390  0120  1C03               	skipc
  2391  0121  03A3               	decf	___awdiv@dividend+1,f
  2392  0122  02A3               	subwf	___awdiv@dividend+1,f
  2393  0123                     l1491:
  2394  0123  1426               	bsf	___awdiv@quotient,0
  2395  0124                     l1493:
  2396  0124  3001               	movlw	1
  2397  0125                     u1145:
  2398  0125  1003               	clrc
  2399  0126  0CA1               	rrf	___awdiv@divisor+1,f
  2400  0127  0CA0               	rrf	___awdiv@divisor,f
  2401  0128  3EFF               	addlw	-1
  2402  0129  1D03               	skipz
  2403  012A  2925               	goto	u1145
  2404  012B                     l1495:
  2405  012B  3001               	movlw	1
  2406  012C  02A4               	subwf	___awdiv@counter,f
  2407  012D  1D03               	btfss	3,2
  2408  012E  2930               	goto	u1151
  2409  012F  2931               	goto	u1150
  2410  0130                     u1151:
  2411  0130  290C               	goto	l1487
  2412  0131                     u1150:
  2413  0131                     l1497:
  2414  0131  0825               	movf	___awdiv@sign,w
  2415  0132  1903               	btfsc	3,2
  2416  0133  2935               	goto	u1161
  2417  0134  2936               	goto	u1160
  2418  0135                     u1161:
  2419  0135  293B               	goto	l1501
  2420  0136                     u1160:
  2421  0136                     l1499:
  2422  0136  09A6               	comf	___awdiv@quotient,f
  2423  0137  09A7               	comf	___awdiv@quotient+1,f
  2424  0138  0AA6               	incf	___awdiv@quotient,f
  2425  0139  1903               	skipnz
  2426  013A  0AA7               	incf	___awdiv@quotient+1,f
  2427  013B                     l1501:
  2428  013B  0827               	movf	___awdiv@quotient+1,w
  2429  013C  00A1               	movwf	?___awdiv+1
  2430  013D  0826               	movf	___awdiv@quotient,w
  2431  013E  00A0               	movwf	?___awdiv
  2432  013F                     l452:
  2433  013F  0008               	return
  2434  0140                     __end_of___awdiv:
  2435                           
  2436                           	psect	text14
  2437  01E8                     __ptext14:	
  2438 ;; *************** function _pwm_routine *****************
  2439 ;; Defined at:
  2440 ;;		line 202 in file "main.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1
  2454 ;;      Params:         0       0       0
  2455 ;;      Locals:         0       0       0
  2456 ;;      Temps:          2       0       0
  2457 ;;      Totals:         2       0       0
  2458 ;;Total ram usage:        2 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		Interrupt level 1
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _pwm_routine
  2469  01E8                     _pwm_routine:
  2470  01E8                     i1l1383:
  2471                           
  2472                           ;main.c: 206:     if (T0IF) {
  2473  01E8  1D0B               	btfss	11,2	;volatile
  2474  01E9  29EB               	goto	u90_21
  2475  01EA  29EC               	goto	u90_20
  2476  01EB                     u90_21:
  2477  01EB  2A1F               	goto	i1l125
  2478  01EC                     u90_20:
  2479  01EC                     i1l1385:
  2480                           
  2481                           ;main.c: 208:         if (PWM_ENABLED) {
  2482  01EC  1C7B               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  2483  01ED  29EF               	goto	u91_21
  2484  01EE  29F0               	goto	u91_20
  2485  01EF                     u91_21:
  2486  01EF  2A1B               	goto	i1l120
  2487  01F0                     u91_20:
  2488  01F0                     i1l1387:
  2489                           
  2490                           ;main.c: 210:             if (RB4 == 0x0 && PWM_TICKS >= PWM_OFF) {
  2491  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2492  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2493  01F2  1A06               	btfsc	6,4	;volatile
  2494  01F3  29F5               	goto	u92_21
  2495  01F4  29F6               	goto	u92_20
  2496  01F5                     u92_21:
  2497  01F5  2A04               	goto	i1l121
  2498  01F6                     u92_20:
  2499  01F6                     i1l1389:
  2500  01F6  083B               	movf	_PWM_OFF+1,w
  2501  01F7  023F               	subwf	_PWM_TICKS+1,w	;volatile
  2502  01F8  1D03               	skipz
  2503  01F9  29FC               	goto	u93_25
  2504  01FA  083A               	movf	_PWM_OFF,w
  2505  01FB  023E               	subwf	_PWM_TICKS,w	;volatile
  2506  01FC                     u93_25:
  2507  01FC  1C03               	skipc
  2508  01FD  29FF               	goto	u93_21
  2509  01FE  2A00               	goto	u93_20
  2510  01FF                     u93_21:
  2511  01FF  2A04               	goto	i1l121
  2512  0200                     u93_20:
  2513  0200                     i1l1391:
  2514                           
  2515                           ;main.c: 211:                 RB4 = 0x1;
  2516  0200  1606               	bsf	6,4	;volatile
  2517  0201                     i1l1393:
  2518                           
  2519                           ;main.c: 212:                 PWM_TICKS = 0x0;
  2520  0201  01BE               	clrf	_PWM_TICKS	;volatile
  2521  0202  01BF               	clrf	_PWM_TICKS+1	;volatile
  2522                           
  2523                           ;main.c: 213:             }
  2524  0203  2A14               	goto	i1l1401
  2525  0204                     i1l121:	
  2526                           ;main.c: 214:             else if (RB4 == 0x1 && PWM_TICKS >= PWM_ON) {
  2527                           
  2528  0204  1E06               	btfss	6,4	;volatile
  2529  0205  2A07               	goto	u94_21
  2530  0206  2A08               	goto	u94_20
  2531  0207                     u94_21:
  2532  0207  2A14               	goto	i1l1401
  2533  0208                     u94_20:
  2534  0208                     i1l1395:
  2535  0208  083D               	movf	_PWM_ON+1,w
  2536  0209  023F               	subwf	_PWM_TICKS+1,w	;volatile
  2537  020A  1D03               	skipz
  2538  020B  2A0E               	goto	u95_25
  2539  020C  083C               	movf	_PWM_ON,w
  2540  020D  023E               	subwf	_PWM_TICKS,w	;volatile
  2541  020E                     u95_25:
  2542  020E  1C03               	skipc
  2543  020F  2A11               	goto	u95_21
  2544  0210  2A12               	goto	u95_20
  2545  0211                     u95_21:
  2546  0211  2A14               	goto	i1l1401
  2547  0212                     u95_20:
  2548  0212                     i1l1397:
  2549                           
  2550                           ;main.c: 215:                 RB4 = 0x0;
  2551  0212  1206               	bcf	6,4	;volatile
  2552  0213  2A01               	goto	i1l1393
  2553  0214                     i1l1401:
  2554                           
  2555                           ;main.c: 219:             PWM_TICKS ++;
  2556  0214  3001               	movlw	1
  2557  0215  07BE               	addwf	_PWM_TICKS,f	;volatile
  2558  0216  1803               	skipnc
  2559  0217  0ABF               	incf	_PWM_TICKS+1,f	;volatile
  2560  0218  3000               	movlw	0
  2561  0219  07BF               	addwf	_PWM_TICKS+1,f	;volatile
  2562                           
  2563                           ;main.c: 220:         }
  2564  021A  2A1E               	goto	i1l124
  2565  021B                     i1l120:	
  2566                           ;main.c: 221:         else {
  2567                           
  2568                           
  2569                           ;main.c: 222:             RB4 = 0x0;
  2570  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2571  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2572  021D  1206               	bcf	6,4	;volatile
  2573  021E                     i1l124:	
  2574                           ;main.c: 223:         }
  2575                           
  2576                           
  2577                           ;main.c: 225:         T0IF = 0x0;
  2578  021E  110B               	bcf	11,2	;volatile
  2579  021F                     i1l125:
  2580  021F  0871               	movf	??_pwm_routine+1,w
  2581  0220  008A               	movwf	10
  2582  0221  0E70               	swapf	??_pwm_routine,w
  2583  0222  0083               	movwf	3
  2584  0223  0EFE               	swapf	btemp,f
  2585  0224  0E7E               	swapf	btemp,w
  2586  0225  0009               	retfie
  2587  0226                     __end_of_pwm_routine:
  2588  007E                     btemp	set	126	;btemp
  2589  007E                     wtemp0	set	126
  2590                           
  2591                           	psect	intentry
  2592  0004                     __pintentry:	
  2593                           ;incstack = 0
  2594                           ; Regs used in _pwm_routine: [wreg+status,2]
  2595                           
  2596  0004                     interrupt_function:
  2597  007E                     saved_w	set	btemp
  2598  0004  00FE               	movwf	btemp
  2599  0005  0E03               	swapf	3,w
  2600  0006  00F0               	movwf	??_pwm_routine
  2601  0007  080A               	movf	10,w
  2602  0008  00F1               	movwf	??_pwm_routine+1
  2603  0009  29E8               	ljmp	_pwm_routine
  2604                           
  2605                           	psect	config
  2606                           
  2607                           ;Config register CONFIG @ 0x2007
  2608                           ;	Oscillator Selection bits
  2609                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
  2610                           ;	Watchdog Timer Enable bit
  2611                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2612                           ;	Power-up Timer Enable bit
  2613                           ;	PWRTE = OFF, PWRT disabled
  2614                           ;	MCLR Pin Function Select bit
  2615                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  2616                           ;	Code Protection bit
  2617                           ;	CP = OFF, Program memory code protection is disabled
  2618                           ;	Data Code Protection bit
  2619                           ;	CPD = OFF, Data memory code protection is disabled
  2620                           ;	Brown-out Reset Selection bits
  2621                           ;	BOREN = OFF, BOR disabled
  2622                           ;	Internal External Switchover bit
  2623                           ;	IESO = OFF, Internal External Switchover mode is disabled
  2624                           ;	Fail-Safe Clock Monitor Enabled bit
  2625                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2626  2007                     	org	8199
  2627  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     26      36
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set_pwm_cycle
    _set_pwm_enabled->_set_pwm_cycle
    _set_pwm_cycle->___awdiv
    _calc_cycle->___lwdiv
    ___lwdiv->___awdiv
    _blink->___awdiv
    ___awdiv->___wmul

Critical Paths under _pwm_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calc_cycle
    _set_pwm_enabled->_set_pwm_cycle
    _set_pwm_cycle->___awdiv
    _calc_cycle->___lwdiv
    ___lwdiv->___awdiv
    _blink->___awdiv

Critical Paths under _pwm_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pwm_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6769
                                             22 BANK0      4     4      0
                              _blink
                         _calc_cycle
                        _is_shutdown
                          _probe_bat
                         _probe_temp
                          _read_data
                      _set_pwm_cycle
                    _set_pwm_enabled
                              _setup
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _write_data                                           3     2      1     120
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_pwm_enabled                                      1     1      0    1626
                                              9 BANK0      1     1      0
                      _set_pwm_cycle
 ---------------------------------------------------------------------------------
 (2) _set_pwm_cycle                                        3     3      0    1564
                                              9 COMMON     2     2      0
                                              8 BANK0      1     1      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _read_data                                            2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _probe_temp                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _probe_bat                                            2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _is_shutdown                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calc_cycle                                           7     7      0    2087
                                             15 BANK0      7     7      0
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              9 COMMON     1     1      0
                                              8 BANK0      7     3      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _blink                                                7     7      0    1189
                                              8 BANK0      7     7      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _pwm_routine                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
     ___awdiv
       ___wmul (ARG)
   _calc_cycle
     ___awdiv
       ___wmul (ARG)
     ___lwdiv
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
   _is_shutdown
   _probe_bat
   _probe_temp
   _read_data
   _set_pwm_cycle
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _set_pwm_enabled
     _set_pwm_cycle
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _setup
   _write_data

 _pwm_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     1A      24       4       45.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      30       7        0.0%
DATA                 0      0      30       8        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 13 07:52:56 2021

                      _GO 00F9                        _RD 0C60                        _WR 0C61  
            ___awdiv@sign 0025       ___wmul@multiplicand 0074               _pwm_routine 01E8  
                     l131 02BC                       l301 0353                       l151 01A1  
                     l143 0156                       l135 02E2                       l144 016B  
                     l128 028D                       l146 0178                       l147 018D  
                     l139 025D                       l163 032E                       l181 039C  
                     l157 0308                       l175 0371                       l168 0388  
                     l169 038C                       l186 03A3                       l452 013F  
                     l571 01E7                       l299 033B                       _GIE 005F  
                     _RC0 0038                       _RB4 0034                       _RB5 0035  
                     _PS0 0408                       _PS1 0409                       _PS2 040A  
                     _HTS 047A                       u540 0335                       u541 0334  
                     u570 034F                       u571 034E                       u555 033C  
                     u565 0343                       _SCS 0478                       u830 0300  
                     u831 02FF                       u840 0326                       u841 0325  
                     u850 0388                       u851 0387                       _LTS 0479  
                     u860 0360                       u861 035F                       u870 0391  
                     u871 0390                       u880 039C                       u881 039B  
                     u890 03A0                       u891 039F                      l1141 0349  
                    l1133 032F                      l1143 034F                      l1135 0331  
                    l1311 02F6                      l1231 026D                      l1223 025E  
                    l1137 0335                      l1321 0318                      l1313 02FA  
                    l1305 02E3                      l1241 0272                      l1233 026E  
                    l1225 0267                      l1139 0342                      l1323 031C  
                    l1315 0300                      l1307 02EA                      l1331 0374  
                    l1251 0279                      l1243 0275                      l1235 026F  
                    l1227 0269                      l1501 013B                      l1325 0320  
                    l1317 0309                      l1309 02F2                      l1333 037C  
                    l1261 0282                      l1253 027C                      l1245 0276  
                    l1237 0270                      l1229 026C                      l1511 01A2  
                    l1327 0326                      l1319 0310                      l1335 037E  
                    l1263 0287                      l1255 027D                      l1247 0277  
                    l1239 0271                      l1351 0366                      l1343 0355  
                    l1521 01BA                      l1513 01A6                      l1337 0382  
                    l1329 0373                      l1505 0291                      l1265 0288  
                    l1257 027E                      l1249 0278                      l1361 0371  
                    l1353 0367                      l1345 0356                      l1601 006E  
                    l1531 01DD                      l1523 01BE                      l1515 01AC  
                    l1371 0396                      l1339 0389                      l1507 0293  
                    l1267 028B                      l1259 0281                      l1355 036E  
                    l1347 035A                      l1611 0092                      l1603 006F  
                    l1461 00D7                      l1525 01CF                      l1517 01AF  
                    l1533 01E3                      l1373 03A0                      l1365 038D  
                    l1509 02B0                      l1541 02C8                      l1269 028C  
                    l1357 036F                      l1349 0360                      l1621 00BE  
                    l1613 0096                      l1605 0072                      l1471 00E9  
                    l1463 00DA                      l1527 01D5                      l1519 01B6  
                    l1375 03A2                      l1543 02CE                      l1359 0370  
                    l1615 00A5                      l1607 007F                      l1623 00C7  
                    _C1ON 08CF                      l1481 00FD                      l1473 00EE  
                    l1465 00DE                      l1561 0157                      l1529 01D6  
                    l1553 0229                      l1369 0392                      l1545 02D4  
                    l1537 02C0                      l1625 00CE                      l1617 00AC  
                    l1609 0083                      l1491 0123                      l1483 0104  
                    l1475 00F2                      l1467 00E3                      l1563 015A  
                    l1547 02D6                      l1539 02C4                      l1627 00D3  
                    l1619 00B4                      l1571 001A                      _C2ON 08D7  
                    l1493 0124                      l1485 0108                      l1477 00F4  
                    l1469 00E5                      l1565 0179                      l1557 0143  
                    l1549 0229                      l1581 0035                      l1573 0021  
                    l1495 012B                      l1487 010C                      l1479 00FA  
                    l1567 017C                      l1559 0143                      l1591 0053  
                    l1583 0036                      l1575 0030                      l1489 011D  
                    l1497 0131                      l1569 019A                      l1593 0062  
                    l1585 0040                      l1577 0031                      l1499 0136  
                    l1595 0065                      l1587 0043                      l1579 0033  
                    l1589 0050                      l1597 0067                      l1599 006B  
                    _ADIE 0466                      _ADFM 00FF                      _ADON 00F8  
                    _CHS0 00FA                      _CHS1 00FB                      _CHS2 00FC  
                    _CHS3 00FD                      _T0IE 005D                      _T0IF 005A  
                    _T0CS 040D                      u1110 010C                      u1111 010B  
                    u1105 00FE                      u1130 011D                      u1210 01CF  
                    u1131 011C                      u1211 01CE                      u1300 019A  
                    u1125 010D                      u1301 0199                      u1205 01BF  
                    u1150 0131                      u1070 00DE                      u1310 01A1  
                    u1230 01E3                      u1151 0130                      u1135 0119  
                    u1071 00DD                      u1311 01A0                      u1231 01E2  
                    u1215 01CB                      u1160 0136                      u1080 00E9  
                    u1400 00C7                      u1320 0040                      u1161 0135  
                    u1145 0125                      u1081 00E8                      u1305 0196  
                    u1225 01D7                      u1401 00C6                      u1321 003F  
                    u1090 00FA                      u1170 01AC                      u1250 02CE  
                    u1410 00CE                      u1330 0050                      u1091 00F9  
                    u1171 01AB                      u1251 02CD                      u1411 00CD  
                    u1331 004F                      u1260 02D4                      u1420 00D3  
                    u1340 0062                      u1261 02D3                      u1245 02C4  
                    u1421 00D2                      u1341 0061                      u1190 01BE  
                    u1270 02DF                      u1350 006B                      u1191 01BD  
                    u1271 02DB                      u1351 006A                      u1335 004C  
                    u1360 007F                      u1185 01B0                      u1361 007E  
                    u1345 005E                      u1290 0178                      u1370 0092  
                    u1291 0177                      u1507 0394                      u1371 0091  
                    u1284 02E2                      u1380 00A5                      u1517 015E  
                    u1381 00A4                      u1365 007B                      u1437 0029  
                    u1390 00AC                      u1527 0180                      u1295 0174  
                    u1447 0358                      u1391 00AB                      u1375 008E  
                    u1457 0380                      u1385 00A1                      u1467 02EE  
                    u1477 02F8                      u1487 0314                      u1497 031E  
                    _PEIE 005E                      _INTE 005C                      _VCFG 00FE  
                    _OSTS 047B                      _WREN 0C62                      _main 001A  
                    btemp 007E                      start 000A                     _ADCS0 04FC  
                   _ADCS1 04FD                     _ADCS2 04FE                     ?_main 0070  
         __end_of___awdiv 0140                     _EEADR 010D                     _EEDAT 010C  
                   _ANSEL 011E           ___awdiv@divisor 0020                     _IRCF0 047C  
                   _IRCF1 047D                     _IRCF2 047E           __end_of___lwdiv 01E8  
                   _RABIE 005B                     i1l120 021B                     i1l121 0204  
                   i1l124 021E                     i1l125 021F           ___awdiv@counter 0024  
                   u90_20 01EC                     u90_21 01EB                     u91_20 01F0  
                   u91_21 01EF                     u92_20 01F6                     u92_21 01F5  
                   u93_20 0200                     u93_21 01FF                     u93_25 01FC  
                   u94_20 0208                     u94_21 0207                     u95_20 0212  
                   u95_21 0211                     _WRERR 0C63                     u95_25 020E  
                   _blink 0140              ?_is_shutdown 0070                     _setup 025E  
          __pbitbssCOMMON 03D8                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 000B           write_data@value 0072  
         _set_pwm_enabled 02BD              __end_of_main 00D7                    ??_main 0036  
                  ?_blink 0070                    _ADRESH 001E                    _ADRESL 009E  
                  _EECON1 018C                    _EECON2 018D          ___awdiv@dividend 0022  
                  ?_setup 0070                    _ANSELH 011F                    i1l1401 0214  
                  i1l1391 0200                    i1l1383 01E8                    i1l1393 0201  
                  i1l1385 01EC                    i1l1395 0208                    i1l1387 01F0  
                  i1l1397 0212                    i1l1389 01F6                    _TRISC0 0438  
                  _TRISA5 042D                    _TRISB4 0434                    _PWM_ON 003C  
                  ___wmul 032F                 ??___awdiv 0078                 ??___lwdiv 0079  
        ___awdiv@quotient 0026                    blink@i 002D                    blink@n 002B  
        read_data@address 0073                    saved_w 007E   __end_of__initialization 0018  
 __end_of_set_pwm_enabled 02E3            __pcstackCOMMON 0070             __end_of_blink 01A2  
           __end_of_setup 028E              ?_pwm_routine 0070                _calc_cycle 0226  
                 ??_blink 0028                   ??_setup 0072                __pbssBANK0 003A  
   __end_of_set_pwm_cycle 02BD      __size_of_is_shutdown 0017        __size_of_read_data 001B  
              __pmaintext 001A                   ?___wmul 0072                __pintentry 0004  
                 _ADC_REF 0040        __size_of_probe_bat 0026                   _PWM_OFF 003A  
        ?_set_pwm_enabled 0070                   ___awdiv 00D7           __size_of___wmul 0025  
                 ___lwdiv 01A2    set_pwm_enabled@enabled 0029                   __ptext1 0354  
                 __ptext2 025E                   __ptext3 02BD                   __ptext4 028E  
                 __ptext5 0372                   __ptext6 02E3                   __ptext7 0309  
                 __ptext8 038D                   __ptext9 0226         __end_of_read_data 038D  
             ?_calc_cycle 0070      end_of_initialization 0018                blink@delay 002C  
       __end_of_probe_bat 032F                _probe_temp 02E3      __size_of_pwm_routine 003E  
               _PWM_TICKS 003E         write_data@address 0074       __size_of_calc_cycle 0038  
          __end_of___wmul 0354                _write_data 0354       start_initialization 000B  
                ??___wmul 0076               ?_probe_temp 0070                 ___latbits 0000  
           __pcstackBANK0 0020             ??_is_shutdown 0072          ___lwdiv@dividend 002A  
                ?___awdiv 0020                  ?___lwdiv 0028               ?_write_data 0072  
  __size_of_set_pwm_cycle 002F                  _ADC_TEMP 0042              ??_calc_cycle 002F  
        ___lwdiv@quotient 002D            __size_of_blink 0062                 _read_data 0372  
          __size_of_setup 0030            _calc_cycle$731 0032         interrupt_function 0004  
          ___wmul@product 0076       __size_of_probe_temp 0026       __end_of_is_shutdown 03A4  
      __end_of_calc_cycle 025E                 _probe_bat 0309  __size_of_set_pwm_enabled 0026  
       ___wmul@multiplier 0072                 main@cycle 0039                ?_read_data 0070  
     __size_of_write_data 001E             _set_pwm_cycle 028E                ?_probe_bat 0070  
        __size_of___awdiv 0069          __size_of___lwdiv 0046             ??_pwm_routine 0070  
         ___lwdiv@divisor 0028           ___lwdiv@counter 002C                  __ptext10 032F  
                __ptext11 01A2                  __ptext12 0140                  __ptext13 00D7  
                __ptext14 01E8               _is_shutdown 038D            ?_set_pwm_cycle 0070  
           __size_of_main 00BD              ??_probe_temp 0072         ??_set_pwm_enabled 007B  
     __end_of_pwm_routine 0226               ??_read_data 0072        set_pwm_cycle@cycle 0028  
                intlevel1 0000        __end_of_probe_temp 0309               ??_probe_bat 0072  
            ??_write_data 0073                _OPTION_REG 0081          calc_cycle@charge 0031  
         ??_set_pwm_cycle 0079               _PWM_ENABLED 03D8        __end_of_write_data 0372  
