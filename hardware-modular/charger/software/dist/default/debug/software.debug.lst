

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 13:15:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F687 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008F                     	;# 
    84  0090                     	;# 
    85  0093                     	;# 
    86  0093                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0095                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011E                     	;# 
   110  011F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  019E                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011E                     	;# 
   171  011F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  019E                     	;# 
   175  001E                     _ADRESH	set	30
   176  00F9                     _GO	set	249
   177  00FA                     _CHS0	set	250
   178  00FB                     _CHS1	set	251
   179  00FC                     _CHS2	set	252
   180  00FD                     _CHS3	set	253
   181  0038                     _RC0	set	56
   182  00F8                     _ADON	set	248
   183  00FE                     _VCFG	set	254
   184  00FF                     _ADFM	set	255
   185  005B                     _RABIE	set	91
   186  005C                     _INTE	set	92
   187  005D                     _T0IE	set	93
   188  005E                     _PEIE	set	94
   189  005F                     _GIE	set	95
   190  0034                     _RB4	set	52
   191  005A                     _T0IF	set	90
   192  009E                     _ADRESL	set	158
   193  0081                     _OPTION_REG	set	129
   194  0438                     _TRISC0	set	1080
   195  0434                     _TRISB4	set	1076
   196  04FC                     _ADCS0	set	1276
   197  04FD                     _ADCS1	set	1277
   198  04FE                     _ADCS2	set	1278
   199  0408                     _PS0	set	1032
   200  0409                     _PS1	set	1033
   201  040A                     _PS2	set	1034
   202  040D                     _T0CS	set	1037
   203  0466                     _ADIE	set	1126
   204  0478                     _SCS	set	1144
   205  0479                     _LTS	set	1145
   206  047A                     _HTS	set	1146
   207  047B                     _OSTS	set	1147
   208  047E                     _IRCF2	set	1150
   209  047D                     _IRCF1	set	1149
   210  047C                     _IRCF0	set	1148
   211  011F                     _ANSELH	set	287
   212  011E                     _ANSEL	set	286
   213  08D7                     _C2ON	set	2263
   214  08CF                     _C1ON	set	2255
   215                           
   216                           	psect	cinit
   217  000B                     start_initialization:	
   218                           ; #config settings
   219                           
   220  000B                     __initialization:
   221                           
   222                           ; Clear objects allocated to BITCOMMON
   223  000B  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   224                           
   225                           ; Clear objects allocated to COMMON
   226  000C  01F0               	clrf	__pbssCOMMON& (0+127)
   227  000D  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   228  000E  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   229  000F  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   230  0010  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   231  0011  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   232                           
   233                           ; Clear objects allocated to BANK0
   234  0012  1283               	bcf	3,5	;RP0=0, select bank0
   235  0013  1303               	bcf	3,6	;RP1=0, select bank0
   236  0014  01A0               	clrf	__pbssBANK0& (0+127)
   237  0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   238  0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   239  0017  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   240  0018                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  0018                     __end_of__initialization:
   244  0018  0183               	clrf	3
   245  0019  28AF               	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bitbssCOMMON
   248  03D0                     __pbitbssCOMMON:
   249  03D0                     _PWM_ENABLED:
   250  03D0                     	ds	1
   251                           
   252                           	psect	bssCOMMON
   253  0070                     __pbssCOMMON:
   254  0070                     _PWM_OFF:
   255  0070                     	ds	2
   256  0072                     _PWM_ON:
   257  0072                     	ds	2
   258  0074                     _PWM_TICKS:
   259  0074                     	ds	2
   260                           
   261                           	psect	bssBANK0
   262  0020                     __pbssBANK0:
   263  0020                     _ADC_REF:
   264  0020                     	ds	2
   265  0022                     _ADC_TEMP:
   266  0022                     	ds	2
   267                           
   268                           	psect	cstackCOMMON
   269  0076                     __pcstackCOMMON:
   270  0076                     ?_pwm_routine:
   271  0076                     ??_pwm_routine:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0076                     ?_setup:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0076                     ?_probe_bat:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0076                     ?_charge:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0076                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0076                     	ds	2
   289  0078                     ??_setup:
   290  0078                     ??_probe_bat:	
   291                           ; 1 bytes @ 0x2
   292                           
   293  0078                     ??_charge:	
   294                           ; 1 bytes @ 0x2
   295                           
   296                           
   297                           ; 1 bytes @ 0x2
   298  0078                     	ds	2
   299                           
   300                           	psect	cstackBANK0
   301  0024                     __pcstackBANK0:
   302  0024                     ??_main:
   303                           
   304                           ; 1 bytes @ 0x0
   305  0024                     	ds	3
   306                           
   307                           	psect	maintext
   308  00AF                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 444 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1
   328 ;;      Params:         0       0       0
   329 ;;      Locals:         0       0       0
   330 ;;      Temps:          0       3       0
   331 ;;      Totals:         0       3       0
   332 ;;Total ram usage:        3 bytes
   333 ;; Hardware stack levels required when called:    2
   334 ;; This function calls:
   335 ;;		_charge
   336 ;;		_probe_bat
   337 ;;		_setup
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           
   344                           ;psect for function _main
   345  00AF                     _main:
   346  00AF                     l908:	
   347                           ;incstack = 0
   348                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   349                           
   350                           
   351                           ;main.c: 446:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   352  00AF  3006               	movlw	6
   353  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   354  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   355  00B2  00A6               	movwf	??_main+2
   356  00B3  3013               	movlw	19
   357  00B4  00A5               	movwf	??_main+1
   358  00B5  30AD               	movlw	173
   359  00B6  00A4               	movwf	??_main
   360  00B7                     u177:
   361  00B7  0BA4               	decfsz	??_main,f
   362  00B8  28B7               	goto	u177
   363  00B9  0BA5               	decfsz	??_main+1,f
   364  00BA  28B7               	goto	u177
   365  00BB  0BA6               	decfsz	??_main+2,f
   366  00BC  28B7               	goto	u177
   367  00BD  0000               	nop
   368  00BE                     l910:
   369                           
   370                           ;main.c: 448:     setup();
   371  00BE  2058               	fcall	_setup
   372  00BF                     l912:
   373                           
   374                           ;main.c: 454:     probe_bat();
   375  00BF  2087               	fcall	_probe_bat
   376  00C0                     l914:
   377                           
   378                           ;main.c: 455:         charge();
   379  00C0  20C3               	fcall	_charge
   380  00C1  28BF               	goto	l912
   381  00C2  280A               	ljmp	start
   382  00C3                     __end_of_main:
   383                           
   384                           	psect	text1
   385  0058                     __ptext1:	
   386 ;; *************** function _setup *****************
   387 ;; Defined at:
   388 ;;		line 236 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1
   402 ;;      Params:         0       0       0
   403 ;;      Locals:         0       0       0
   404 ;;      Temps:          0       0       0
   405 ;;      Totals:         0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:    1
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _setup
   418  0058                     _setup:
   419  0058                     l736:	
   420                           ;incstack = 0
   421                           ; Regs used in _setup: [wreg+status,2]
   422                           
   423                           
   424                           ;main.c: 240:     IRCF0 = 0x1;
   425  0058  1683               	bsf	3,5	;RP0=1, select bank1
   426  0059  1303               	bcf	3,6	;RP1=0, select bank1
   427  005A  160F               	bsf	15,4	;volatile
   428                           
   429                           ;main.c: 241:     IRCF1 = 0x1;
   430  005B  168F               	bsf	15,5	;volatile
   431                           
   432                           ;main.c: 242:     IRCF2 = 0x1;
   433  005C  170F               	bsf	15,6	;volatile
   434                           
   435                           ;main.c: 243:     OSTS = 0x0;
   436  005D  118F               	bcf	15,3	;volatile
   437                           
   438                           ;main.c: 244:     HTS = 0x1;
   439  005E  150F               	bsf	15,2	;volatile
   440                           
   441                           ;main.c: 245:     LTS = 0x1;
   442  005F  148F               	bsf	15,1	;volatile
   443                           
   444                           ;main.c: 246:     SCS = 0x1;
   445  0060  140F               	bsf	15,0	;volatile
   446  0061                     l738:
   447                           
   448                           ;main.c: 250:     OPTION_REG = 0x80;
   449  0061  3080               	movlw	128
   450  0062  0081               	movwf	1	;volatile
   451  0063                     l740:
   452                           
   453                           ;main.c: 251:     C1ON = 0x0;
   454  0063  1283               	bcf	3,5	;RP0=0, select bank2
   455  0064  1703               	bsf	3,6	;RP1=1, select bank2
   456  0065  1399               	bcf	25,7	;volatile
   457  0066                     l742:
   458                           
   459                           ;main.c: 252:     C2ON = 0x0;
   460  0066  139A               	bcf	26,7	;volatile
   461  0067                     l744:
   462                           
   463                           ;main.c: 256:     GIE = 0x1;
   464  0067  178B               	bsf	11,7	;volatile
   465  0068                     l746:
   466                           
   467                           ;main.c: 257:     PEIE = 0x1;
   468  0068  170B               	bsf	11,6	;volatile
   469  0069                     l748:
   470                           
   471                           ;main.c: 258:     T0IE = 0x1;
   472  0069  168B               	bsf	11,5	;volatile
   473  006A                     l750:
   474                           
   475                           ;main.c: 259:     INTE = 0x0;
   476  006A  120B               	bcf	11,4	;volatile
   477  006B                     l752:
   478                           
   479                           ;main.c: 260:     RABIE = 0x0;
   480  006B  118B               	bcf	11,3	;volatile
   481  006C                     l754:
   482                           
   483                           ;main.c: 261:     ADIE = 0x0;
   484  006C  1683               	bsf	3,5	;RP0=1, select bank1
   485  006D  1303               	bcf	3,6	;RP1=0, select bank1
   486  006E  130C               	bcf	12,6	;volatile
   487  006F                     l756:
   488                           
   489                           ;main.c: 265:     T0CS = 0x0;
   490  006F  1281               	bcf	1,5	;volatile
   491  0070                     l758:
   492                           
   493                           ;main.c: 266:     PS2 = 0x0;
   494  0070  1101               	bcf	1,2	;volatile
   495  0071                     l760:
   496                           
   497                           ;main.c: 267:     PS1 = 0x1;
   498  0071  1481               	bsf	1,1	;volatile
   499  0072                     l762:
   500                           
   501                           ;main.c: 268:     PS0 = 0x0;
   502  0072  1001               	bcf	1,0	;volatile
   503  0073                     l764:
   504                           
   505                           ;main.c: 272:     ADFM = 0x1;
   506  0073  1283               	bcf	3,5	;RP0=0, select bank0
   507  0074  1303               	bcf	3,6	;RP1=0, select bank0
   508  0075  179F               	bsf	31,7	;volatile
   509  0076                     l766:
   510                           
   511                           ;main.c: 273:     VCFG = 0x0;
   512  0076  131F               	bcf	31,6	;volatile
   513  0077                     l768:
   514                           
   515                           ;main.c: 274:     ADON = 0x0;
   516  0077  101F               	bcf	31,0	;volatile
   517  0078                     l770:
   518                           
   519                           ;main.c: 275:     ADCS2 = 0x0;
   520  0078  1683               	bsf	3,5	;RP0=1, select bank1
   521  0079  1303               	bcf	3,6	;RP1=0, select bank1
   522  007A  131F               	bcf	31,6	;volatile
   523  007B                     l772:
   524                           
   525                           ;main.c: 276:     ADCS1 = 0x1;
   526  007B  169F               	bsf	31,5	;volatile
   527  007C                     l774:
   528                           
   529                           ;main.c: 277:     ADCS0 = 0x1;
   530  007C  161F               	bsf	31,4	;volatile
   531                           
   532                           ;main.c: 278:     ANSEL = 0xC;
   533  007D  300C               	movlw	12
   534  007E  1283               	bcf	3,5	;RP0=0, select bank2
   535  007F  1703               	bsf	3,6	;RP1=1, select bank2
   536  0080  009E               	movwf	30	;volatile
   537  0081                     l776:
   538                           
   539                           ;main.c: 279:     ANSELH = 0x0;
   540  0081  019F               	clrf	31	;volatile
   541  0082                     l778:
   542                           
   543                           ;main.c: 283:     TRISB4 = 0x0;
   544  0082  1683               	bsf	3,5	;RP0=1, select bank1
   545  0083  1303               	bcf	3,6	;RP1=0, select bank1
   546  0084  1206               	bcf	6,4	;volatile
   547  0085                     l780:
   548                           
   549                           ;main.c: 284:     TRISC0 = 0x0;
   550  0085  1007               	bcf	7,0	;volatile
   551  0086                     l108:
   552  0086  0008               	return
   553  0087                     __end_of_setup:
   554                           
   555                           	psect	text2
   556  0087                     __ptext2:	
   557 ;; *************** function _probe_bat *****************
   558 ;; Defined at:
   559 ;;		line 410 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1
   573 ;;      Params:         0       0       0
   574 ;;      Locals:         0       0       0
   575 ;;      Temps:          2       0       0
   576 ;;      Totals:         2       0       0
   577 ;;Total ram usage:        2 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _probe_bat
   589  0087                     _probe_bat:
   590  0087                     l868:	
   591                           ;incstack = 0
   592                           ; Regs used in _probe_bat: [wreg+status,2]
   593                           
   594                           
   595                           ;main.c: 414:     CHS3 = 0x0;
   596  0087  1283               	bcf	3,5	;RP0=0, select bank0
   597  0088  1303               	bcf	3,6	;RP1=0, select bank0
   598  0089  129F               	bcf	31,5	;volatile
   599                           
   600                           ;main.c: 415:     CHS2 = 0x0;
   601  008A  121F               	bcf	31,4	;volatile
   602                           
   603                           ;main.c: 416:     CHS1 = 0x1;
   604  008B  159F               	bsf	31,3	;volatile
   605                           
   606                           ;main.c: 417:     CHS0 = 0x0;
   607  008C  111F               	bcf	31,2	;volatile
   608  008D                     l870:
   609                           
   610                           ;main.c: 419:     ADC_TEMP = 0x0;
   611  008D  01A2               	clrf	_ADC_TEMP
   612  008E  01A3               	clrf	_ADC_TEMP+1
   613  008F                     l872:
   614                           
   615                           ;main.c: 421:     ADON = 0x1;
   616  008F  141F               	bsf	31,0	;volatile
   617  0090                     l874:
   618                           
   619                           ;main.c: 423:     _delay((unsigned long)((30)*(4000000/4000.0)));
   620  0090  3027               	movlw	39
   621  0091  00F9               	movwf	??_probe_bat+1
   622  0092  30F5               	movlw	245
   623  0093  00F8               	movwf	??_probe_bat
   624  0094                     u187:
   625  0094  0BF8               	decfsz	??_probe_bat,f
   626  0095  2894               	goto	u187
   627  0096  0BF9               	decfsz	??_probe_bat+1,f
   628  0097  2894               	goto	u187
   629  0098                     l876:
   630                           
   631                           ;main.c: 425:     GO = 0x1;
   632  0098  1283               	bcf	3,5	;RP0=0, select bank0
   633  0099  1303               	bcf	3,6	;RP1=0, select bank0
   634  009A  149F               	bsf	31,1	;volatile
   635                           
   636                           ;main.c: 427:     while (!GO) {
   637  009B  28A0               	goto	l880
   638  009C                     l878:
   639                           
   640                           ;main.c: 428:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   641  009C  3003               	movlw	3
   642  009D  00F8               	movwf	??_probe_bat
   643  009E                     u197:
   644  009E  0BF8               	decfsz	??_probe_bat,f
   645  009F  289E               	goto	u197
   646  00A0                     l880:
   647                           
   648                           ;main.c: 427:     while (!GO) {
   649  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   650  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   651  00A2  1C9F               	btfss	31,1	;volatile
   652  00A3  28A5               	goto	u151
   653  00A4  28A6               	goto	u150
   654  00A5                     u151:
   655  00A5  289C               	goto	l878
   656  00A6                     u150:
   657  00A6                     l882:
   658                           
   659                           ;main.c: 431:     ADC_REF = (ADRESH << 8) | ADRESL;
   660  00A6  081E               	movf	30,w	;volatile
   661  00A7  00A1               	movwf	_ADC_REF+1
   662  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   663  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   664  00AA  081E               	movf	30,w	;volatile
   665  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   666  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   667  00AD  00A0               	movwf	_ADC_REF
   668  00AE                     l133:
   669  00AE  0008               	return
   670  00AF                     __end_of_probe_bat:
   671                           
   672                           	psect	text3
   673  00C3                     __ptext3:	
   674 ;; *************** function _charge *****************
   675 ;; Defined at:
   676 ;;		line 438 in file "main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		None
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1
   690 ;;      Params:         0       0       0
   691 ;;      Locals:         0       0       0
   692 ;;      Temps:          0       0       0
   693 ;;      Totals:         0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           
   705                           ;psect for function _charge
   706  00C3                     _charge:
   707  00C3                     l136:	
   708                           ;incstack = 0
   709                           ; Regs used in _charge: []
   710                           
   711  00C3  0008               	return
   712  00C4                     __end_of_charge:
   713                           
   714                           	psect	text4
   715  001A                     __ptext4:	
   716 ;; *************** function _pwm_routine *****************
   717 ;; Defined at:
   718 ;;		line 195 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1
   732 ;;      Params:         0       0       0
   733 ;;      Locals:         0       0       0
   734 ;;      Temps:          2       0       0
   735 ;;      Totals:         2       0       0
   736 ;;Total ram usage:        2 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		Interrupt level 1
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _pwm_routine
   747  001A                     _pwm_routine:
   748  001A                     i1l804:
   749                           
   750                           ;main.c: 199:     if (T0IF) {
   751  001A  1D0B               	btfss	11,2	;volatile
   752  001B  281D               	goto	u2_21
   753  001C  281E               	goto	u2_20
   754  001D                     u2_21:
   755  001D  2851               	goto	i1l105
   756  001E                     u2_20:
   757  001E                     i1l806:
   758                           
   759                           ;main.c: 201:         if (PWM_ENABLED) {
   760  001E  1C7A               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
   761  001F  2821               	goto	u3_21
   762  0020  2822               	goto	u3_20
   763  0021                     u3_21:
   764  0021  284D               	goto	i1l100
   765  0022                     u3_20:
   766  0022                     i1l808:
   767                           
   768                           ;main.c: 203:             if (RB4 == 0x0 && PWM_TICKS >= PWM_OFF) {
   769  0022  1283               	bcf	3,5	;RP0=0, select bank0
   770  0023  1303               	bcf	3,6	;RP1=0, select bank0
   771  0024  1A06               	btfsc	6,4	;volatile
   772  0025  2827               	goto	u4_21
   773  0026  2828               	goto	u4_20
   774  0027                     u4_21:
   775  0027  2836               	goto	i1l101
   776  0028                     u4_20:
   777  0028                     i1l810:
   778  0028  0871               	movf	_PWM_OFF+1,w
   779  0029  0275               	subwf	_PWM_TICKS+1,w	;volatile
   780  002A  1D03               	skipz
   781  002B  282E               	goto	u5_25
   782  002C  0870               	movf	_PWM_OFF,w
   783  002D  0274               	subwf	_PWM_TICKS,w	;volatile
   784  002E                     u5_25:
   785  002E  1C03               	skipc
   786  002F  2831               	goto	u5_21
   787  0030  2832               	goto	u5_20
   788  0031                     u5_21:
   789  0031  2836               	goto	i1l101
   790  0032                     u5_20:
   791  0032                     i1l812:
   792                           
   793                           ;main.c: 204:                 RB4 = 0x1;
   794  0032  1606               	bsf	6,4	;volatile
   795  0033                     i1l814:
   796                           
   797                           ;main.c: 205:                 PWM_TICKS = 0x0;
   798  0033  01F4               	clrf	_PWM_TICKS	;volatile
   799  0034  01F5               	clrf	_PWM_TICKS+1	;volatile
   800                           
   801                           ;main.c: 206:             }
   802  0035  2846               	goto	i1l822
   803  0036                     i1l101:	
   804                           ;main.c: 207:             else if (RB4 == 0x1 && PWM_TICKS >= PWM_ON) {
   805                           
   806  0036  1E06               	btfss	6,4	;volatile
   807  0037  2839               	goto	u6_21
   808  0038  283A               	goto	u6_20
   809  0039                     u6_21:
   810  0039  2846               	goto	i1l822
   811  003A                     u6_20:
   812  003A                     i1l816:
   813  003A  0873               	movf	_PWM_ON+1,w
   814  003B  0275               	subwf	_PWM_TICKS+1,w	;volatile
   815  003C  1D03               	skipz
   816  003D  2840               	goto	u7_25
   817  003E  0872               	movf	_PWM_ON,w
   818  003F  0274               	subwf	_PWM_TICKS,w	;volatile
   819  0040                     u7_25:
   820  0040  1C03               	skipc
   821  0041  2843               	goto	u7_21
   822  0042  2844               	goto	u7_20
   823  0043                     u7_21:
   824  0043  2846               	goto	i1l822
   825  0044                     u7_20:
   826  0044                     i1l818:
   827                           
   828                           ;main.c: 208:                 RB4 = 0x0;
   829  0044  1206               	bcf	6,4	;volatile
   830  0045  2833               	goto	i1l814
   831  0046                     i1l822:
   832                           
   833                           ;main.c: 212:             PWM_TICKS ++;
   834  0046  3001               	movlw	1
   835  0047  07F4               	addwf	_PWM_TICKS,f	;volatile
   836  0048  1803               	skipnc
   837  0049  0AF5               	incf	_PWM_TICKS+1,f	;volatile
   838  004A  3000               	movlw	0
   839  004B  07F5               	addwf	_PWM_TICKS+1,f	;volatile
   840                           
   841                           ;main.c: 213:         }
   842  004C  2850               	goto	i1l104
   843  004D                     i1l100:	
   844                           ;main.c: 214:         else {
   845                           
   846                           
   847                           ;main.c: 215:             RB4 = 0x0;
   848  004D  1283               	bcf	3,5	;RP0=0, select bank0
   849  004E  1303               	bcf	3,6	;RP1=0, select bank0
   850  004F  1206               	bcf	6,4	;volatile
   851  0050                     i1l104:	
   852                           ;main.c: 216:         }
   853                           
   854                           
   855                           ;main.c: 218:         T0IF = 0x0;
   856  0050  110B               	bcf	11,2	;volatile
   857  0051                     i1l105:
   858  0051  0877               	movf	??_pwm_routine+1,w
   859  0052  008A               	movwf	10
   860  0053  0E76               	swapf	??_pwm_routine,w
   861  0054  0083               	movwf	3
   862  0055  0EFE               	swapf	btemp,f
   863  0056  0E7E               	swapf	btemp,w
   864  0057  0009               	retfie
   865  0058                     __end_of_pwm_routine:
   866  007E                     btemp	set	126	;btemp
   867  007E                     wtemp0	set	126
   868                           
   869                           	psect	intentry
   870  0004                     __pintentry:	
   871                           ;incstack = 0
   872                           ; Regs used in _pwm_routine: [wreg+status,2]
   873                           
   874  0004                     interrupt_function:
   875  007E                     saved_w	set	btemp
   876  0004  00FE               	movwf	btemp
   877  0005  0E03               	swapf	3,w
   878  0006  00F6               	movwf	??_pwm_routine
   879  0007  080A               	movf	10,w
   880  0008  00F7               	movwf	??_pwm_routine+1
   881  0009  281A               	ljmp	_pwm_routine
   882                           
   883                           	psect	config
   884                           
   885                           ;Config register CONFIG @ 0x2007
   886                           ;	Oscillator Selection bits
   887                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   888                           ;	Watchdog Timer Enable bit
   889                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   890                           ;	Power-up Timer Enable bit
   891                           ;	PWRTE = OFF, PWRT disabled
   892                           ;	MCLR Pin Function Select bit
   893                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   894                           ;	Code Protection bit
   895                           ;	CP = OFF, Program memory code protection is disabled
   896                           ;	Data Code Protection bit
   897                           ;	CPD = OFF, Data memory code protection is disabled
   898                           ;	Brown-out Reset Selection bits
   899                           ;	BOREN = OFF, BOR disabled
   900                           ;	Internal External Switchover bit
   901                           ;	IESO = OFF, Internal External Switchover mode is disabled
   902                           ;	Fail-Safe Clock Monitor Enabled bit
   903                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   904  2007                     	org	8199
   905  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80      3       7
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_probe_bat

Critical Paths under _pwm_routine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pwm_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pwm_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
                             _charge
                          _probe_bat
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _probe_bat                                            2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _charge                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _pwm_routine                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _charge
   _probe_bat
   _setup

 _pwm_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      3       7       4        8.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      12       7        0.0%
DATA                 0      0      12       8        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 13:15:49 2021

                     _GO 00F9              _pwm_routine 001A                      l108 0086  
                    l133 00AE                      l136 00C3                      l740 0063  
                    l750 006A                      l742 0066                      l910 00BE  
                    l760 0071                      l752 006B                      l744 0067  
                    l736 0058                      l912 00BF                      l770 0078  
                    l762 0072                      l754 006C                      l746 0068  
                    l738 0061                      l914 00C0                      l780 0085  
                    l772 007B                      l764 0073                      l756 006F  
                    l748 0069                      l908 00AF                      l870 008D  
                    l774 007C                      l766 0076                      l758 0070  
                    l880 00A0                      l872 008F                      l776 0081  
                    l768 0077                      l882 00A6                      l874 0090  
                    l778 0082                      l876 0098                      l868 0087  
                    l878 009C                      _GIE 005F                      _RC0 0038  
                    _RB4 0034                      u150 00A6                      u151 00A5  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    u177 00B7                      u187 0094                      _HTS 047A  
                    u197 009E                      _SCS 0478                      _LTS 0479  
                   _C1ON 08CF                     _C2ON 08D7                     _ADIE 0466  
                   _ADFM 00FF                     _ADON 00F8                     _CHS0 00FA  
                   _CHS1 00FB                     _CHS2 00FC                     _CHS3 00FD  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   _PEIE 005E                     _INTE 005C                     _VCFG 00FE  
                   _OSTS 047B                     u2_20 001E                     u2_21 001D  
                   u3_20 0022                     u3_21 0021                     u4_20 0028  
                   u4_21 0027                     u5_20 0032                     u5_21 0031  
                   u5_25 002E                     u6_20 003A                     u6_21 0039  
                   u7_20 0044                     u7_21 0043                     u7_25 0040  
                   _main 00AF                     btemp 007E                     start 000A  
                  _ADCS0 04FC                    _ADCS1 04FD                    _ADCS2 04FE  
                  ?_main 0076                    _ANSEL 011E                    _IRCF0 047C  
                  _IRCF1 047D                    _IRCF2 047E                    i1l100 004D  
                  i1l101 0036                    _RABIE 005B                    i1l104 0050  
                  i1l105 0051                    i1l810 0028                    i1l812 0032  
                  i1l804 001A                    i1l822 0046                    i1l814 0033  
                  i1l806 001E                    i1l816 003A                    i1l808 0022  
                  i1l818 0044                    _setup 0058           __pbitbssCOMMON 03D0  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 00C3                   ??_main 0024  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0076  
                 _ANSELH 011F                   _TRISC0 0438                   _TRISB4 0434  
                 _PWM_ON 0072                   _charge 00C3                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0076            __end_of_setup 0087  
           ?_pwm_routine 0076                  ??_setup 0078               __pbssBANK0 0020  
             __pmaintext 00AF                  ?_charge 0076               __pintentry 0004  
                _ADC_REF 0020       __size_of_probe_bat 0028                  _PWM_OFF 0070  
        __size_of_charge 0001                  __ptext1 0058                  __ptext2 0087  
                __ptext3 00C3                  __ptext4 001A     end_of_initialization 0018  
      __end_of_probe_bat 00AF     __size_of_pwm_routine 003E                _PWM_TICKS 0074  
         __end_of_charge 00C4      start_initialization 000B                 ??_charge 0078  
            __pbssCOMMON 0070                ___latbits 0000            __pcstackBANK0 0024  
               _ADC_TEMP 0022           __size_of_setup 002F        interrupt_function 0004  
              _probe_bat 0087               ?_probe_bat 0076            ??_pwm_routine 0076  
          __size_of_main 0014      __end_of_pwm_routine 0058                 intlevel1 0000  
            ??_probe_bat 0078               _OPTION_REG 0081              _PWM_ENABLED 03D0  
