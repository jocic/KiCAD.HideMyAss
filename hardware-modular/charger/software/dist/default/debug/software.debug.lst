

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 09:04:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F687 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011E                     	;# 
   112  011F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  019E                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0093                     	;# 
   149  0093                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0096                     	;# 
   156  0097                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0118                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011E                     	;# 
   173  011F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  019E                     	;# 
   177  005A                     _T0IF	set	90
   178  0034                     _RB4	set	52
   179  005B                     _RABIE	set	91
   180  005C                     _INTE	set	92
   181  005D                     _T0IE	set	93
   182  005E                     _PEIE	set	94
   183  005F                     _GIE	set	95
   184  0081                     _OPTION_REG	set	129
   185  0434                     _TRISB4	set	1076
   186  0408                     _PS0	set	1032
   187  0409                     _PS1	set	1033
   188  040A                     _PS2	set	1034
   189  040D                     _T0CS	set	1037
   190  0478                     _SCS	set	1144
   191  0479                     _LTS	set	1145
   192  047A                     _HTS	set	1146
   193  047B                     _OSTS	set	1147
   194  047E                     _IRCF2	set	1150
   195  047D                     _IRCF1	set	1149
   196  047C                     _IRCF0	set	1148
   197  011F                     _ANSELH	set	287
   198  011E                     _ANSEL	set	286
   199                           
   200                           	psect	cinit
   201  000B                     start_initialization:	
   202                           ; #config settings
   203                           
   204  000B                     __initialization:
   205                           
   206                           ; Clear objects allocated to BITCOMMON
   207  000B  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   208                           
   209                           ; Clear objects allocated to BANK0
   210  000C  1283               	bcf	3,5	;RP0=0, select bank0
   211  000D  1303               	bcf	3,6	;RP1=0, select bank0
   212  000E  01AD               	clrf	__pbssBANK0& (0+127)
   213  000F  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   214  0010  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   215  0011  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   216  0012  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   217  0013  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   218  0014                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  0014                     __end_of__initialization:
   222  0014  0183               	clrf	3
   223  0015  2974               	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	bitbssCOMMON
   226  03D8                     __pbitbssCOMMON:
   227  03D8                     _PWM_ENABLED:
   228  03D8                     	ds	1
   229                           
   230                           	psect	bssBANK0
   231  002D                     __pbssBANK0:
   232  002D                     _PWM_OFF:
   233  002D                     	ds	2
   234  002F                     _PWM_ON:
   235  002F                     	ds	2
   236  0031                     _PWM_TICKS:
   237  0031                     	ds	2
   238                           
   239                           	psect	cstackCOMMON
   240  0070                     __pcstackCOMMON:
   241  0070                     ?_setup:
   242  0070                     ?_set_pwm_cycle:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_set_pwm_enabled:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_pwm_routine:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ??_pwm_routine:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_charge:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 1 bytes @ 0x0
   262  0070                     	ds	2
   263  0072                     ??_setup:
   264  0072                     ??_charge:	
   265                           ; 1 bytes @ 0x2
   266                           
   267  0072                     ?___wmul:	
   268                           ; 1 bytes @ 0x2
   269                           
   270  0072                     ___wmul@multiplier:	
   271                           ; 2 bytes @ 0x2
   272                           
   273                           
   274                           ; 2 bytes @ 0x2
   275  0072                     	ds	2
   276  0074                     ___wmul@multiplicand:
   277                           
   278                           ; 2 bytes @ 0x4
   279  0074                     	ds	2
   280  0076                     ??___wmul:
   281  0076                     ___wmul@product:	
   282                           ; 1 bytes @ 0x6
   283                           
   284                           
   285                           ; 2 bytes @ 0x6
   286  0076                     	ds	2
   287  0078                     ??___awdiv:
   288                           
   289                           ; 1 bytes @ 0x8
   290  0078                     	ds	1
   291  0079                     ??_set_pwm_cycle:
   292                           
   293                           ; 1 bytes @ 0x9
   294  0079                     	ds	2
   295  007B                     ??_set_pwm_enabled:
   296                           
   297                           	psect	cstackBANK0
   298  0020                     __pcstackBANK0:	
   299                           ; 1 bytes @ 0xB
   300                           
   301  0020                     ?___awdiv:
   302  0020                     ___awdiv@divisor:	
   303                           ; 2 bytes @ 0x0
   304                           
   305                           
   306                           ; 2 bytes @ 0x0
   307  0020                     	ds	2
   308  0022                     ___awdiv@dividend:
   309                           
   310                           ; 2 bytes @ 0x2
   311  0022                     	ds	2
   312  0024                     ___awdiv@counter:
   313                           
   314                           ; 1 bytes @ 0x4
   315  0024                     	ds	1
   316  0025                     ___awdiv@sign:
   317                           
   318                           ; 1 bytes @ 0x5
   319  0025                     	ds	1
   320  0026                     ___awdiv@quotient:
   321                           
   322                           ; 2 bytes @ 0x6
   323  0026                     	ds	2
   324  0028                     set_pwm_cycle@cycle:
   325                           
   326                           ; 1 bytes @ 0x8
   327  0028                     	ds	1
   328  0029                     set_pwm_enabled@enabled:
   329                           
   330                           ; 1 bytes @ 0x9
   331  0029                     	ds	1
   332  002A                     ??_main:
   333                           
   334                           ; 1 bytes @ 0xA
   335  002A                     	ds	3
   336                           
   337                           	psect	maintext
   338  0174                     __pmaintext:	
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 163 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0, pclath, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : B00/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1
   358 ;;      Params:         0       0       0
   359 ;;      Locals:         0       0       0
   360 ;;      Temps:          0       3       0
   361 ;;      Totals:         0       3       0
   362 ;;Total ram usage:        3 bytes
   363 ;; Hardware stack levels required when called:    4
   364 ;; This function calls:
   365 ;;		_charge
   366 ;;		_set_pwm_enabled
   367 ;;		_setup
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _main
   375  0174                     _main:
   376  0174                     l986:	
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   379                           
   380                           
   381                           ;main.c: 165:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   382  0174  3006               	movlw	6
   383  0175  1283               	bcf	3,5	;RP0=0, select bank0
   384  0176  1303               	bcf	3,6	;RP1=0, select bank0
   385  0177  00AC               	movwf	??_main+2
   386  0178  3013               	movlw	19
   387  0179  00AB               	movwf	??_main+1
   388  017A  30AD               	movlw	173
   389  017B  00AA               	movwf	??_main
   390  017C                     u667:
   391  017C  0BAA               	decfsz	??_main,f
   392  017D  297C               	goto	u667
   393  017E  0BAB               	decfsz	??_main+1,f
   394  017F  297C               	goto	u667
   395  0180  0BAC               	decfsz	??_main+2,f
   396  0181  297C               	goto	u667
   397  0182  0000               	nop
   398  0183                     l988:
   399                           
   400                           ;main.c: 167:     setup();
   401  0183  2158               	fcall	_setup
   402  0184                     l990:
   403                           
   404                           ;main.c: 169:     set_pwm_enabled(0x1);
   405  0184  3001               	movlw	1
   406  0185  20E9               	fcall	_set_pwm_enabled
   407  0186                     l992:
   408                           
   409                           ;main.c: 170:     set_pwm_enabled(0x0);
   410  0186  3000               	movlw	0
   411  0187  20E9               	fcall	_set_pwm_enabled
   412  0188                     l994:
   413                           
   414                           ;main.c: 173:         charge();
   415  0188  2134               	fcall	_charge
   416  0189  2988               	goto	l994
   417  018A  280A               	ljmp	start
   418  018B                     __end_of_main:
   419                           
   420                           	psect	text1
   421  0158                     __ptext1:	
   422 ;; *************** function _setup *****************
   423 ;; Defined at:
   424 ;;		line 49 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1
   438 ;;      Params:         0       0       0
   439 ;;      Locals:         0       0       0
   440 ;;      Temps:          0       0       0
   441 ;;      Totals:         0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; Hardware stack levels required when called:    1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _setup
   454  0158                     _setup:
   455  0158                     l742:	
   456                           ;incstack = 0
   457                           ; Regs used in _setup: [wreg+status,2]
   458                           
   459                           
   460                           ;main.c: 53: 
   461  0158  1683               	bsf	3,5	;RP0=1, select bank1
   462  0159  1303               	bcf	3,6	;RP1=0, select bank1
   463  015A  160F               	bsf	15,4	;volatile
   464                           
   465                           ;main.c: 54: }
   466  015B  168F               	bsf	15,5	;volatile
   467                           
   468                           ;main.c: 55: 
   469  015C  170F               	bsf	15,6	;volatile
   470                           
   471                           ;main.c: 56: void set_pwm_enabled(unsigned char enabled) {
   472  015D  118F               	bcf	15,3	;volatile
   473                           
   474                           ;main.c: 57: 
   475  015E  150F               	bsf	15,2	;volatile
   476                           
   477                           ;main.c: 58: 
   478  015F  148F               	bsf	15,1	;volatile
   479                           
   480                           ;main.c: 59: 
   481  0160  140F               	bsf	15,0	;volatile
   482  0161                     l744:
   483                           
   484                           ;main.c: 63:     if (PWM_ON == 0x0 && PWM_OFF == 0x0) {
   485  0161  3080               	movlw	128
   486  0162  0081               	movwf	1	;volatile
   487  0163                     l746:
   488                           
   489                           ;main.c: 67:     RB4 = (enabled & 0x1);
   490  0163  178B               	bsf	11,7	;volatile
   491  0164                     l748:
   492                           
   493                           ;main.c: 68: 
   494  0164  130B               	bcf	11,6	;volatile
   495  0165                     l750:
   496                           
   497                           ;main.c: 69: }
   498  0165  168B               	bsf	11,5	;volatile
   499  0166                     l752:
   500  0166  120B               	bcf	11,4	;volatile
   501  0167                     l754:
   502  0167  118B               	bcf	11,3	;volatile
   503  0168                     l756:
   504  0168  1281               	bcf	1,5	;volatile
   505  0169                     l758:
   506  0169  1101               	bcf	1,2	;volatile
   507  016A                     l760:
   508  016A  1481               	bsf	1,1	;volatile
   509  016B                     l762:
   510  016B  1001               	bcf	1,0	;volatile
   511  016C                     l764:
   512  016C  1283               	bcf	3,5	;RP0=0, select bank2
   513  016D  1703               	bsf	3,6	;RP1=1, select bank2
   514  016E  019E               	clrf	30	;volatile
   515  016F                     l766:
   516  016F  019F               	clrf	31	;volatile
   517  0170                     l768:
   518  0170  1683               	bsf	3,5	;RP0=1, select bank1
   519  0171  1303               	bcf	3,6	;RP1=0, select bank1
   520  0172  1206               	bcf	6,4	;volatile
   521  0173                     l57:
   522  0173  0008               	return
   523  0174                     __end_of_setup:
   524                           
   525                           	psect	text2
   526  00E9                     __ptext2:	
   527 ;; *************** function _set_pwm_enabled *****************
   528 ;; Defined at:
   529 ;;		line 100 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  enabled         1    wreg     unsigned char 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  enabled         1    9[BANK0 ] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1
   543 ;;      Params:         0       0       0
   544 ;;      Locals:         0       1       0
   545 ;;      Temps:          0       0       0
   546 ;;      Totals:         0       1       0
   547 ;;Total ram usage:        1 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    3
   550 ;; This function calls:
   551 ;;		_set_pwm_cycle
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _set_pwm_enabled
   559  00E9                     _set_pwm_enabled:
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _set_pwm_enabled: [wreg+status,2+status,0+pclath+cstack]
   563                           ;set_pwm_enabled@enabled stored from wreg
   564  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   565  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   566  00EB  00A9               	movwf	set_pwm_enabled@enabled
   567  00EC                     l974:
   568  00EC  107B               	bcf	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
   569  00ED  1C29               	btfss	set_pwm_enabled@enabled,0
   570  00EE  28F0               	goto	u615
   571  00EF  147B               	bsf	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
   572  00F0                     u615:
   573  00F0                     l976:
   574  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   575  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   576  00F2  01B1               	clrf	_PWM_TICKS	;volatile
   577  00F3  01B2               	clrf	_PWM_TICKS+1	;volatile
   578  00F4                     l978:
   579  00F4  082F               	movf	_PWM_ON,w
   580  00F5  0430               	iorwf	_PWM_ON+1,w
   581  00F6  1D03               	btfss	3,2
   582  00F7  28F9               	goto	u621
   583  00F8  28FA               	goto	u620
   584  00F9                     u621:
   585  00F9  2902               	goto	l984
   586  00FA                     u620:
   587  00FA                     l980:
   588  00FA  082D               	movf	_PWM_OFF,w
   589  00FB  042E               	iorwf	_PWM_OFF+1,w
   590  00FC  1D03               	btfss	3,2
   591  00FD  28FF               	goto	u631
   592  00FE  2900               	goto	u630
   593  00FF                     u631:
   594  00FF  2902               	goto	l984
   595  0100                     u630:
   596  0100                     l982:
   597  0100  3032               	movlw	50
   598  0101  20BD               	fcall	_set_pwm_cycle
   599  0102                     l984:
   600  0102  1283               	bcf	3,5	;RP0=0, select bank0
   601  0103  1303               	bcf	3,6	;RP1=0, select bank0
   602  0104  1829               	btfsc	set_pwm_enabled@enabled,0
   603  0105  2907               	goto	u641
   604  0106  290B               	goto	u640
   605  0107                     u641:
   606  0107  1283               	bcf	3,5	;RP0=0, select bank0
   607  0108  1303               	bcf	3,6	;RP1=0, select bank0
   608  0109  1606               	bsf	6,4	;volatile
   609  010A  290E               	goto	u654
   610  010B                     u640:
   611  010B  1283               	bcf	3,5	;RP0=0, select bank0
   612  010C  1303               	bcf	3,6	;RP1=0, select bank0
   613  010D  1206               	bcf	6,4	;volatile
   614  010E                     u654:
   615  010E                     l64:
   616  010E  0008               	return
   617  010F                     __end_of_set_pwm_enabled:
   618                           
   619                           	psect	text3
   620  00BD                     __ptext3:	
   621 ;; *************** function _set_pwm_cycle *****************
   622 ;; Defined at:
   623 ;;		line 90 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  cycle           1    wreg     unsigned char 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  cycle           1    8[BANK0 ] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1
   637 ;;      Params:         0       0       0
   638 ;;      Locals:         0       1       0
   639 ;;      Temps:          2       0       0
   640 ;;      Totals:         2       1       0
   641 ;;Total ram usage:        3 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    2
   644 ;; This function calls:
   645 ;;		___awdiv
   646 ;;		___wmul
   647 ;; This function is called by:
   648 ;;		_set_pwm_enabled
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _set_pwm_cycle
   654  00BD                     _set_pwm_cycle:
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _set_pwm_cycle: [wreg+status,2+status,0+pclath+cstack]
   658                           ;set_pwm_cycle@cycle stored from wreg
   659  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   660  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   661  00BF  00A8               	movwf	set_pwm_cycle@cycle
   662  00C0                     l968:
   663  00C0  01B1               	clrf	_PWM_TICKS	;volatile
   664  00C1  01B2               	clrf	_PWM_TICKS+1	;volatile
   665  00C2                     l970:
   666  00C2  3064               	movlw	100
   667  00C3  00A0               	movwf	___awdiv@divisor
   668  00C4  3000               	movlw	0
   669  00C5  00A1               	movwf	___awdiv@divisor+1
   670  00C6  0828               	movf	set_pwm_cycle@cycle,w
   671  00C7  00F9               	movwf	??_set_pwm_cycle
   672  00C8  01FA               	clrf	??_set_pwm_cycle+1
   673  00C9  0879               	movf	??_set_pwm_cycle,w
   674  00CA  00F2               	movwf	___wmul@multiplier
   675  00CB  087A               	movf	??_set_pwm_cycle+1,w
   676  00CC  00F3               	movwf	___wmul@multiplier+1
   677  00CD  300A               	movlw	10
   678  00CE  00F4               	movwf	___wmul@multiplicand
   679  00CF  3000               	movlw	0
   680  00D0  00F5               	movwf	___wmul@multiplicand+1
   681  00D1  210F               	fcall	___wmul
   682  00D2  0873               	movf	?___wmul+1,w
   683  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   684  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   685  00D5  00A3               	movwf	___awdiv@dividend+1
   686  00D6  0872               	movf	?___wmul,w
   687  00D7  00A2               	movwf	___awdiv@dividend
   688  00D8  2016               	fcall	___awdiv
   689  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   690  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   691  00DB  0821               	movf	?___awdiv+1,w
   692  00DC  00B0               	movwf	_PWM_ON+1
   693  00DD  0820               	movf	?___awdiv,w
   694  00DE  00AF               	movwf	_PWM_ON
   695  00DF                     l972:
   696  00DF  300A               	movlw	10
   697  00E0  00F9               	movwf	??_set_pwm_cycle
   698  00E1  082F               	movf	_PWM_ON,w
   699  00E2  0279               	subwf	??_set_pwm_cycle,w
   700  00E3  00AD               	movwf	_PWM_OFF
   701  00E4  0930               	comf	_PWM_ON+1,w
   702  00E5  1803               	skipnc
   703  00E6  3E01               	addlw	1
   704  00E7  00AE               	movwf	_PWM_OFF+1
   705  00E8                     l60:
   706  00E8  0008               	return
   707  00E9                     __end_of_set_pwm_cycle:
   708                           
   709                           	psect	text4
   710  010F                     __ptext4:	
   711 ;; *************** function ___wmul *****************
   712 ;; Defined at:
   713 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  multiplier      2    2[COMMON] unsigned int 
   716 ;;  multiplicand    2    4[COMMON] unsigned int 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  product         2    6[COMMON] unsigned int 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  2    2[COMMON] unsigned int 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1
   728 ;;      Params:         4       0       0
   729 ;;      Locals:         2       0       0
   730 ;;      Temps:          0       0       0
   731 ;;      Totals:         6       0       0
   732 ;;Total ram usage:        6 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_set_pwm_cycle
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function ___wmul
   744  010F                     ___wmul:
   745  010F                     l818:	
   746                           ;incstack = 0
   747                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   748                           
   749  010F  01F6               	clrf	___wmul@product
   750  0110  01F7               	clrf	___wmul@product+1
   751  0111                     l820:
   752  0111  1C72               	btfss	___wmul@multiplier,0
   753  0112  2914               	goto	u261
   754  0113  2915               	goto	u260
   755  0114                     u261:
   756  0114  291B               	goto	l172
   757  0115                     u260:
   758  0115                     l822:
   759  0115  0874               	movf	___wmul@multiplicand,w
   760  0116  07F6               	addwf	___wmul@product,f
   761  0117  1803               	skipnc
   762  0118  0AF7               	incf	___wmul@product+1,f
   763  0119  0875               	movf	___wmul@multiplicand+1,w
   764  011A  07F7               	addwf	___wmul@product+1,f
   765  011B                     l172:
   766  011B  3001               	movlw	1
   767  011C                     u275:
   768  011C  1003               	clrc
   769  011D  0DF4               	rlf	___wmul@multiplicand,f
   770  011E  0DF5               	rlf	___wmul@multiplicand+1,f
   771  011F  3EFF               	addlw	-1
   772  0120  1D03               	skipz
   773  0121  291C               	goto	u275
   774  0122                     l824:
   775  0122  3001               	movlw	1
   776  0123                     u285:
   777  0123  1003               	clrc
   778  0124  0CF3               	rrf	___wmul@multiplier+1,f
   779  0125  0CF2               	rrf	___wmul@multiplier,f
   780  0126  3EFF               	addlw	-1
   781  0127  1D03               	skipz
   782  0128  2923               	goto	u285
   783  0129                     l826:
   784  0129  0872               	movf	___wmul@multiplier,w
   785  012A  0473               	iorwf	___wmul@multiplier+1,w
   786  012B  1D03               	btfss	3,2
   787  012C  292E               	goto	u291
   788  012D  292F               	goto	u290
   789  012E                     u291:
   790  012E  2911               	goto	l820
   791  012F                     u290:
   792  012F                     l828:
   793  012F  0877               	movf	___wmul@product+1,w
   794  0130  00F3               	movwf	?___wmul+1
   795  0131  0876               	movf	___wmul@product,w
   796  0132  00F2               	movwf	?___wmul
   797  0133                     l174:
   798  0133  0008               	return
   799  0134                     __end_of___wmul:
   800                           
   801                           	psect	text5
   802  0016                     __ptext5:	
   803 ;; *************** function ___awdiv *****************
   804 ;; Defined at:
   805 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  divisor         2    0[BANK0 ] int 
   808 ;;  dividend        2    2[BANK0 ] int 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  quotient        2    6[BANK0 ] int 
   811 ;;  sign            1    5[BANK0 ] unsigned char 
   812 ;;  counter         1    4[BANK0 ] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2    0[BANK0 ] int 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1
   822 ;;      Params:         0       4       0
   823 ;;      Locals:         0       4       0
   824 ;;      Temps:          1       0       0
   825 ;;      Totals:         1       8       0
   826 ;;Total ram usage:        9 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_set_pwm_cycle
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function ___awdiv
   838  0016                     ___awdiv:
   839  0016                     l924:	
   840                           ;incstack = 0
   841                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   842                           
   843  0016  1283               	bcf	3,5	;RP0=0, select bank0
   844  0017  1303               	bcf	3,6	;RP1=0, select bank0
   845  0018  01A5               	clrf	___awdiv@sign
   846  0019                     l926:
   847  0019  1FA1               	btfss	___awdiv@divisor+1,7
   848  001A  281C               	goto	u511
   849  001B  281D               	goto	u510
   850  001C                     u511:
   851  001C  2824               	goto	l932
   852  001D                     u510:
   853  001D                     l928:
   854  001D  09A0               	comf	___awdiv@divisor,f
   855  001E  09A1               	comf	___awdiv@divisor+1,f
   856  001F  0AA0               	incf	___awdiv@divisor,f
   857  0020  1903               	skipnz
   858  0021  0AA1               	incf	___awdiv@divisor+1,f
   859  0022                     l930:
   860  0022  01A5               	clrf	___awdiv@sign
   861  0023  0AA5               	incf	___awdiv@sign,f
   862  0024                     l932:
   863  0024  1FA3               	btfss	___awdiv@dividend+1,7
   864  0025  2827               	goto	u521
   865  0026  2828               	goto	u520
   866  0027                     u521:
   867  0027  2831               	goto	l938
   868  0028                     u520:
   869  0028                     l934:
   870  0028  09A2               	comf	___awdiv@dividend,f
   871  0029  09A3               	comf	___awdiv@dividend+1,f
   872  002A  0AA2               	incf	___awdiv@dividend,f
   873  002B  1903               	skipnz
   874  002C  0AA3               	incf	___awdiv@dividend+1,f
   875  002D                     l936:
   876  002D  3001               	movlw	1
   877  002E  00F8               	movwf	??___awdiv
   878  002F  0878               	movf	??___awdiv,w
   879  0030  06A5               	xorwf	___awdiv@sign,f
   880  0031                     l938:
   881  0031  01A6               	clrf	___awdiv@quotient
   882  0032  01A7               	clrf	___awdiv@quotient+1
   883  0033                     l940:
   884  0033  0820               	movf	___awdiv@divisor,w
   885  0034  0421               	iorwf	___awdiv@divisor+1,w
   886  0035  1903               	btfsc	3,2
   887  0036  2838               	goto	u531
   888  0037  2839               	goto	u530
   889  0038                     u531:
   890  0038  2870               	goto	l960
   891  0039                     u530:
   892  0039                     l942:
   893  0039  01A4               	clrf	___awdiv@counter
   894  003A  0AA4               	incf	___awdiv@counter,f
   895  003B  2847               	goto	l948
   896  003C                     l944:
   897  003C  3001               	movlw	1
   898  003D                     u545:
   899  003D  1003               	clrc
   900  003E  0DA0               	rlf	___awdiv@divisor,f
   901  003F  0DA1               	rlf	___awdiv@divisor+1,f
   902  0040  3EFF               	addlw	-1
   903  0041  1D03               	skipz
   904  0042  283D               	goto	u545
   905  0043                     l946:
   906  0043  3001               	movlw	1
   907  0044  00F8               	movwf	??___awdiv
   908  0045  0878               	movf	??___awdiv,w
   909  0046  07A4               	addwf	___awdiv@counter,f
   910  0047                     l948:
   911  0047  1FA1               	btfss	___awdiv@divisor+1,7
   912  0048  284A               	goto	u551
   913  0049  284B               	goto	u550
   914  004A                     u551:
   915  004A  283C               	goto	l944
   916  004B                     u550:
   917  004B                     l950:
   918  004B  3001               	movlw	1
   919  004C                     u565:
   920  004C  1003               	clrc
   921  004D  0DA6               	rlf	___awdiv@quotient,f
   922  004E  0DA7               	rlf	___awdiv@quotient+1,f
   923  004F  3EFF               	addlw	-1
   924  0050  1D03               	skipz
   925  0051  284C               	goto	u565
   926  0052  0821               	movf	___awdiv@divisor+1,w
   927  0053  0223               	subwf	___awdiv@dividend+1,w
   928  0054  1D03               	skipz
   929  0055  2858               	goto	u575
   930  0056  0820               	movf	___awdiv@divisor,w
   931  0057  0222               	subwf	___awdiv@dividend,w
   932  0058                     u575:
   933  0058  1C03               	skipc
   934  0059  285B               	goto	u571
   935  005A  285C               	goto	u570
   936  005B                     u571:
   937  005B  2863               	goto	l956
   938  005C                     u570:
   939  005C                     l952:
   940  005C  0820               	movf	___awdiv@divisor,w
   941  005D  02A2               	subwf	___awdiv@dividend,f
   942  005E  0821               	movf	___awdiv@divisor+1,w
   943  005F  1C03               	skipc
   944  0060  03A3               	decf	___awdiv@dividend+1,f
   945  0061  02A3               	subwf	___awdiv@dividend+1,f
   946  0062                     l954:
   947  0062  1426               	bsf	___awdiv@quotient,0
   948  0063                     l956:
   949  0063  3001               	movlw	1
   950  0064                     u585:
   951  0064  1003               	clrc
   952  0065  0CA1               	rrf	___awdiv@divisor+1,f
   953  0066  0CA0               	rrf	___awdiv@divisor,f
   954  0067  3EFF               	addlw	-1
   955  0068  1D03               	skipz
   956  0069  2864               	goto	u585
   957  006A                     l958:
   958  006A  3001               	movlw	1
   959  006B  02A4               	subwf	___awdiv@counter,f
   960  006C  1D03               	btfss	3,2
   961  006D  286F               	goto	u591
   962  006E  2870               	goto	u590
   963  006F                     u591:
   964  006F  284B               	goto	l950
   965  0070                     u590:
   966  0070                     l960:
   967  0070  0825               	movf	___awdiv@sign,w
   968  0071  1903               	btfsc	3,2
   969  0072  2874               	goto	u601
   970  0073  2875               	goto	u600
   971  0074                     u601:
   972  0074  287A               	goto	l964
   973  0075                     u600:
   974  0075                     l962:
   975  0075  09A6               	comf	___awdiv@quotient,f
   976  0076  09A7               	comf	___awdiv@quotient+1,f
   977  0077  0AA6               	incf	___awdiv@quotient,f
   978  0078  1903               	skipnz
   979  0079  0AA7               	incf	___awdiv@quotient+1,f
   980  007A                     l964:
   981  007A  0827               	movf	___awdiv@quotient+1,w
   982  007B  00A1               	movwf	?___awdiv+1
   983  007C  0826               	movf	___awdiv@quotient,w
   984  007D  00A0               	movwf	?___awdiv
   985  007E                     l325:
   986  007E  0008               	return
   987  007F                     __end_of___awdiv:
   988                           
   989                           	psect	text6
   990  0134                     __ptext6:	
   991 ;; *************** function _charge *****************
   992 ;; Defined at:
   993 ;;		line 153 in file "main.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1
  1007 ;;      Params:         0       0       0
  1008 ;;      Locals:         0       0       0
  1009 ;;      Temps:          3       0       0
  1010 ;;      Totals:         3       0       0
  1011 ;;Total ram usage:        3 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _charge
  1023  0134                     _charge:
  1024  0134                     l782:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _charge: [wreg]
  1027                           
  1028                           
  1029                           ;main.c: 155:     TRISB4 = 0x0;
  1030  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1031  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0136  1206               	bcf	6,4	;volatile
  1033                           
  1034                           ;main.c: 156:     RB4 = 0x1;
  1035  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0139  1606               	bsf	6,4	;volatile
  1038  013A                     l784:
  1039                           
  1040                           ;main.c: 157:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1041  013A  3006               	movlw	6
  1042  013B  00F4               	movwf	??_charge+2
  1043  013C  3013               	movlw	19
  1044  013D  00F3               	movwf	??_charge+1
  1045  013E  30AD               	movlw	173
  1046  013F  00F2               	movwf	??_charge
  1047  0140                     u677:
  1048  0140  0BF2               	decfsz	??_charge,f
  1049  0141  2940               	goto	u677
  1050  0142  0BF3               	decfsz	??_charge+1,f
  1051  0143  2940               	goto	u677
  1052  0144  0BF4               	decfsz	??_charge+2,f
  1053  0145  2940               	goto	u677
  1054  0146  2947               	nop2
  1055  0147                     l786:
  1056                           
  1057                           ;main.c: 158:     RB4 = 0x0;
  1058  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0149  1206               	bcf	6,4	;volatile
  1061                           
  1062                           ;main.c: 159:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1063  014A  3006               	movlw	6
  1064  014B  00F4               	movwf	??_charge+2
  1065  014C  3013               	movlw	19
  1066  014D  00F3               	movwf	??_charge+1
  1067  014E  30AD               	movlw	173
  1068  014F  00F2               	movwf	??_charge
  1069  0150                     u687:
  1070  0150  0BF2               	decfsz	??_charge,f
  1071  0151  2950               	goto	u687
  1072  0152  0BF3               	decfsz	??_charge+1,f
  1073  0153  2950               	goto	u687
  1074  0154  0BF4               	decfsz	??_charge+2,f
  1075  0155  2950               	goto	u687
  1076  0156  2957               	nop2
  1077  0157                     l78:
  1078  0157  0008               	return
  1079  0158                     __end_of_charge:
  1080                           
  1081                           	psect	text7
  1082  007F                     __ptext7:	
  1083 ;; *************** function _pwm_routine *****************
  1084 ;; Defined at:
  1085 ;;		line 126 in file "main.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1
  1099 ;;      Params:         0       0       0
  1100 ;;      Locals:         0       0       0
  1101 ;;      Temps:          2       0       0
  1102 ;;      Totals:         2       0       0
  1103 ;;Total ram usage:        2 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		Interrupt level 1
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _pwm_routine
  1114  007F                     _pwm_routine:
  1115  007F                     i1l894:
  1116                           
  1117                           ;main.c: 130:     if (T0IF) {
  1118  007F  1D0B               	btfss	11,2	;volatile
  1119  0080  2882               	goto	u45_21
  1120  0081  2883               	goto	u45_20
  1121  0082                     u45_21:
  1122  0082  28B6               	goto	i1l75
  1123  0083                     u45_20:
  1124  0083                     i1l896:
  1125                           
  1126                           ;main.c: 132:         if (PWM_ENABLED) {
  1127  0083  1C7B               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  1128  0084  2886               	goto	u46_21
  1129  0085  2887               	goto	u46_20
  1130  0086                     u46_21:
  1131  0086  28B2               	goto	i1l70
  1132  0087                     u46_20:
  1133  0087                     i1l898:
  1134                           
  1135                           ;main.c: 134:             if (RB4 == 0x0 && PWM_TICKS >= PWM_OFF) {
  1136  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0089  1A06               	btfsc	6,4	;volatile
  1139  008A  288C               	goto	u47_21
  1140  008B  288D               	goto	u47_20
  1141  008C                     u47_21:
  1142  008C  289B               	goto	i1l71
  1143  008D                     u47_20:
  1144  008D                     i1l900:
  1145  008D  082E               	movf	_PWM_OFF+1,w
  1146  008E  0232               	subwf	_PWM_TICKS+1,w	;volatile
  1147  008F  1D03               	skipz
  1148  0090  2893               	goto	u48_25
  1149  0091  082D               	movf	_PWM_OFF,w
  1150  0092  0231               	subwf	_PWM_TICKS,w	;volatile
  1151  0093                     u48_25:
  1152  0093  1C03               	skipc
  1153  0094  2896               	goto	u48_21
  1154  0095  2897               	goto	u48_20
  1155  0096                     u48_21:
  1156  0096  289B               	goto	i1l71
  1157  0097                     u48_20:
  1158  0097                     i1l902:
  1159                           
  1160                           ;main.c: 135:                 RB4 = 0x1;
  1161  0097  1606               	bsf	6,4	;volatile
  1162  0098                     i1l904:
  1163                           
  1164                           ;main.c: 136:                 PWM_TICKS = 0x0;
  1165  0098  01B1               	clrf	_PWM_TICKS	;volatile
  1166  0099  01B2               	clrf	_PWM_TICKS+1	;volatile
  1167                           
  1168                           ;main.c: 137:             }
  1169  009A  28AB               	goto	i1l912
  1170  009B                     i1l71:	
  1171                           ;main.c: 138:             else if (RB4 == 0x1 && PWM_TICKS >= PWM_ON) {
  1172                           
  1173  009B  1E06               	btfss	6,4	;volatile
  1174  009C  289E               	goto	u49_21
  1175  009D  289F               	goto	u49_20
  1176  009E                     u49_21:
  1177  009E  28AB               	goto	i1l912
  1178  009F                     u49_20:
  1179  009F                     i1l906:
  1180  009F  0830               	movf	_PWM_ON+1,w
  1181  00A0  0232               	subwf	_PWM_TICKS+1,w	;volatile
  1182  00A1  1D03               	skipz
  1183  00A2  28A5               	goto	u50_25
  1184  00A3  082F               	movf	_PWM_ON,w
  1185  00A4  0231               	subwf	_PWM_TICKS,w	;volatile
  1186  00A5                     u50_25:
  1187  00A5  1C03               	skipc
  1188  00A6  28A8               	goto	u50_21
  1189  00A7  28A9               	goto	u50_20
  1190  00A8                     u50_21:
  1191  00A8  28AB               	goto	i1l912
  1192  00A9                     u50_20:
  1193  00A9                     i1l908:
  1194                           
  1195                           ;main.c: 139:                 RB4 = 0x0;
  1196  00A9  1206               	bcf	6,4	;volatile
  1197  00AA  2898               	goto	i1l904
  1198  00AB                     i1l912:
  1199                           
  1200                           ;main.c: 143:             PWM_TICKS ++;
  1201  00AB  3001               	movlw	1
  1202  00AC  07B1               	addwf	_PWM_TICKS,f	;volatile
  1203  00AD  1803               	skipnc
  1204  00AE  0AB2               	incf	_PWM_TICKS+1,f	;volatile
  1205  00AF  3000               	movlw	0
  1206  00B0  07B2               	addwf	_PWM_TICKS+1,f	;volatile
  1207                           
  1208                           ;main.c: 144:         }
  1209  00B1  28B5               	goto	i1l74
  1210  00B2                     i1l70:	
  1211                           ;main.c: 145:         else {
  1212                           
  1213                           
  1214                           ;main.c: 146:             RB4 = 0x0;
  1215  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1216  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1217  00B4  1206               	bcf	6,4	;volatile
  1218  00B5                     i1l74:	
  1219                           ;main.c: 147:         }
  1220                           
  1221                           
  1222                           ;main.c: 149:         T0IF = 0x0;
  1223  00B5  110B               	bcf	11,2	;volatile
  1224  00B6                     i1l75:
  1225  00B6  0871               	movf	??_pwm_routine+1,w
  1226  00B7  008A               	movwf	10
  1227  00B8  0E70               	swapf	??_pwm_routine,w
  1228  00B9  0083               	movwf	3
  1229  00BA  0EFE               	swapf	btemp,f
  1230  00BB  0E7E               	swapf	btemp,w
  1231  00BC  0009               	retfie
  1232  00BD                     __end_of_pwm_routine:
  1233  007E                     btemp	set	126	;btemp
  1234  007E                     wtemp0	set	126
  1235                           
  1236                           	psect	intentry
  1237  0004                     __pintentry:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _pwm_routine: [wreg+status,2]
  1240                           
  1241  0004                     interrupt_function:
  1242  007E                     saved_w	set	btemp
  1243  0004  00FE               	movwf	btemp
  1244  0005  0E03               	swapf	3,w
  1245  0006  00F0               	movwf	??_pwm_routine
  1246  0007  080A               	movf	10,w
  1247  0008  00F1               	movwf	??_pwm_routine+1
  1248  0009  287F               	ljmp	_pwm_routine
  1249                           
  1250                           	psect	config
  1251                           
  1252                           ;Config register CONFIG @ 0x2007
  1253                           ;	Oscillator Selection bits
  1254                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
  1255                           ;	Watchdog Timer Enable bit
  1256                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1257                           ;	Power-up Timer Enable bit
  1258                           ;	PWRTE = OFF, PWRT disabled
  1259                           ;	MCLR Pin Function Select bit
  1260                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  1261                           ;	Code Protection bit
  1262                           ;	CP = OFF, Program memory code protection is disabled
  1263                           ;	Data Code Protection bit
  1264                           ;	CPD = OFF, Data memory code protection is disabled
  1265                           ;	Brown-out Reset Selection bits
  1266                           ;	BOREN = OFF, BOR disabled
  1267                           ;	Internal External Switchover bit
  1268                           ;	IESO = OFF, Internal External Switchover mode is disabled
  1269                           ;	Fail-Safe Clock Monitor Enabled bit
  1270                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1271  2007                     	org	8199
  1272  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     13      19
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _set_pwm_enabled->_set_pwm_cycle
    _set_pwm_cycle->___awdiv
    ___awdiv->___wmul

Critical Paths under _pwm_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_set_pwm_enabled
    _set_pwm_enabled->_set_pwm_cycle
    _set_pwm_cycle->___awdiv

Critical Paths under _pwm_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pwm_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     962
                                             10 BANK0      3     3      0
                             _charge
                    _set_pwm_enabled
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_pwm_enabled                                      1     1      0     962
                                              9 BANK0      1     1      0
                      _set_pwm_cycle
 ---------------------------------------------------------------------------------
 (2) _set_pwm_cycle                                        3     3      0     900
                                              9 COMMON     2     2      0
                                              8 BANK0      1     1      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _charge                                               3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _pwm_routine                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _charge
   _set_pwm_enabled
     _set_pwm_cycle
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _setup

 _pwm_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      D      13       4       23.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      1F       7        0.0%
DATA                 0      0      1F       8        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 09:04:44 2021

                      l60 00E8                        l64 010E                        l57 0173  
                      l78 0157              ___awdiv@sign 0025       ___wmul@multiplicand 0074  
             _pwm_routine 007F                       l172 011B                       l325 007E  
                     l174 0133                       l820 0111                       l822 0115  
                     l750 0165                       l742 0158                       l824 0122  
                     l760 016A                       l752 0166                       l744 0161  
                     l930 0022                       l826 0129                       l818 010F  
                     l762 016B                       l754 0167                       l746 0163  
                     l940 0033                       l932 0024                       l924 0016  
                     l828 012F                       l764 016C                       l756 0168  
                     l748 0164                       l782 0134                       l950 004B  
                     l942 0039                       l934 0028                       l926 0019  
                     l766 016F                       l758 0169                       l784 013A  
                     l952 005C                       l944 003C                       l960 0070  
                     l936 002D                       l928 001D                       l768 0170  
                     l786 0147                       l962 0075                       l954 0062  
                     l946 0043                       l938 0031                       l970 00C2  
                     l964 007A                       l956 0063                       l948 0047  
                     l972 00DF                       l980 00FA                       l958 006A  
                     l982 0100                       l974 00EC                       l990 0184  
                     l968 00C0                       l984 0102                       l976 00F0  
                     l992 0186                       l978 00F4                       l994 0188  
                     l986 0174                       _GIE 005F                       l988 0183  
                     _RB4 0034                       u260 0115                       u261 0114  
                     u510 001D                       _PS0 0408                       u511 001C  
                     _PS1 0409                       u600 0075                       u520 0028  
                     _PS2 040A                       u601 0074                       u521 0027  
                     u530 0039                       u290 012F                       u531 0038  
                     u291 012E                       u275 011C                       _HTS 047A  
                     u620 00FA                       u285 0123                       u621 00F9  
                     u550 004B                       u630 0100                       u551 004A  
                     u631 00FF                       u615 00F0                       u640 010B  
                     u545 003D                       u641 0107                       u570 005C  
                     u571 005B                       u565 004C                       _SCS 0478  
                     u590 0070                       u654 010E                       u591 006F  
                     u575 0058                       u585 0064                       u667 017C  
                     _LTS 0479                       u677 0140                       u687 0150  
                    _T0IE 005D                      _T0IF 005A                      _T0CS 040D  
                    _PEIE 005E                      _INTE 005C                      i1l70 00B2  
                    i1l71 009B                      i1l74 00B5                      i1l75 00B6  
                    _OSTS 047B                      _main 0174                      btemp 007E  
                    start 000A                     ?_main 0070           __end_of___awdiv 007F  
                   _ANSEL 011E           ___awdiv@divisor 0020                     _IRCF0 047C  
                   _IRCF1 047D                     _IRCF2 047E                     _RABIE 005B  
                   i1l900 008D                     i1l902 0097                     i1l912 00AB  
                   i1l904 0098                     i1l906 009F                     i1l908 00A9  
                   i1l894 007F                     i1l896 0083                     i1l898 0087  
         ___awdiv@counter 0024                     u50_20 00A9                     u50_21 00A8  
                   u50_25 00A5                     u45_20 0083                     u45_21 0082  
                   u46_20 0087                     u46_21 0086                     u47_20 008D  
                   u47_21 008C                     u48_20 0097                     u48_21 0096  
                   u48_25 0093                     u49_20 009F                     u49_21 009E  
                   _setup 0158            __pbitbssCOMMON 03D8                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000B  
         _set_pwm_enabled 00E9              __end_of_main 018B                    ??_main 002A  
        ___awdiv@dividend 0022                    ?_setup 0070                    _ANSELH 011F  
                  _TRISB4 0434                    _PWM_ON 002F                    ___wmul 010F  
               ??___awdiv 0078                    _charge 0134          ___awdiv@quotient 0026  
                  saved_w 007E   __end_of__initialization 0014   __end_of_set_pwm_enabled 010F  
          __pcstackCOMMON 0070             __end_of_setup 0174              ?_pwm_routine 0070  
                 ??_setup 0072                __pbssBANK0 002D     __end_of_set_pwm_cycle 00E9  
              __pmaintext 0174                   ?___wmul 0072                   ?_charge 0070  
              __pintentry 0004                   _PWM_OFF 002D          ?_set_pwm_enabled 0070  
                 ___awdiv 0016           __size_of___wmul 0025           __size_of_charge 0024  
  set_pwm_enabled@enabled 0029                   __ptext1 0158                   __ptext2 00E9  
                 __ptext3 00BD                   __ptext4 010F                   __ptext5 0016  
                 __ptext6 0134                   __ptext7 007F      end_of_initialization 0014  
    __size_of_pwm_routine 003E                 _PWM_TICKS 0031            __end_of___wmul 0134  
          __end_of_charge 0158       start_initialization 000B                  ??___wmul 0076  
                ??_charge 0072                 ___latbits 0000             __pcstackBANK0 0020  
                ?___awdiv 0020    __size_of_set_pwm_cycle 002C            __size_of_setup 001C  
       interrupt_function 0004            ___wmul@product 0076  __size_of_set_pwm_enabled 0026  
       ___wmul@multiplier 0072             _set_pwm_cycle 00BD          __size_of___awdiv 0069  
           ??_pwm_routine 0070            ?_set_pwm_cycle 0070             __size_of_main 0017  
       ??_set_pwm_enabled 007B       __end_of_pwm_routine 00BD        set_pwm_cycle@cycle 0028  
                intlevel1 0000                _OPTION_REG 0081           ??_set_pwm_cycle 0079  
             _PWM_ENABLED 03D8  
