

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 13 07:44:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F687 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011E                     	;# 
   118  011F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  019E                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0093                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0095                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  0115                     	;# 
   173  0116                     	;# 
   174  0118                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011B                     	;# 
   178  011E                     	;# 
   179  011F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  019E                     	;# 
   183  001E                     _ADRESH	set	30
   184  0035                     _RB5	set	53
   185  00F9                     _GO	set	249
   186  00FA                     _CHS0	set	250
   187  00FB                     _CHS1	set	251
   188  00FC                     _CHS2	set	252
   189  00FD                     _CHS3	set	253
   190  0038                     _RC0	set	56
   191  00F8                     _ADON	set	248
   192  00FE                     _VCFG	set	254
   193  00FF                     _ADFM	set	255
   194  005B                     _RABIE	set	91
   195  005C                     _INTE	set	92
   196  005D                     _T0IE	set	93
   197  005E                     _PEIE	set	94
   198  005F                     _GIE	set	95
   199  0034                     _RB4	set	52
   200  005A                     _T0IF	set	90
   201  009E                     _ADRESL	set	158
   202  0081                     _OPTION_REG	set	129
   203  0438                     _TRISC0	set	1080
   204  0434                     _TRISB4	set	1076
   205  042D                     _TRISA5	set	1069
   206  04FC                     _ADCS0	set	1276
   207  04FD                     _ADCS1	set	1277
   208  04FE                     _ADCS2	set	1278
   209  0408                     _PS0	set	1032
   210  0409                     _PS1	set	1033
   211  040A                     _PS2	set	1034
   212  040D                     _T0CS	set	1037
   213  0466                     _ADIE	set	1126
   214  0478                     _SCS	set	1144
   215  0479                     _LTS	set	1145
   216  047A                     _HTS	set	1146
   217  047B                     _OSTS	set	1147
   218  047E                     _IRCF2	set	1150
   219  047D                     _IRCF1	set	1149
   220  047C                     _IRCF0	set	1148
   221  010C                     _EEDAT	set	268
   222  010D                     _EEADR	set	269
   223  011F                     _ANSELH	set	287
   224  011E                     _ANSEL	set	286
   225  08D7                     _C2ON	set	2263
   226  08CF                     _C1ON	set	2255
   227  018D                     _EECON2	set	397
   228  018C                     _EECON1	set	396
   229  0C63                     _WRERR	set	3171
   230  0C62                     _WREN	set	3170
   231  0C61                     _WR	set	3169
   232  0C60                     _RD	set	3168
   233                           
   234                           	psect	cinit
   235  000B                     start_initialization:	
   236                           ; #config settings
   237                           
   238  000B                     __initialization:
   239                           
   240                           ; Clear objects allocated to BITCOMMON
   241  000B  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   242                           
   243                           ; Clear objects allocated to BANK0
   244  000C  1283               	bcf	3,5	;RP0=0, select bank0
   245  000D  1303               	bcf	3,6	;RP1=0, select bank0
   246  000E  01BA               	clrf	__pbssBANK0& (0+127)
   247  000F  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   248  0010  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   249  0011  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   250  0012  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   251  0013  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   252  0014  01C0               	clrf	(__pbssBANK0+6)& (0+127)
   253  0015  01C1               	clrf	(__pbssBANK0+7)& (0+127)
   254  0016  01C2               	clrf	(__pbssBANK0+8)& (0+127)
   255  0017  01C3               	clrf	(__pbssBANK0+9)& (0+127)
   256  0018                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  0018                     __end_of__initialization:
   260  0018  0183               	clrf	3
   261  0019  281A               	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bitbssCOMMON
   264  03D8                     __pbitbssCOMMON:
   265  03D8                     _PWM_ENABLED:
   266  03D8                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269  003A                     __pbssBANK0:
   270  003A                     _PWM_OFF:
   271  003A                     	ds	2
   272  003C                     _PWM_ON:
   273  003C                     	ds	2
   274  003E                     _PWM_TICKS:
   275  003E                     	ds	2
   276  0040                     _ADC_REF:
   277  0040                     	ds	2
   278  0042                     _ADC_TEMP:
   279  0042                     	ds	2
   280                           
   281                           	psect	cstackCOMMON
   282  0070                     __pcstackCOMMON:
   283  0070                     ?_pwm_routine:
   284  0070                     ??_pwm_routine:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_setup:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_set_pwm_cycle:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_set_pwm_enabled:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_calc_cycle:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_blink:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_probe_temp:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_probe_bat:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_read_data:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 1 bytes @ 0x0
   316  0070                     	ds	2
   317  0072                     ??_setup:
   318  0072                     ??_probe_temp:	
   319                           ; 1 bytes @ 0x2
   320                           
   321  0072                     ??_probe_bat:	
   322                           ; 1 bytes @ 0x2
   323                           
   324  0072                     ??_read_data:	
   325                           ; 1 bytes @ 0x2
   326                           
   327  0072                     ?_write_data:	
   328                           ; 1 bytes @ 0x2
   329                           
   330  0072                     ?___wmul:	
   331                           ; 1 bytes @ 0x2
   332                           
   333  0072                     write_data@value:	
   334                           ; 2 bytes @ 0x2
   335                           
   336  0072                     ___wmul@multiplier:	
   337                           ; 1 bytes @ 0x2
   338                           
   339                           
   340                           ; 2 bytes @ 0x2
   341  0072                     	ds	1
   342  0073                     ??_write_data:
   343                           
   344                           ; 1 bytes @ 0x3
   345  0073                     	ds	1
   346  0074                     read_data@address:
   347  0074                     write_data@address:	
   348                           ; 1 bytes @ 0x4
   349                           
   350  0074                     ___wmul@multiplicand:	
   351                           ; 1 bytes @ 0x4
   352                           
   353                           
   354                           ; 2 bytes @ 0x4
   355  0074                     	ds	2
   356  0076                     ??___wmul:
   357  0076                     ___wmul@product:	
   358                           ; 1 bytes @ 0x6
   359                           
   360                           
   361                           ; 2 bytes @ 0x6
   362  0076                     	ds	2
   363  0078                     ??___awdiv:
   364                           
   365                           ; 1 bytes @ 0x8
   366  0078                     	ds	1
   367  0079                     ??_set_pwm_cycle:
   368  0079                     ??___lwdiv:	
   369                           ; 1 bytes @ 0x9
   370                           
   371                           
   372                           ; 1 bytes @ 0x9
   373  0079                     	ds	2
   374  007B                     ??_set_pwm_enabled:
   375                           
   376                           	psect	cstackBANK0
   377  0020                     __pcstackBANK0:	
   378                           ; 1 bytes @ 0xB
   379                           
   380  0020                     ?___awdiv:
   381  0020                     ___awdiv@divisor:	
   382                           ; 2 bytes @ 0x0
   383                           
   384                           
   385                           ; 2 bytes @ 0x0
   386  0020                     	ds	2
   387  0022                     ___awdiv@dividend:
   388                           
   389                           ; 2 bytes @ 0x2
   390  0022                     	ds	2
   391  0024                     ___awdiv@counter:
   392                           
   393                           ; 1 bytes @ 0x4
   394  0024                     	ds	1
   395  0025                     ___awdiv@sign:
   396                           
   397                           ; 1 bytes @ 0x5
   398  0025                     	ds	1
   399  0026                     ___awdiv@quotient:
   400                           
   401                           ; 2 bytes @ 0x6
   402  0026                     	ds	2
   403  0028                     ??_blink:
   404  0028                     ?___lwdiv:	
   405                           ; 1 bytes @ 0x8
   406                           
   407  0028                     set_pwm_cycle@cycle:	
   408                           ; 2 bytes @ 0x8
   409                           
   410  0028                     ___lwdiv@divisor:	
   411                           ; 1 bytes @ 0x8
   412                           
   413                           
   414                           ; 2 bytes @ 0x8
   415  0028                     	ds	1
   416  0029                     set_pwm_enabled@enabled:
   417                           
   418                           ; 1 bytes @ 0x9
   419  0029                     	ds	1
   420  002A                     ___lwdiv@dividend:
   421                           
   422                           ; 2 bytes @ 0xA
   423  002A                     	ds	1
   424  002B                     blink@n:
   425                           
   426                           ; 1 bytes @ 0xB
   427  002B                     	ds	1
   428  002C                     blink@delay:
   429  002C                     ___lwdiv@counter:	
   430                           ; 1 bytes @ 0xC
   431                           
   432                           
   433                           ; 1 bytes @ 0xC
   434  002C                     	ds	1
   435  002D                     blink@i:
   436  002D                     ___lwdiv@quotient:	
   437                           ; 2 bytes @ 0xD
   438                           
   439                           
   440                           ; 2 bytes @ 0xD
   441  002D                     	ds	2
   442  002F                     ??_calc_cycle:
   443                           
   444                           ; 1 bytes @ 0xF
   445  002F                     	ds	2
   446  0031                     calc_cycle@charge:
   447                           
   448                           ; 1 bytes @ 0x11
   449  0031                     	ds	1
   450  0032                     _calc_cycle$731:
   451                           
   452                           ; 2 bytes @ 0x12
   453  0032                     	ds	4
   454  0036                     ??_main:
   455                           
   456                           ; 1 bytes @ 0x16
   457  0036                     	ds	3
   458  0039                     main@cycle:
   459                           
   460                           ; 1 bytes @ 0x19
   461  0039                     	ds	1
   462                           
   463                           	psect	maintext
   464  001A                     __pmaintext:	
   465 ;;
   466 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   467 ;;
   468 ;; *************** function _main *****************
   469 ;; Defined at:
   470 ;;		line 573 in file "main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;  cycle           1   25[BANK0 ] unsigned char 
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : B00/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1
   484 ;;      Params:         0       0       0
   485 ;;      Locals:         0       1       0
   486 ;;      Temps:          0       3       0
   487 ;;      Totals:         0       4       0
   488 ;;Total ram usage:        4 bytes
   489 ;; Hardware stack levels required when called:    4
   490 ;; This function calls:
   491 ;;		_blink
   492 ;;		_calc_cycle
   493 ;;		_probe_bat
   494 ;;		_probe_temp
   495 ;;		_read_data
   496 ;;		_set_pwm_cycle
   497 ;;		_set_pwm_enabled
   498 ;;		_setup
   499 ;;		_write_data
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _main
   507  001A                     _main:
   508  001A                     l1534:	
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   511                           
   512                           
   513                           ;main.c: 577:     unsigned char cycle = read_data(0x0);
   514  001A  3000               	movlw	0
   515  001B  2348               	fcall	_read_data
   516  001C  1283               	bcf	3,5	;RP0=0, select bank0
   517  001D  1303               	bcf	3,6	;RP1=0, select bank0
   518  001E  00B6               	movwf	??_main
   519  001F  0836               	movf	??_main,w
   520  0020  00B9               	movwf	main@cycle
   521  0021                     l1536:
   522                           
   523                           ;main.c: 581:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   524  0021  3006               	movlw	6
   525  0022  1283               	bcf	3,5	;RP0=0, select bank0
   526  0023  1303               	bcf	3,6	;RP1=0, select bank0
   527  0024  00B8               	movwf	??_main+2
   528  0025  3013               	movlw	19
   529  0026  00B7               	movwf	??_main+1
   530  0027  30AD               	movlw	173
   531  0028  00B6               	movwf	??_main
   532  0029                     u1337:
   533  0029  0BB6               	decfsz	??_main,f
   534  002A  2829               	goto	u1337
   535  002B  0BB7               	decfsz	??_main+1,f
   536  002C  2829               	goto	u1337
   537  002D  0BB8               	decfsz	??_main+2,f
   538  002E  2829               	goto	u1337
   539  002F  0000               	nop
   540  0030                     l1538:
   541                           
   542                           ;main.c: 583:     setup();
   543  0030  2252               	fcall	_setup
   544  0031                     l1540:
   545                           
   546                           ;main.c: 589:         set_pwm_enabled(0x0);
   547  0031  3000               	movlw	0
   548  0032  22B1               	fcall	_set_pwm_enabled
   549  0033                     l1542:
   550                           
   551                           ;main.c: 590:         set_pwm_cycle(0x0);
   552  0033  3000               	movlw	0
   553  0034  2282               	fcall	_set_pwm_cycle
   554  0035                     l1544:
   555                           
   556                           ;main.c: 594:         probe_temp();
   557  0035  22D7               	fcall	_probe_temp
   558  0036                     l1546:
   559                           
   560                           ;main.c: 596:         if (ADC_TEMP == 1023) {
   561  0036  1283               	bcf	3,5	;RP0=0, select bank0
   562  0037  1303               	bcf	3,6	;RP1=0, select bank0
   563  0038  0A42               	incf	_ADC_TEMP,w
   564  0039  3003               	movlw	3
   565  003A  1903               	skipnz
   566  003B  0643               	xorwf	_ADC_TEMP+1,w
   567  003C  1D03               	btfss	3,2
   568  003D  283F               	goto	u1241
   569  003E  2840               	goto	u1240
   570  003F                     u1241:
   571  003F  2843               	goto	l1550
   572  0040                     u1240:
   573  0040                     l1548:
   574                           
   575                           ;main.c: 597:             blink(4);
   576  0040  3004               	movlw	4
   577  0041  2134               	fcall	_blink
   578                           
   579                           ;main.c: 598:         }
   580  0042  2867               	goto	l1560
   581  0043                     l1550:
   582  0043  0843               	movf	_ADC_TEMP+1,w
   583  0044  3A80               	xorlw	128
   584  0045  00FF               	movwf	btemp+1
   585  0046  3081               	movlw	129
   586  0047  027F               	subwf	btemp+1,w
   587  0048  1D03               	skipz
   588  0049  284C               	goto	u1255
   589  004A  3031               	movlw	49
   590  004B  0242               	subwf	_ADC_TEMP,w
   591  004C                     u1255:
   592  004C  1803               	skipnc
   593  004D  284F               	goto	u1251
   594  004E  2850               	goto	u1250
   595  004F                     u1251:
   596  004F  2853               	goto	l1554
   597  0050                     u1250:
   598  0050                     l1552:
   599                           
   600                           ;main.c: 600:             blink(3);
   601  0050  3003               	movlw	3
   602  0051  2134               	fcall	_blink
   603                           
   604                           ;main.c: 601:         }
   605  0052  2867               	goto	l1560
   606  0053                     l1554:
   607  0053  1283               	bcf	3,5	;RP0=0, select bank0
   608  0054  1303               	bcf	3,6	;RP1=0, select bank0
   609  0055  0843               	movf	_ADC_TEMP+1,w
   610  0056  3A80               	xorlw	128
   611  0057  00FF               	movwf	btemp+1
   612  0058  3082               	movlw	130
   613  0059  027F               	subwf	btemp+1,w
   614  005A  1D03               	skipz
   615  005B  285E               	goto	u1265
   616  005C  30A9               	movlw	169
   617  005D  0242               	subwf	_ADC_TEMP,w
   618  005E                     u1265:
   619  005E  1C03               	skipc
   620  005F  2861               	goto	u1261
   621  0060  2862               	goto	u1260
   622  0061                     u1261:
   623  0061  2865               	goto	l1558
   624  0062                     u1260:
   625  0062                     l1556:
   626                           
   627                           ;main.c: 603:             blink(4);
   628  0062  3004               	movlw	4
   629  0063  2134               	fcall	_blink
   630                           
   631                           ;main.c: 604:         }
   632  0064  2867               	goto	l1560
   633  0065                     l1558:
   634                           
   635                           ;main.c: 606:             set_pwm_enabled(0x1);
   636  0065  3001               	movlw	1
   637  0066  22B1               	fcall	_set_pwm_enabled
   638  0067                     l1560:
   639                           
   640                           ;main.c: 611:         if (PWM_ENABLED) {
   641  0067  1C7B               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
   642  0068  286A               	goto	u1271
   643  0069  286B               	goto	u1270
   644  006A                     u1271:
   645  006A  28C7               	goto	l1586
   646  006B                     u1270:
   647  006B                     l1562:
   648                           
   649                           ;main.c: 615:             RB4 = 0x1;
   650  006B  1283               	bcf	3,5	;RP0=0, select bank0
   651  006C  1303               	bcf	3,6	;RP1=0, select bank0
   652  006D  1606               	bsf	6,4	;volatile
   653  006E                     l1564:
   654                           
   655                           ;main.c: 617:             probe_bat();
   656  006E  22FD               	fcall	_probe_bat
   657  006F                     l1566:
   658                           
   659                           ;main.c: 619:             RB4 = 0x0;
   660  006F  1283               	bcf	3,5	;RP0=0, select bank0
   661  0070  1303               	bcf	3,6	;RP1=0, select bank0
   662  0071  1206               	bcf	6,4	;volatile
   663  0072                     l1568:
   664                           
   665                           ;main.c: 623:             if (ADC_REF > 285) {
   666  0072  0841               	movf	_ADC_REF+1,w
   667  0073  3A80               	xorlw	128
   668  0074  00FF               	movwf	btemp+1
   669  0075  3081               	movlw	129
   670  0076  027F               	subwf	btemp+1,w
   671  0077  1D03               	skipz
   672  0078  287B               	goto	u1285
   673  0079  301E               	movlw	30
   674  007A  0240               	subwf	_ADC_REF,w
   675  007B                     u1285:
   676  007B  1C03               	skipc
   677  007C  287E               	goto	u1281
   678  007D  287F               	goto	u1280
   679  007E                     u1281:
   680  007E  2883               	goto	l1572
   681  007F                     u1280:
   682  007F                     l1570:
   683                           
   684                           ;main.c: 624:                 set_pwm_cycle(calc_cycle(20));
   685  007F  3014               	movlw	20
   686  0080  221A               	fcall	_calc_cycle
   687  0081  2282               	fcall	_set_pwm_cycle
   688                           
   689                           ;main.c: 625:             }
   690  0082  28C7               	goto	l1586
   691  0083                     l1572:
   692  0083  1283               	bcf	3,5	;RP0=0, select bank0
   693  0084  1303               	bcf	3,6	;RP1=0, select bank0
   694  0085  0841               	movf	_ADC_REF+1,w
   695  0086  3A80               	xorlw	128
   696  0087  00FF               	movwf	btemp+1
   697  0088  3080               	movlw	128
   698  0089  027F               	subwf	btemp+1,w
   699  008A  1D03               	skipz
   700  008B  288E               	goto	u1295
   701  008C  302E               	movlw	46
   702  008D  0240               	subwf	_ADC_REF,w
   703  008E                     u1295:
   704  008E  1C03               	skipc
   705  008F  2891               	goto	u1291
   706  0090  2892               	goto	u1290
   707  0091                     u1291:
   708  0091  2896               	goto	l1576
   709  0092                     u1290:
   710  0092                     l1574:
   711                           
   712                           ;main.c: 627:                 set_pwm_cycle(calc_cycle(80));
   713  0092  3050               	movlw	80
   714  0093  221A               	fcall	_calc_cycle
   715  0094  2282               	fcall	_set_pwm_cycle
   716                           
   717                           ;main.c: 628:             }
   718  0095  28C7               	goto	l1586
   719  0096                     l1576:
   720  0096  1283               	bcf	3,5	;RP0=0, select bank0
   721  0097  1303               	bcf	3,6	;RP1=0, select bank0
   722  0098  0841               	movf	_ADC_REF+1,w
   723  0099  3A80               	xorlw	128
   724  009A  00FF               	movwf	btemp+1
   725  009B  3080               	movlw	128
   726  009C  027F               	subwf	btemp+1,w
   727  009D  1D03               	skipz
   728  009E  28A1               	goto	u1305
   729  009F  3015               	movlw	21
   730  00A0  0240               	subwf	_ADC_REF,w
   731  00A1                     u1305:
   732  00A1  1C03               	skipc
   733  00A2  28A4               	goto	u1301
   734  00A3  28A5               	goto	u1300
   735  00A4                     u1301:
   736  00A4  28C7               	goto	l1586
   737  00A5                     u1300:
   738  00A5                     l1578:
   739                           
   740                           ;main.c: 631:                 if (cycle == 0xFF) {
   741  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   742  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   743  00A7  0A39               	incf	main@cycle,w
   744  00A8  1D03               	btfss	3,2
   745  00A9  28AB               	goto	u1311
   746  00AA  28AC               	goto	u1310
   747  00AB                     u1311:
   748  00AB  28BE               	goto	l1584
   749  00AC                     u1310:
   750  00AC                     l1580:
   751                           
   752                           ;main.c: 632:                     cycle = calc_cycle(80);
   753  00AC  3050               	movlw	80
   754  00AD  221A               	fcall	_calc_cycle
   755  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   756  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   757  00B0  00B6               	movwf	??_main
   758  00B1  0836               	movf	??_main,w
   759  00B2  00B9               	movwf	main@cycle
   760  00B3  28BE               	goto	l1584
   761  00B4                     l1582:
   762                           
   763                           ;main.c: 637:                     set_pwm_cycle(cycle);
   764  00B4  0839               	movf	main@cycle,w
   765  00B5  2282               	fcall	_set_pwm_cycle
   766                           
   767                           ;main.c: 639:                     write_data(0x0, cycle);
   768  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   769  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   770  00B8  0839               	movf	main@cycle,w
   771  00B9  00B6               	movwf	??_main
   772  00BA  0836               	movf	??_main,w
   773  00BB  00F2               	movwf	write_data@value
   774  00BC  3000               	movlw	0
   775  00BD  2367               	fcall	_write_data
   776  00BE                     l1584:
   777                           
   778                           ;main.c: 635:                 while (cycle --) {
   779  00BE  3001               	movlw	1
   780  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   781  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   782  00C1  02B9               	subwf	main@cycle,f
   783  00C2  0A39               	incf	main@cycle,w
   784  00C3  1D03               	btfss	3,2
   785  00C4  28C6               	goto	u1321
   786  00C5  28C7               	goto	u1320
   787  00C6                     u1321:
   788  00C6  28B4               	goto	l1582
   789  00C7                     u1320:
   790  00C7                     l1586:
   791                           
   792                           ;main.c: 645:         blink(2);
   793  00C7  3002               	movlw	2
   794  00C8  2134               	fcall	_blink
   795  00C9  2831               	goto	l1540
   796  00CA  280A               	ljmp	start
   797  00CB                     __end_of_main:
   798                           
   799                           	psect	text1
   800  0367                     __ptext1:	
   801 ;; *************** function _write_data *****************
   802 ;; Defined at:
   803 ;;		line 522 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  address         1    wreg     unsigned char 
   806 ;;  value           1    2[COMMON] unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  address         1    4[COMMON] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      unsigned char 
   811 ;; Registers used:
   812 ;;		wreg
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1
   818 ;;      Params:         1       0       0
   819 ;;      Locals:         1       0       0
   820 ;;      Temps:          1       0       0
   821 ;;      Totals:         3       0       0
   822 ;;Total ram usage:        3 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _write_data
   834  0367                     _write_data:
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _write_data: [wreg]
   838                           ;write_data@address stored from wreg
   839  0367  00F4               	movwf	write_data@address
   840  0368                     l1328:
   841                           
   842                           ;main.c: 522: unsigned char write_data(unsigned char address, unsigned char value);main.
      +                          c: 523: {;main.c: 526:     while (WR == 0x1)
   843  0368  2B6D               	goto	l1332
   844  0369                     l1330:
   845                           
   846                           ;main.c: 527:     {;main.c: 528:         _delay((unsigned long)((10)*(4000000/4000000.0)
      +                          ));
   847  0369  3003               	movlw	3
   848  036A  00F3               	movwf	??_write_data
   849  036B                     u1347:
   850  036B  0BF3               	decfsz	??_write_data,f
   851  036C  2B6B               	goto	u1347
   852  036D                     l1332:
   853                           
   854                           ;main.c: 526:     while (WR == 0x1)
   855  036D  1683               	bsf	3,5	;RP0=1, select bank3
   856  036E  1703               	bsf	3,6	;RP1=1, select bank3
   857  036F  188C               	btfsc	12,1	;volsfr
   858  0370  2B72               	goto	u831
   859  0371  2B73               	goto	u830
   860  0372                     u831:
   861  0372  2B69               	goto	l1330
   862  0373                     u830:
   863  0373                     l1334:
   864                           
   865                           ;main.c: 531:     EEADR = address;
   866  0373  0874               	movf	write_data@address,w
   867  0374  1283               	bcf	3,5	;RP0=0, select bank2
   868  0375  1703               	bsf	3,6	;RP1=1, select bank2
   869  0376  008D               	movwf	13	;volatile
   870                           
   871                           ;main.c: 532:     EEDAT = value;
   872  0377  0872               	movf	write_data@value,w
   873  0378  008C               	movwf	12	;volatile
   874  0379                     l1336:
   875                           
   876                           ;main.c: 533:     GIE = 0x0;
   877  0379  138B               	bcf	11,7	;volatile
   878  037A                     l1338:
   879                           
   880                           ;main.c: 534:     WREN = 0x1;
   881  037A  1683               	bsf	3,5	;RP0=1, select bank3
   882  037B  1703               	bsf	3,6	;RP1=1, select bank3
   883  037C  150C               	bsf	12,2	;volsfr
   884                           
   885                           ;main.c: 535:     EECON2 = 0x55;
   886  037D  3055               	movlw	85
   887  037E  008D               	movwf	13	;volsfr
   888                           
   889                           ;main.c: 536:     EECON2 = 0xAA;
   890  037F  30AA               	movlw	170
   891  0380  008D               	movwf	13	;volsfr
   892  0381                     l1340:
   893                           
   894                           ;main.c: 537:     WR = 0x1;
   895  0381  148C               	bsf	12,1	;volsfr
   896  0382                     l1342:
   897                           
   898                           ;main.c: 538:     WREN = 0x0;
   899  0382  110C               	bcf	12,2	;volsfr
   900  0383                     l1344:
   901                           
   902                           ;main.c: 539:     GIE = 0x1;
   903  0383  178B               	bsf	11,7	;volatile
   904  0384                     l1346:
   905  0384                     l175:	
   906                           ;main.c: 541:     return WRERR;;	Return value of _write_data is never used
   907                           
   908  0384  0008               	return
   909  0385                     __end_of_write_data:
   910                           
   911                           	psect	text2
   912  0252                     __ptext2:	
   913 ;; *************** function _setup *****************
   914 ;; Defined at:
   915 ;;		line 243 in file "main.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1
   929 ;;      Params:         0       0       0
   930 ;;      Locals:         0       0       0
   931 ;;      Temps:          0       0       0
   932 ;;      Totals:         0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _setup
   945  0252                     _setup:
   946  0252                     l1208:	
   947                           ;incstack = 0
   948                           ; Regs used in _setup: [wreg+status,2]
   949                           
   950                           
   951                           ;main.c: 247:     IRCF0 = 0x1;
   952  0252  1683               	bsf	3,5	;RP0=1, select bank1
   953  0253  1303               	bcf	3,6	;RP1=0, select bank1
   954  0254  160F               	bsf	15,4	;volatile
   955                           
   956                           ;main.c: 248:     IRCF1 = 0x1;
   957  0255  168F               	bsf	15,5	;volatile
   958                           
   959                           ;main.c: 249:     IRCF2 = 0x1;
   960  0256  170F               	bsf	15,6	;volatile
   961                           
   962                           ;main.c: 250:     OSTS = 0x0;
   963  0257  118F               	bcf	15,3	;volatile
   964                           
   965                           ;main.c: 251:     HTS = 0x1;
   966  0258  150F               	bsf	15,2	;volatile
   967                           
   968                           ;main.c: 252:     LTS = 0x1;
   969  0259  148F               	bsf	15,1	;volatile
   970                           
   971                           ;main.c: 253:     SCS = 0x1;
   972  025A  140F               	bsf	15,0	;volatile
   973  025B                     l1210:
   974                           
   975                           ;main.c: 257:     OPTION_REG = 0x80;
   976  025B  3080               	movlw	128
   977  025C  0081               	movwf	1	;volatile
   978  025D                     l1212:
   979                           
   980                           ;main.c: 258:     C1ON = 0x0;
   981  025D  1283               	bcf	3,5	;RP0=0, select bank2
   982  025E  1703               	bsf	3,6	;RP1=1, select bank2
   983  025F  1399               	bcf	25,7	;volatile
   984  0260                     l1214:
   985                           
   986                           ;main.c: 259:     C2ON = 0x0;
   987  0260  139A               	bcf	26,7	;volatile
   988  0261                     l1216:
   989                           
   990                           ;main.c: 263:     GIE = 0x1;
   991  0261  178B               	bsf	11,7	;volatile
   992  0262                     l1218:
   993                           
   994                           ;main.c: 264:     PEIE = 0x1;
   995  0262  170B               	bsf	11,6	;volatile
   996  0263                     l1220:
   997                           
   998                           ;main.c: 265:     T0IE = 0x1;
   999  0263  168B               	bsf	11,5	;volatile
  1000  0264                     l1222:
  1001                           
  1002                           ;main.c: 266:     INTE = 0x0;
  1003  0264  120B               	bcf	11,4	;volatile
  1004  0265                     l1224:
  1005                           
  1006                           ;main.c: 267:     RABIE = 0x0;
  1007  0265  118B               	bcf	11,3	;volatile
  1008  0266                     l1226:
  1009                           
  1010                           ;main.c: 268:     ADIE = 0x0;
  1011  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1012  0267  1303               	bcf	3,6	;RP1=0, select bank1
  1013  0268  130C               	bcf	12,6	;volatile
  1014  0269                     l1228:
  1015                           
  1016                           ;main.c: 272:     T0CS = 0x0;
  1017  0269  1281               	bcf	1,5	;volatile
  1018  026A                     l1230:
  1019                           
  1020                           ;main.c: 273:     PS2 = 0x0;
  1021  026A  1101               	bcf	1,2	;volatile
  1022  026B                     l1232:
  1023                           
  1024                           ;main.c: 274:     PS1 = 0x1;
  1025  026B  1481               	bsf	1,1	;volatile
  1026  026C                     l1234:
  1027                           
  1028                           ;main.c: 275:     PS0 = 0x0;
  1029  026C  1001               	bcf	1,0	;volatile
  1030  026D                     l1236:
  1031                           
  1032                           ;main.c: 279:     ADFM = 0x1;
  1033  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1034  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1035  026F  179F               	bsf	31,7	;volatile
  1036  0270                     l1238:
  1037                           
  1038                           ;main.c: 280:     VCFG = 0x0;
  1039  0270  131F               	bcf	31,6	;volatile
  1040  0271                     l1240:
  1041                           
  1042                           ;main.c: 281:     ADON = 0x0;
  1043  0271  101F               	bcf	31,0	;volatile
  1044  0272                     l1242:
  1045                           
  1046                           ;main.c: 282:     ADCS2 = 0x0;
  1047  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1048  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1049  0274  131F               	bcf	31,6	;volatile
  1050  0275                     l1244:
  1051                           
  1052                           ;main.c: 283:     ADCS1 = 0x1;
  1053  0275  169F               	bsf	31,5	;volatile
  1054  0276                     l1246:
  1055                           
  1056                           ;main.c: 284:     ADCS0 = 0x1;
  1057  0276  161F               	bsf	31,4	;volatile
  1058                           
  1059                           ;main.c: 285:     ANSEL = 0xC;
  1060  0277  300C               	movlw	12
  1061  0278  1283               	bcf	3,5	;RP0=0, select bank2
  1062  0279  1703               	bsf	3,6	;RP1=1, select bank2
  1063  027A  009E               	movwf	30	;volatile
  1064  027B                     l1248:
  1065                           
  1066                           ;main.c: 286:     ANSELH = 0x0;
  1067  027B  019F               	clrf	31	;volatile
  1068  027C                     l1250:
  1069                           
  1070                           ;main.c: 290:     TRISA5 = 0x1;
  1071  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1072  027D  1303               	bcf	3,6	;RP1=0, select bank1
  1073  027E  1685               	bsf	5,5	;volatile
  1074  027F                     l1252:
  1075                           
  1076                           ;main.c: 291:     TRISB4 = 0x0;
  1077  027F  1206               	bcf	6,4	;volatile
  1078  0280                     l1254:
  1079                           
  1080                           ;main.c: 292:     TRISC0 = 0x0;
  1081  0280  1007               	bcf	7,0	;volatile
  1082  0281                     l128:
  1083  0281  0008               	return
  1084  0282                     __end_of_setup:
  1085                           
  1086                           	psect	text3
  1087  02B1                     __ptext3:	
  1088 ;; *************** function _set_pwm_enabled *****************
  1089 ;; Defined at:
  1090 ;;		line 330 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  enabled         1    wreg     unsigned char 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  enabled         1    9[BANK0 ] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1
  1104 ;;      Params:         0       0       0
  1105 ;;      Locals:         0       1       0
  1106 ;;      Temps:          0       0       0
  1107 ;;      Totals:         0       1       0
  1108 ;;Total ram usage:        1 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    3
  1111 ;; This function calls:
  1112 ;;		_set_pwm_cycle
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           
  1119                           ;psect for function _set_pwm_enabled
  1120  02B1                     _set_pwm_enabled:
  1121                           
  1122                           ;incstack = 0
  1123                           ; Regs used in _set_pwm_enabled: [wreg+status,2+status,0+pclath+cstack]
  1124                           ;set_pwm_enabled@enabled stored from wreg
  1125  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1126  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1127  02B3  00A9               	movwf	set_pwm_enabled@enabled
  1128  02B4                     l1500:
  1129                           
  1130                           ;main.c: 334:     PWM_ENABLED = (enabled & 0x1);
  1131  02B4  107B               	bcf	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  1132  02B5  1C29               	btfss	set_pwm_enabled@enabled,0
  1133  02B6  2AB8               	goto	u1165
  1134  02B7  147B               	bsf	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  1135  02B8                     u1165:
  1136  02B8                     l1502:
  1137                           
  1138                           ;main.c: 335:     PWM_TICKS = 0x0;
  1139  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1140  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1141  02BA  01BE               	clrf	_PWM_TICKS	;volatile
  1142  02BB  01BF               	clrf	_PWM_TICKS+1	;volatile
  1143  02BC                     l1504:
  1144                           
  1145                           ;main.c: 337:     if (PWM_ON == 0x0 && PWM_OFF == 0x0) {
  1146  02BC  083C               	movf	_PWM_ON,w
  1147  02BD  043D               	iorwf	_PWM_ON+1,w
  1148  02BE  1D03               	btfss	3,2
  1149  02BF  2AC1               	goto	u1171
  1150  02C0  2AC2               	goto	u1170
  1151  02C1                     u1171:
  1152  02C1  2ACA               	goto	l1510
  1153  02C2                     u1170:
  1154  02C2                     l1506:
  1155  02C2  083A               	movf	_PWM_OFF,w
  1156  02C3  043B               	iorwf	_PWM_OFF+1,w
  1157  02C4  1D03               	btfss	3,2
  1158  02C5  2AC7               	goto	u1181
  1159  02C6  2AC8               	goto	u1180
  1160  02C7                     u1181:
  1161  02C7  2ACA               	goto	l1510
  1162  02C8                     u1180:
  1163  02C8                     l1508:
  1164                           
  1165                           ;main.c: 338:         set_pwm_cycle(50);
  1166  02C8  3032               	movlw	50
  1167  02C9  2282               	fcall	_set_pwm_cycle
  1168  02CA                     l1510:
  1169                           
  1170                           ;main.c: 341:     RB4 = (enabled & 0x1);
  1171  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1172  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1173  02CC  1829               	btfsc	set_pwm_enabled@enabled,0
  1174  02CD  2ACF               	goto	u1191
  1175  02CE  2AD3               	goto	u1190
  1176  02CF                     u1191:
  1177  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1178  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1179  02D1  1606               	bsf	6,4	;volatile
  1180  02D2  2AD6               	goto	u1204
  1181  02D3                     u1190:
  1182  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1183  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1184  02D5  1206               	bcf	6,4	;volatile
  1185  02D6                     u1204:
  1186  02D6                     l135:
  1187  02D6  0008               	return
  1188  02D7                     __end_of_set_pwm_enabled:
  1189                           
  1190                           	psect	text4
  1191  0282                     __ptext4:	
  1192 ;; *************** function _set_pwm_cycle *****************
  1193 ;; Defined at:
  1194 ;;		line 307 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  cycle           1    wreg     unsigned char 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  cycle           1    8[BANK0 ] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, status,2, status,0, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1
  1208 ;;      Params:         0       0       0
  1209 ;;      Locals:         0       1       0
  1210 ;;      Temps:          2       0       0
  1211 ;;      Totals:         2       1       0
  1212 ;;Total ram usage:        3 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    2
  1215 ;; This function calls:
  1216 ;;		___awdiv
  1217 ;;		___wmul
  1218 ;; This function is called by:
  1219 ;;		_set_pwm_enabled
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _set_pwm_cycle
  1226  0282                     _set_pwm_cycle:
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _set_pwm_cycle: [wreg+status,2+status,0+pclath+cstack]
  1230                           ;set_pwm_cycle@cycle stored from wreg
  1231  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0284  00A8               	movwf	set_pwm_cycle@cycle
  1234  0285                     l1468:
  1235                           
  1236                           ;main.c: 311:     PWM_TICKS = 0x0;
  1237  0285  01BE               	clrf	_PWM_TICKS	;volatile
  1238  0286  01BF               	clrf	_PWM_TICKS+1	;volatile
  1239  0287                     l1470:
  1240                           
  1241                           ;main.c: 312:     PWM_ON = ((cycle * 500) / 100);
  1242  0287  3064               	movlw	100
  1243  0288  00A0               	movwf	___awdiv@divisor
  1244  0289  3000               	movlw	0
  1245  028A  00A1               	movwf	___awdiv@divisor+1
  1246  028B  0828               	movf	set_pwm_cycle@cycle,w
  1247  028C  00F9               	movwf	??_set_pwm_cycle
  1248  028D  01FA               	clrf	??_set_pwm_cycle+1
  1249  028E  0879               	movf	??_set_pwm_cycle,w
  1250  028F  00F2               	movwf	___wmul@multiplier
  1251  0290  087A               	movf	??_set_pwm_cycle+1,w
  1252  0291  00F3               	movwf	___wmul@multiplier+1
  1253  0292  30F4               	movlw	244
  1254  0293  00F4               	movwf	___wmul@multiplicand
  1255  0294  3001               	movlw	1
  1256  0295  00F5               	movwf	___wmul@multiplicand+1
  1257  0296  2323               	fcall	___wmul
  1258  0297  0873               	movf	?___wmul+1,w
  1259  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1261  029A  00A3               	movwf	___awdiv@dividend+1
  1262  029B  0872               	movf	?___wmul,w
  1263  029C  00A2               	movwf	___awdiv@dividend
  1264  029D  20CB               	fcall	___awdiv
  1265  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1266  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1267  02A0  0821               	movf	?___awdiv+1,w
  1268  02A1  00BD               	movwf	_PWM_ON+1
  1269  02A2  0820               	movf	?___awdiv,w
  1270  02A3  00BC               	movwf	_PWM_ON
  1271  02A4                     l1472:
  1272                           
  1273                           ;main.c: 313:     PWM_OFF = 500 - PWM_ON;
  1274  02A4  30F4               	movlw	244
  1275  02A5  00F9               	movwf	??_set_pwm_cycle
  1276  02A6  3001               	movlw	1
  1277  02A7  00FA               	movwf	??_set_pwm_cycle+1
  1278  02A8  083C               	movf	_PWM_ON,w
  1279  02A9  0279               	subwf	??_set_pwm_cycle,w
  1280  02AA  00BA               	movwf	_PWM_OFF
  1281  02AB  083D               	movf	_PWM_ON+1,w
  1282  02AC  1C03               	skipc
  1283  02AD  0A3D               	incf	_PWM_ON+1,w
  1284  02AE  027A               	subwf	??_set_pwm_cycle+1,w
  1285  02AF  00BB               	movwf	_PWM_OFF+1
  1286  02B0                     l131:
  1287  02B0  0008               	return
  1288  02B1                     __end_of_set_pwm_cycle:
  1289                           
  1290                           	psect	text5
  1291  0348                     __ptext5:	
  1292 ;; *************** function _read_data *****************
  1293 ;; Defined at:
  1294 ;;		line 490 in file "main.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  address         1    wreg     unsigned char 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  address         1    4[COMMON] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      unsigned char 
  1301 ;; Registers used:
  1302 ;;		wreg
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1
  1308 ;;      Params:         0       0       0
  1309 ;;      Locals:         1       0       0
  1310 ;;      Temps:          2       0       0
  1311 ;;      Totals:         3       0       0
  1312 ;;Total ram usage:        3 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _read_data
  1324  0348                     _read_data:
  1325                           
  1326                           ;incstack = 0
  1327                           ; Regs used in _read_data: [wreg]
  1328                           ;read_data@address stored from wreg
  1329  0348  00F4               	movwf	read_data@address
  1330  0349                     l1314:
  1331                           
  1332                           ;main.c: 490: unsigned char read_data(unsigned char address);main.c: 491: {;main.c: 494:
      +                               GIE = 0x0;
  1333  0349  138B               	bcf	11,7	;volatile
  1334  034A                     l1316:
  1335                           
  1336                           ;main.c: 495:     EEADR = address;
  1337  034A  0874               	movf	read_data@address,w
  1338  034B  1283               	bcf	3,5	;RP0=0, select bank2
  1339  034C  1703               	bsf	3,6	;RP1=1, select bank2
  1340  034D  008D               	movwf	13	;volatile
  1341                           
  1342                           ;main.c: 496:     EECON1 = 0x1;
  1343  034E  3001               	movlw	1
  1344  034F  1683               	bsf	3,5	;RP0=1, select bank3
  1345  0350  1703               	bsf	3,6	;RP1=1, select bank3
  1346  0351  008C               	movwf	12	;volsfr
  1347  0352                     l1318:
  1348                           
  1349                           ;main.c: 497:     RD = 0x1;
  1350  0352  140C               	bsf	12,0	;volsfr
  1351                           
  1352                           ;main.c: 499:     while (RD == 0x1)
  1353  0353  2B5C               	goto	l1322
  1354  0354                     l1320:
  1355                           
  1356                           ;main.c: 500:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1357  0354  3027               	movlw	39
  1358  0355  00F3               	movwf	??_read_data+1
  1359  0356  30F5               	movlw	245
  1360  0357  00F2               	movwf	??_read_data
  1361  0358                     u1357:
  1362  0358  0BF2               	decfsz	??_read_data,f
  1363  0359  2B58               	goto	u1357
  1364  035A  0BF3               	decfsz	??_read_data+1,f
  1365  035B  2B58               	goto	u1357
  1366  035C                     l1322:
  1367                           
  1368                           ;main.c: 499:     while (RD == 0x1)
  1369  035C  1683               	bsf	3,5	;RP0=1, select bank3
  1370  035D  1703               	bsf	3,6	;RP1=1, select bank3
  1371  035E  180C               	btfsc	12,0	;volsfr
  1372  035F  2B61               	goto	u821
  1373  0360  2B62               	goto	u820
  1374  0361                     u821:
  1375  0361  2B54               	goto	l1320
  1376  0362                     u820:
  1377  0362                     l168:
  1378                           
  1379                           ;main.c: 502:     GIE = 0x1;
  1380  0362  178B               	bsf	11,7	;volatile
  1381  0363                     l1324:
  1382                           
  1383                           ;main.c: 504:     return EEDAT;
  1384  0363  1283               	bcf	3,5	;RP0=0, select bank2
  1385  0364  1703               	bsf	3,6	;RP1=1, select bank2
  1386  0365  080C               	movf	12,w	;volatile
  1387  0366                     l169:
  1388  0366  0008               	return
  1389  0367                     __end_of_read_data:
  1390                           
  1391                           	psect	text6
  1392  02D7                     __ptext6:	
  1393 ;; *************** function _probe_temp *****************
  1394 ;; Defined at:
  1395 ;;		line 423 in file "main.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1
  1409 ;;      Params:         0       0       0
  1410 ;;      Locals:         0       0       0
  1411 ;;      Temps:          2       0       0
  1412 ;;      Totals:         2       0       0
  1413 ;;Total ram usage:        2 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _probe_temp
  1425  02D7                     _probe_temp:
  1426  02D7                     l1290:	
  1427                           ;incstack = 0
  1428                           ; Regs used in _probe_temp: [wreg]
  1429                           
  1430                           
  1431                           ;main.c: 427:     CHS3 = 0x0;
  1432  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1433  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1434  02D9  129F               	bcf	31,5	;volatile
  1435                           
  1436                           ;main.c: 428:     CHS2 = 0x0;
  1437  02DA  121F               	bcf	31,4	;volatile
  1438                           
  1439                           ;main.c: 429:     CHS1 = 0x1;
  1440  02DB  159F               	bsf	31,3	;volatile
  1441                           
  1442                           ;main.c: 430:     CHS0 = 0x1;
  1443  02DC  151F               	bsf	31,2	;volatile
  1444                           
  1445                           ;main.c: 432:     ADON = 0x1;
  1446  02DD  141F               	bsf	31,0	;volatile
  1447  02DE                     l1292:
  1448                           
  1449                           ;main.c: 434:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1450  02DE  3027               	movlw	39
  1451  02DF  00F3               	movwf	??_probe_temp+1
  1452  02E0  30F5               	movlw	245
  1453  02E1  00F2               	movwf	??_probe_temp
  1454  02E2                     u1367:
  1455  02E2  0BF2               	decfsz	??_probe_temp,f
  1456  02E3  2AE2               	goto	u1367
  1457  02E4  0BF3               	decfsz	??_probe_temp+1,f
  1458  02E5  2AE2               	goto	u1367
  1459  02E6                     l1294:
  1460                           
  1461                           ;main.c: 436:     GO = 0x1;
  1462  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1463  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1464  02E8  149F               	bsf	31,1	;volatile
  1465                           
  1466                           ;main.c: 438:     while (!GO) {
  1467  02E9  2AEE               	goto	l1298
  1468  02EA                     l1296:
  1469                           
  1470                           ;main.c: 439:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1471  02EA  3003               	movlw	3
  1472  02EB  00F2               	movwf	??_probe_temp
  1473  02EC                     u1377:
  1474  02EC  0BF2               	decfsz	??_probe_temp,f
  1475  02ED  2AEC               	goto	u1377
  1476  02EE                     l1298:
  1477                           
  1478                           ;main.c: 438:     while (!GO) {
  1479  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1480  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1481  02F0  1C9F               	btfss	31,1	;volatile
  1482  02F1  2AF3               	goto	u801
  1483  02F2  2AF4               	goto	u800
  1484  02F3                     u801:
  1485  02F3  2AEA               	goto	l1296
  1486  02F4                     u800:
  1487  02F4                     l1300:
  1488                           
  1489                           ;main.c: 442:     ADC_TEMP = (ADRESH << 8) | ADRESL;
  1490  02F4  081E               	movf	30,w	;volatile
  1491  02F5  00C3               	movwf	_ADC_TEMP+1
  1492  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  1493  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  1494  02F8  081E               	movf	30,w	;volatile
  1495  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1496  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1497  02FB  00C2               	movwf	_ADC_TEMP
  1498  02FC                     l157:
  1499  02FC  0008               	return
  1500  02FD                     __end_of_probe_temp:
  1501                           
  1502                           	psect	text7
  1503  02FD                     __ptext7:	
  1504 ;; *************** function _probe_bat *****************
  1505 ;; Defined at:
  1506 ;;		line 455 in file "main.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1
  1520 ;;      Params:         0       0       0
  1521 ;;      Locals:         0       0       0
  1522 ;;      Temps:          2       0       0
  1523 ;;      Totals:         2       0       0
  1524 ;;Total ram usage:        2 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           
  1535                           ;psect for function _probe_bat
  1536  02FD                     _probe_bat:
  1537  02FD                     l1302:	
  1538                           ;incstack = 0
  1539                           ; Regs used in _probe_bat: [wreg]
  1540                           
  1541                           
  1542                           ;main.c: 459:     CHS3 = 0x0;
  1543  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1544  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1545  02FF  129F               	bcf	31,5	;volatile
  1546                           
  1547                           ;main.c: 460:     CHS2 = 0x0;
  1548  0300  121F               	bcf	31,4	;volatile
  1549                           
  1550                           ;main.c: 461:     CHS1 = 0x1;
  1551  0301  159F               	bsf	31,3	;volatile
  1552                           
  1553                           ;main.c: 462:     CHS0 = 0x0;
  1554  0302  111F               	bcf	31,2	;volatile
  1555                           
  1556                           ;main.c: 464:     ADON = 0x1;
  1557  0303  141F               	bsf	31,0	;volatile
  1558  0304                     l1304:
  1559                           
  1560                           ;main.c: 466:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1561  0304  3027               	movlw	39
  1562  0305  00F3               	movwf	??_probe_bat+1
  1563  0306  30F5               	movlw	245
  1564  0307  00F2               	movwf	??_probe_bat
  1565  0308                     u1387:
  1566  0308  0BF2               	decfsz	??_probe_bat,f
  1567  0309  2B08               	goto	u1387
  1568  030A  0BF3               	decfsz	??_probe_bat+1,f
  1569  030B  2B08               	goto	u1387
  1570  030C                     l1306:
  1571                           
  1572                           ;main.c: 468:     GO = 0x1;
  1573  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1574  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1575  030E  149F               	bsf	31,1	;volatile
  1576                           
  1577                           ;main.c: 470:     while (!GO) {
  1578  030F  2B14               	goto	l1310
  1579  0310                     l1308:
  1580                           
  1581                           ;main.c: 471:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1582  0310  3003               	movlw	3
  1583  0311  00F2               	movwf	??_probe_bat
  1584  0312                     u1397:
  1585  0312  0BF2               	decfsz	??_probe_bat,f
  1586  0313  2B12               	goto	u1397
  1587  0314                     l1310:
  1588                           
  1589                           ;main.c: 470:     while (!GO) {
  1590  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0316  1C9F               	btfss	31,1	;volatile
  1593  0317  2B19               	goto	u811
  1594  0318  2B1A               	goto	u810
  1595  0319                     u811:
  1596  0319  2B10               	goto	l1308
  1597  031A                     u810:
  1598  031A                     l1312:
  1599                           
  1600                           ;main.c: 474:     ADC_REF = (ADRESH << 8) | ADRESL;
  1601  031A  081E               	movf	30,w	;volatile
  1602  031B  00C1               	movwf	_ADC_REF+1
  1603  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1604  031D  1303               	bcf	3,6	;RP1=0, select bank1
  1605  031E  081E               	movf	30,w	;volatile
  1606  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0321  00C0               	movwf	_ADC_REF
  1609  0322                     l163:
  1610  0322  0008               	return
  1611  0323                     __end_of_probe_bat:
  1612                           
  1613                           	psect	text8
  1614  021A                     __ptext8:	
  1615 ;; *************** function _calc_cycle *****************
  1616 ;; Defined at:
  1617 ;;		line 356 in file "main.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  charge          1    wreg     unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  charge          1   17[BANK0 ] unsigned char 
  1622 ;;  current         2    0        unsigned int 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1
  1632 ;;      Params:         0       0       0
  1633 ;;      Locals:         0       5       0
  1634 ;;      Temps:          0       2       0
  1635 ;;      Totals:         0       7       0
  1636 ;;Total ram usage:        7 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    2
  1639 ;; This function calls:
  1640 ;;		___awdiv
  1641 ;;		___lwdiv
  1642 ;;		___wmul
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _calc_cycle
  1650  021A                     _calc_cycle:
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _calc_cycle: [wreg+status,2+status,0+pclath+cstack]
  1654                           ;calc_cycle@charge stored from wreg
  1655  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1656  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1657  021C  00B1               	movwf	calc_cycle@charge
  1658  021D                     l1512:
  1659  021D                     l1516:	
  1660                           ;main.c: 364:     if (350 > 3000) {
  1661                           
  1662                           
  1663                           ;main.c: 368:     return (unsigned char)((100 * (current * (charge / 100))) / current);
  1664  021D  3064               	movlw	100
  1665  021E  00A0               	movwf	___awdiv@divisor
  1666  021F  3000               	movlw	0
  1667  0220  00A1               	movwf	___awdiv@divisor+1
  1668  0221  0831               	movf	calc_cycle@charge,w
  1669  0222  00AF               	movwf	??_calc_cycle
  1670  0223  01B0               	clrf	??_calc_cycle+1
  1671  0224  082F               	movf	??_calc_cycle,w
  1672  0225  00A2               	movwf	___awdiv@dividend
  1673  0226  0830               	movf	??_calc_cycle+1,w
  1674  0227  00A3               	movwf	___awdiv@dividend+1
  1675  0228  20CB               	fcall	___awdiv
  1676  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1677  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1678  022B  0821               	movf	?___awdiv+1,w
  1679  022C  00F3               	movwf	___wmul@multiplier+1
  1680  022D  0820               	movf	?___awdiv,w
  1681  022E  00F2               	movwf	___wmul@multiplier
  1682  022F  305E               	movlw	94
  1683  0230  00F4               	movwf	___wmul@multiplicand
  1684  0231  3001               	movlw	1
  1685  0232  00F5               	movwf	___wmul@multiplicand+1
  1686  0233  2323               	fcall	___wmul
  1687  0234  0873               	movf	?___wmul+1,w
  1688  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0237  00B3               	movwf	_calc_cycle$731+1
  1691  0238  0872               	movf	?___wmul,w
  1692  0239  00B2               	movwf	_calc_cycle$731
  1693                           
  1694                           ;main.c: 368:     return (unsigned char)((100 * (current * (charge / 100))) / current);
  1695  023A  305E               	movlw	94
  1696  023B  00A8               	movwf	___lwdiv@divisor
  1697  023C  3001               	movlw	1
  1698  023D  00A9               	movwf	___lwdiv@divisor+1
  1699  023E  0833               	movf	_calc_cycle$731+1,w
  1700  023F  00F3               	movwf	___wmul@multiplier+1
  1701  0240  0832               	movf	_calc_cycle$731,w
  1702  0241  00F2               	movwf	___wmul@multiplier
  1703  0242  3064               	movlw	100
  1704  0243  00F4               	movwf	___wmul@multiplicand
  1705  0244  3000               	movlw	0
  1706  0245  00F5               	movwf	___wmul@multiplicand+1
  1707  0246  2323               	fcall	___wmul
  1708  0247  0873               	movf	?___wmul+1,w
  1709  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1711  024A  00AB               	movwf	___lwdiv@dividend+1
  1712  024B  0872               	movf	?___wmul,w
  1713  024C  00AA               	movwf	___lwdiv@dividend
  1714  024D  2196               	fcall	___lwdiv
  1715  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1716  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0250  0828               	movf	?___lwdiv,w
  1718  0251                     l139:
  1719  0251  0008               	return
  1720  0252                     __end_of_calc_cycle:
  1721                           
  1722                           	psect	text9
  1723  0323                     __ptext9:	
  1724 ;; *************** function ___wmul *****************
  1725 ;; Defined at:
  1726 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  multiplier      2    2[COMMON] unsigned int 
  1729 ;;  multiplicand    2    4[COMMON] unsigned int 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  product         2    6[COMMON] unsigned int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2    2[COMMON] unsigned int 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1
  1741 ;;      Params:         4       0       0
  1742 ;;      Locals:         2       0       0
  1743 ;;      Temps:          0       0       0
  1744 ;;      Totals:         6       0       0
  1745 ;;Total ram usage:        6 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_set_pwm_cycle
  1752 ;;		_calc_cycle
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function ___wmul
  1758  0323                     ___wmul:
  1759  0323                     l1118:	
  1760                           ;incstack = 0
  1761                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1762                           
  1763  0323  01F6               	clrf	___wmul@product
  1764  0324  01F7               	clrf	___wmul@product+1
  1765  0325                     l1120:
  1766  0325  1C72               	btfss	___wmul@multiplier,0
  1767  0326  2B28               	goto	u511
  1768  0327  2B29               	goto	u510
  1769  0328                     u511:
  1770  0328  2B2F               	goto	l296
  1771  0329                     u510:
  1772  0329                     l1122:
  1773  0329  0874               	movf	___wmul@multiplicand,w
  1774  032A  07F6               	addwf	___wmul@product,f
  1775  032B  1803               	skipnc
  1776  032C  0AF7               	incf	___wmul@product+1,f
  1777  032D  0875               	movf	___wmul@multiplicand+1,w
  1778  032E  07F7               	addwf	___wmul@product+1,f
  1779  032F                     l296:
  1780  032F  3001               	movlw	1
  1781  0330                     u525:
  1782  0330  1003               	clrc
  1783  0331  0DF4               	rlf	___wmul@multiplicand,f
  1784  0332  0DF5               	rlf	___wmul@multiplicand+1,f
  1785  0333  3EFF               	addlw	-1
  1786  0334  1D03               	skipz
  1787  0335  2B30               	goto	u525
  1788  0336                     l1124:
  1789  0336  3001               	movlw	1
  1790  0337                     u535:
  1791  0337  1003               	clrc
  1792  0338  0CF3               	rrf	___wmul@multiplier+1,f
  1793  0339  0CF2               	rrf	___wmul@multiplier,f
  1794  033A  3EFF               	addlw	-1
  1795  033B  1D03               	skipz
  1796  033C  2B37               	goto	u535
  1797  033D                     l1126:
  1798  033D  0872               	movf	___wmul@multiplier,w
  1799  033E  0473               	iorwf	___wmul@multiplier+1,w
  1800  033F  1D03               	btfss	3,2
  1801  0340  2B42               	goto	u541
  1802  0341  2B43               	goto	u540
  1803  0342                     u541:
  1804  0342  2B25               	goto	l1120
  1805  0343                     u540:
  1806  0343                     l1128:
  1807  0343  0877               	movf	___wmul@product+1,w
  1808  0344  00F3               	movwf	?___wmul+1
  1809  0345  0876               	movf	___wmul@product,w
  1810  0346  00F2               	movwf	?___wmul
  1811  0347                     l298:
  1812  0347  0008               	return
  1813  0348                     __end_of___wmul:
  1814                           
  1815                           	psect	text10
  1816  0196                     __ptext10:	
  1817 ;; *************** function ___lwdiv *****************
  1818 ;; Defined at:
  1819 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  divisor         2    8[BANK0 ] unsigned int 
  1822 ;;  dividend        2   10[BANK0 ] unsigned int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  quotient        2   13[BANK0 ] unsigned int 
  1825 ;;  counter         1   12[BANK0 ] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  2    8[BANK0 ] unsigned int 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1
  1835 ;;      Params:         0       4       0
  1836 ;;      Locals:         0       3       0
  1837 ;;      Temps:          1       0       0
  1838 ;;      Totals:         1       7       0
  1839 ;;Total ram usage:        8 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_calc_cycle
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function ___lwdiv
  1851  0196                     ___lwdiv:
  1852  0196                     l1474:	
  1853                           ;incstack = 0
  1854                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1855                           
  1856  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0198  01AD               	clrf	___lwdiv@quotient
  1859  0199  01AE               	clrf	___lwdiv@quotient+1
  1860  019A                     l1476:
  1861  019A  0828               	movf	___lwdiv@divisor,w
  1862  019B  0429               	iorwf	___lwdiv@divisor+1,w
  1863  019C  1903               	btfsc	3,2
  1864  019D  299F               	goto	u1091
  1865  019E  29A0               	goto	u1090
  1866  019F                     u1091:
  1867  019F  29D7               	goto	l1496
  1868  01A0                     u1090:
  1869  01A0                     l1478:
  1870  01A0  01AC               	clrf	___lwdiv@counter
  1871  01A1  0AAC               	incf	___lwdiv@counter,f
  1872  01A2  29AE               	goto	l1484
  1873  01A3                     l1480:
  1874  01A3  3001               	movlw	1
  1875  01A4                     u1105:
  1876  01A4  1003               	clrc
  1877  01A5  0DA8               	rlf	___lwdiv@divisor,f
  1878  01A6  0DA9               	rlf	___lwdiv@divisor+1,f
  1879  01A7  3EFF               	addlw	-1
  1880  01A8  1D03               	skipz
  1881  01A9  29A4               	goto	u1105
  1882  01AA                     l1482:
  1883  01AA  3001               	movlw	1
  1884  01AB  00F9               	movwf	??___lwdiv
  1885  01AC  0879               	movf	??___lwdiv,w
  1886  01AD  07AC               	addwf	___lwdiv@counter,f
  1887  01AE                     l1484:
  1888  01AE  1FA9               	btfss	___lwdiv@divisor+1,7
  1889  01AF  29B1               	goto	u1111
  1890  01B0  29B2               	goto	u1110
  1891  01B1                     u1111:
  1892  01B1  29A3               	goto	l1480
  1893  01B2                     u1110:
  1894  01B2                     l1486:
  1895  01B2  3001               	movlw	1
  1896  01B3                     u1125:
  1897  01B3  1003               	clrc
  1898  01B4  0DAD               	rlf	___lwdiv@quotient,f
  1899  01B5  0DAE               	rlf	___lwdiv@quotient+1,f
  1900  01B6  3EFF               	addlw	-1
  1901  01B7  1D03               	skipz
  1902  01B8  29B3               	goto	u1125
  1903  01B9  0829               	movf	___lwdiv@divisor+1,w
  1904  01BA  022B               	subwf	___lwdiv@dividend+1,w
  1905  01BB  1D03               	skipz
  1906  01BC  29BF               	goto	u1135
  1907  01BD  0828               	movf	___lwdiv@divisor,w
  1908  01BE  022A               	subwf	___lwdiv@dividend,w
  1909  01BF                     u1135:
  1910  01BF  1C03               	skipc
  1911  01C0  29C2               	goto	u1131
  1912  01C1  29C3               	goto	u1130
  1913  01C2                     u1131:
  1914  01C2  29CA               	goto	l1492
  1915  01C3                     u1130:
  1916  01C3                     l1488:
  1917  01C3  0828               	movf	___lwdiv@divisor,w
  1918  01C4  02AA               	subwf	___lwdiv@dividend,f
  1919  01C5  0829               	movf	___lwdiv@divisor+1,w
  1920  01C6  1C03               	skipc
  1921  01C7  03AB               	decf	___lwdiv@dividend+1,f
  1922  01C8  02AB               	subwf	___lwdiv@dividend+1,f
  1923  01C9                     l1490:
  1924  01C9  142D               	bsf	___lwdiv@quotient,0
  1925  01CA                     l1492:
  1926  01CA  3001               	movlw	1
  1927  01CB                     u1145:
  1928  01CB  1003               	clrc
  1929  01CC  0CA9               	rrf	___lwdiv@divisor+1,f
  1930  01CD  0CA8               	rrf	___lwdiv@divisor,f
  1931  01CE  3EFF               	addlw	-1
  1932  01CF  1D03               	skipz
  1933  01D0  29CB               	goto	u1145
  1934  01D1                     l1494:
  1935  01D1  3001               	movlw	1
  1936  01D2  02AC               	subwf	___lwdiv@counter,f
  1937  01D3  1D03               	btfss	3,2
  1938  01D4  29D6               	goto	u1151
  1939  01D5  29D7               	goto	u1150
  1940  01D6                     u1151:
  1941  01D6  29B2               	goto	l1486
  1942  01D7                     u1150:
  1943  01D7                     l1496:
  1944  01D7  082E               	movf	___lwdiv@quotient+1,w
  1945  01D8  00A9               	movwf	?___lwdiv+1
  1946  01D9  082D               	movf	___lwdiv@quotient,w
  1947  01DA  00A8               	movwf	?___lwdiv
  1948  01DB                     l568:
  1949  01DB  0008               	return
  1950  01DC                     __end_of___lwdiv:
  1951                           
  1952                           	psect	text11
  1953  0134                     __ptext11:	
  1954 ;; *************** function _blink *****************
  1955 ;; Defined at:
  1956 ;;		line 383 in file "main.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  n               1    wreg     unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  n               1   11[BANK0 ] unsigned char 
  1961 ;;  i               2   13[BANK0 ] unsigned int 
  1962 ;;  delay           1   12[BANK0 ] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1
  1972 ;;      Params:         0       0       0
  1973 ;;      Locals:         0       4       0
  1974 ;;      Temps:          0       3       0
  1975 ;;      Totals:         0       7       0
  1976 ;;Total ram usage:        7 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		___awdiv
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _blink
  1988  0134                     _blink:
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _blink: [wreg+status,2+status,0+pclath+cstack]
  1992                           ;blink@n stored from wreg
  1993  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0136  00AB               	movwf	blink@n
  1996  0137                     l1520:
  1997  0137                     l1522:
  1998                           
  1999                           ;main.c: 388:     unsigned char delay = (unsigned char)(3000 / n);
  2000  0137  082B               	movf	blink@n,w
  2001  0138  00A8               	movwf	??_blink
  2002  0139  01A9               	clrf	??_blink+1
  2003  013A  0828               	movf	??_blink,w
  2004  013B  00A0               	movwf	___awdiv@divisor
  2005  013C  0829               	movf	??_blink+1,w
  2006  013D  00A1               	movwf	___awdiv@divisor+1
  2007  013E  30B8               	movlw	184
  2008  013F  00A2               	movwf	___awdiv@dividend
  2009  0140  300B               	movlw	11
  2010  0141  00A3               	movwf	___awdiv@dividend+1
  2011  0142  20CB               	fcall	___awdiv
  2012  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0145  0820               	movf	?___awdiv,w
  2015  0146  00AA               	movwf	??_blink+2
  2016  0147  082A               	movf	??_blink+2,w
  2017  0148  00AC               	movwf	blink@delay
  2018                           
  2019                           ;main.c: 392:     while (n --) {
  2020  0149  298E               	goto	l1532
  2021  014A                     l143:
  2022                           
  2023                           ;main.c: 394:         RC0 = 0x1;
  2024  014A  1407               	bsf	7,0	;volatile
  2025  014B                     l1524:
  2026                           
  2027                           ;main.c: 396:         for (i = 0; i < delay; i++) {
  2028  014B  01AD               	clrf	blink@i
  2029  014C  01AE               	clrf	blink@i+1
  2030  014D  295F               	goto	l144
  2031  014E                     l1526:
  2032                           
  2033                           ;main.c: 397:             _delay((unsigned long)((1)*(4000000/4000.0)));
  2034  014E  30C7               	movlw	199
  2035  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0151  00A8               	movwf	??_blink
  2038  0152                     u1407:
  2039  0152  2953               	nop2
  2040  0153  0BA8               	decfsz	??_blink,f
  2041  0154  2952               	goto	u1407
  2042  0155  2956               	nop2
  2043  0156  0000               	nop
  2044                           
  2045                           ;main.c: 399:         }
  2046  0157  3001               	movlw	1
  2047  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2049  015A  07AD               	addwf	blink@i,f
  2050  015B  1803               	skipnc
  2051  015C  0AAE               	incf	blink@i+1,f
  2052  015D  3000               	movlw	0
  2053  015E  07AE               	addwf	blink@i+1,f
  2054  015F                     l144:
  2055  015F  082C               	movf	blink@delay,w
  2056  0160  00A8               	movwf	??_blink
  2057  0161  01A9               	clrf	??_blink+1
  2058  0162  0829               	movf	??_blink+1,w
  2059  0163  022E               	subwf	blink@i+1,w
  2060  0164  1D03               	skipz
  2061  0165  2968               	goto	u1215
  2062  0166  0828               	movf	??_blink,w
  2063  0167  022D               	subwf	blink@i,w
  2064  0168                     u1215:
  2065  0168  1C03               	skipc
  2066  0169  296B               	goto	u1211
  2067  016A  296C               	goto	u1210
  2068  016B                     u1211:
  2069  016B  294E               	goto	l1526
  2070  016C                     u1210:
  2071  016C                     l146:
  2072                           
  2073                           ;main.c: 401:         RC0 = 0x0;
  2074  016C  1007               	bcf	7,0	;volatile
  2075  016D                     l1528:
  2076                           
  2077                           ;main.c: 403:         for (i = 0; i < delay; i++) {
  2078  016D  01AD               	clrf	blink@i
  2079  016E  01AE               	clrf	blink@i+1
  2080  016F  2981               	goto	l147
  2081  0170                     l1530:
  2082                           
  2083                           ;main.c: 404:             _delay((unsigned long)((1)*(4000000/4000.0)));
  2084  0170  30C7               	movlw	199
  2085  0171  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0172  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0173  00A8               	movwf	??_blink
  2088  0174                     u1417:
  2089  0174  2975               	nop2
  2090  0175  0BA8               	decfsz	??_blink,f
  2091  0176  2974               	goto	u1417
  2092  0177  2978               	nop2
  2093  0178  0000               	nop
  2094                           
  2095                           ;main.c: 405:         }
  2096  0179  3001               	movlw	1
  2097  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2098  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2099  017C  07AD               	addwf	blink@i,f
  2100  017D  1803               	skipnc
  2101  017E  0AAE               	incf	blink@i+1,f
  2102  017F  3000               	movlw	0
  2103  0180  07AE               	addwf	blink@i+1,f
  2104  0181                     l147:
  2105  0181  082C               	movf	blink@delay,w
  2106  0182  00A8               	movwf	??_blink
  2107  0183  01A9               	clrf	??_blink+1
  2108  0184  0829               	movf	??_blink+1,w
  2109  0185  022E               	subwf	blink@i+1,w
  2110  0186  1D03               	skipz
  2111  0187  298A               	goto	u1225
  2112  0188  0828               	movf	??_blink,w
  2113  0189  022D               	subwf	blink@i,w
  2114  018A                     u1225:
  2115  018A  1C03               	skipc
  2116  018B  298D               	goto	u1221
  2117  018C  298E               	goto	u1220
  2118  018D                     u1221:
  2119  018D  2970               	goto	l1530
  2120  018E                     u1220:
  2121  018E                     l1532:
  2122                           
  2123                           ;main.c: 392:     while (n --) {
  2124  018E  3001               	movlw	1
  2125  018F  02AB               	subwf	blink@n,f
  2126  0190  0A2B               	incf	blink@n,w
  2127  0191  1D03               	btfss	3,2
  2128  0192  2994               	goto	u1231
  2129  0193  2995               	goto	u1230
  2130  0194                     u1231:
  2131  0194  294A               	goto	l143
  2132  0195                     u1230:
  2133  0195                     l151:
  2134  0195  0008               	return
  2135  0196                     __end_of_blink:
  2136                           
  2137                           	psect	text12
  2138  00CB                     __ptext12:	
  2139 ;; *************** function ___awdiv *****************
  2140 ;; Defined at:
  2141 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  divisor         2    0[BANK0 ] int 
  2144 ;;  dividend        2    2[BANK0 ] int 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  quotient        2    6[BANK0 ] int 
  2147 ;;  sign            1    5[BANK0 ] unsigned char 
  2148 ;;  counter         1    4[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  2    0[BANK0 ] int 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1
  2158 ;;      Params:         0       4       0
  2159 ;;      Locals:         0       4       0
  2160 ;;      Temps:          1       0       0
  2161 ;;      Totals:         1       8       0
  2162 ;;Total ram usage:        9 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_set_pwm_cycle
  2169 ;;		_calc_cycle
  2170 ;;		_blink
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function ___awdiv
  2176  00CB                     ___awdiv:
  2177  00CB                     l1424:	
  2178                           ;incstack = 0
  2179                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2180                           
  2181  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2182  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2183  00CD  01A5               	clrf	___awdiv@sign
  2184  00CE                     l1426:
  2185  00CE  1FA1               	btfss	___awdiv@divisor+1,7
  2186  00CF  28D1               	goto	u991
  2187  00D0  28D2               	goto	u990
  2188  00D1                     u991:
  2189  00D1  28D9               	goto	l1432
  2190  00D2                     u990:
  2191  00D2                     l1428:
  2192  00D2  09A0               	comf	___awdiv@divisor,f
  2193  00D3  09A1               	comf	___awdiv@divisor+1,f
  2194  00D4  0AA0               	incf	___awdiv@divisor,f
  2195  00D5  1903               	skipnz
  2196  00D6  0AA1               	incf	___awdiv@divisor+1,f
  2197  00D7                     l1430:
  2198  00D7  01A5               	clrf	___awdiv@sign
  2199  00D8  0AA5               	incf	___awdiv@sign,f
  2200  00D9                     l1432:
  2201  00D9  1FA3               	btfss	___awdiv@dividend+1,7
  2202  00DA  28DC               	goto	u1001
  2203  00DB  28DD               	goto	u1000
  2204  00DC                     u1001:
  2205  00DC  28E6               	goto	l1438
  2206  00DD                     u1000:
  2207  00DD                     l1434:
  2208  00DD  09A2               	comf	___awdiv@dividend,f
  2209  00DE  09A3               	comf	___awdiv@dividend+1,f
  2210  00DF  0AA2               	incf	___awdiv@dividend,f
  2211  00E0  1903               	skipnz
  2212  00E1  0AA3               	incf	___awdiv@dividend+1,f
  2213  00E2                     l1436:
  2214  00E2  3001               	movlw	1
  2215  00E3  00F8               	movwf	??___awdiv
  2216  00E4  0878               	movf	??___awdiv,w
  2217  00E5  06A5               	xorwf	___awdiv@sign,f
  2218  00E6                     l1438:
  2219  00E6  01A6               	clrf	___awdiv@quotient
  2220  00E7  01A7               	clrf	___awdiv@quotient+1
  2221  00E8                     l1440:
  2222  00E8  0820               	movf	___awdiv@divisor,w
  2223  00E9  0421               	iorwf	___awdiv@divisor+1,w
  2224  00EA  1903               	btfsc	3,2
  2225  00EB  28ED               	goto	u1011
  2226  00EC  28EE               	goto	u1010
  2227  00ED                     u1011:
  2228  00ED  2925               	goto	l1460
  2229  00EE                     u1010:
  2230  00EE                     l1442:
  2231  00EE  01A4               	clrf	___awdiv@counter
  2232  00EF  0AA4               	incf	___awdiv@counter,f
  2233  00F0  28FC               	goto	l1448
  2234  00F1                     l1444:
  2235  00F1  3001               	movlw	1
  2236  00F2                     u1025:
  2237  00F2  1003               	clrc
  2238  00F3  0DA0               	rlf	___awdiv@divisor,f
  2239  00F4  0DA1               	rlf	___awdiv@divisor+1,f
  2240  00F5  3EFF               	addlw	-1
  2241  00F6  1D03               	skipz
  2242  00F7  28F2               	goto	u1025
  2243  00F8                     l1446:
  2244  00F8  3001               	movlw	1
  2245  00F9  00F8               	movwf	??___awdiv
  2246  00FA  0878               	movf	??___awdiv,w
  2247  00FB  07A4               	addwf	___awdiv@counter,f
  2248  00FC                     l1448:
  2249  00FC  1FA1               	btfss	___awdiv@divisor+1,7
  2250  00FD  28FF               	goto	u1031
  2251  00FE  2900               	goto	u1030
  2252  00FF                     u1031:
  2253  00FF  28F1               	goto	l1444
  2254  0100                     u1030:
  2255  0100                     l1450:
  2256  0100  3001               	movlw	1
  2257  0101                     u1045:
  2258  0101  1003               	clrc
  2259  0102  0DA6               	rlf	___awdiv@quotient,f
  2260  0103  0DA7               	rlf	___awdiv@quotient+1,f
  2261  0104  3EFF               	addlw	-1
  2262  0105  1D03               	skipz
  2263  0106  2901               	goto	u1045
  2264  0107  0821               	movf	___awdiv@divisor+1,w
  2265  0108  0223               	subwf	___awdiv@dividend+1,w
  2266  0109  1D03               	skipz
  2267  010A  290D               	goto	u1055
  2268  010B  0820               	movf	___awdiv@divisor,w
  2269  010C  0222               	subwf	___awdiv@dividend,w
  2270  010D                     u1055:
  2271  010D  1C03               	skipc
  2272  010E  2910               	goto	u1051
  2273  010F  2911               	goto	u1050
  2274  0110                     u1051:
  2275  0110  2918               	goto	l1456
  2276  0111                     u1050:
  2277  0111                     l1452:
  2278  0111  0820               	movf	___awdiv@divisor,w
  2279  0112  02A2               	subwf	___awdiv@dividend,f
  2280  0113  0821               	movf	___awdiv@divisor+1,w
  2281  0114  1C03               	skipc
  2282  0115  03A3               	decf	___awdiv@dividend+1,f
  2283  0116  02A3               	subwf	___awdiv@dividend+1,f
  2284  0117                     l1454:
  2285  0117  1426               	bsf	___awdiv@quotient,0
  2286  0118                     l1456:
  2287  0118  3001               	movlw	1
  2288  0119                     u1065:
  2289  0119  1003               	clrc
  2290  011A  0CA1               	rrf	___awdiv@divisor+1,f
  2291  011B  0CA0               	rrf	___awdiv@divisor,f
  2292  011C  3EFF               	addlw	-1
  2293  011D  1D03               	skipz
  2294  011E  2919               	goto	u1065
  2295  011F                     l1458:
  2296  011F  3001               	movlw	1
  2297  0120  02A4               	subwf	___awdiv@counter,f
  2298  0121  1D03               	btfss	3,2
  2299  0122  2924               	goto	u1071
  2300  0123  2925               	goto	u1070
  2301  0124                     u1071:
  2302  0124  2900               	goto	l1450
  2303  0125                     u1070:
  2304  0125                     l1460:
  2305  0125  0825               	movf	___awdiv@sign,w
  2306  0126  1903               	btfsc	3,2
  2307  0127  2929               	goto	u1081
  2308  0128  292A               	goto	u1080
  2309  0129                     u1081:
  2310  0129  292F               	goto	l1464
  2311  012A                     u1080:
  2312  012A                     l1462:
  2313  012A  09A6               	comf	___awdiv@quotient,f
  2314  012B  09A7               	comf	___awdiv@quotient+1,f
  2315  012C  0AA6               	incf	___awdiv@quotient,f
  2316  012D  1903               	skipnz
  2317  012E  0AA7               	incf	___awdiv@quotient+1,f
  2318  012F                     l1464:
  2319  012F  0827               	movf	___awdiv@quotient+1,w
  2320  0130  00A1               	movwf	?___awdiv+1
  2321  0131  0826               	movf	___awdiv@quotient,w
  2322  0132  00A0               	movwf	?___awdiv
  2323  0133                     l449:
  2324  0133  0008               	return
  2325  0134                     __end_of___awdiv:
  2326                           
  2327                           	psect	text13
  2328  01DC                     __ptext13:	
  2329 ;; *************** function _pwm_routine *****************
  2330 ;; Defined at:
  2331 ;;		line 202 in file "main.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1
  2345 ;;      Params:         0       0       0
  2346 ;;      Locals:         0       0       0
  2347 ;;      Temps:          2       0       0
  2348 ;;      Totals:         2       0       0
  2349 ;;Total ram usage:        2 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		Interrupt level 1
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function _pwm_routine
  2360  01DC                     _pwm_routine:
  2361  01DC                     i1l1350:
  2362                           
  2363                           ;main.c: 206:     if (T0IF) {
  2364  01DC  1D0B               	btfss	11,2	;volatile
  2365  01DD  29DF               	goto	u84_21
  2366  01DE  29E0               	goto	u84_20
  2367  01DF                     u84_21:
  2368  01DF  2A13               	goto	i1l125
  2369  01E0                     u84_20:
  2370  01E0                     i1l1352:
  2371                           
  2372                           ;main.c: 208:         if (PWM_ENABLED) {
  2373  01E0  1C7B               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
  2374  01E1  29E3               	goto	u85_21
  2375  01E2  29E4               	goto	u85_20
  2376  01E3                     u85_21:
  2377  01E3  2A0F               	goto	i1l120
  2378  01E4                     u85_20:
  2379  01E4                     i1l1354:
  2380                           
  2381                           ;main.c: 210:             if (RB4 == 0x0 && PWM_TICKS >= PWM_OFF) {
  2382  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2383  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2384  01E6  1A06               	btfsc	6,4	;volatile
  2385  01E7  29E9               	goto	u86_21
  2386  01E8  29EA               	goto	u86_20
  2387  01E9                     u86_21:
  2388  01E9  29F8               	goto	i1l121
  2389  01EA                     u86_20:
  2390  01EA                     i1l1356:
  2391  01EA  083B               	movf	_PWM_OFF+1,w
  2392  01EB  023F               	subwf	_PWM_TICKS+1,w	;volatile
  2393  01EC  1D03               	skipz
  2394  01ED  29F0               	goto	u87_25
  2395  01EE  083A               	movf	_PWM_OFF,w
  2396  01EF  023E               	subwf	_PWM_TICKS,w	;volatile
  2397  01F0                     u87_25:
  2398  01F0  1C03               	skipc
  2399  01F1  29F3               	goto	u87_21
  2400  01F2  29F4               	goto	u87_20
  2401  01F3                     u87_21:
  2402  01F3  29F8               	goto	i1l121
  2403  01F4                     u87_20:
  2404  01F4                     i1l1358:
  2405                           
  2406                           ;main.c: 211:                 RB4 = 0x1;
  2407  01F4  1606               	bsf	6,4	;volatile
  2408  01F5                     i1l1360:
  2409                           
  2410                           ;main.c: 212:                 PWM_TICKS = 0x0;
  2411  01F5  01BE               	clrf	_PWM_TICKS	;volatile
  2412  01F6  01BF               	clrf	_PWM_TICKS+1	;volatile
  2413                           
  2414                           ;main.c: 213:             }
  2415  01F7  2A08               	goto	i1l1368
  2416  01F8                     i1l121:	
  2417                           ;main.c: 214:             else if (RB4 == 0x1 && PWM_TICKS >= PWM_ON) {
  2418                           
  2419  01F8  1E06               	btfss	6,4	;volatile
  2420  01F9  29FB               	goto	u88_21
  2421  01FA  29FC               	goto	u88_20
  2422  01FB                     u88_21:
  2423  01FB  2A08               	goto	i1l1368
  2424  01FC                     u88_20:
  2425  01FC                     i1l1362:
  2426  01FC  083D               	movf	_PWM_ON+1,w
  2427  01FD  023F               	subwf	_PWM_TICKS+1,w	;volatile
  2428  01FE  1D03               	skipz
  2429  01FF  2A02               	goto	u89_25
  2430  0200  083C               	movf	_PWM_ON,w
  2431  0201  023E               	subwf	_PWM_TICKS,w	;volatile
  2432  0202                     u89_25:
  2433  0202  1C03               	skipc
  2434  0203  2A05               	goto	u89_21
  2435  0204  2A06               	goto	u89_20
  2436  0205                     u89_21:
  2437  0205  2A08               	goto	i1l1368
  2438  0206                     u89_20:
  2439  0206                     i1l1364:
  2440                           
  2441                           ;main.c: 215:                 RB4 = 0x0;
  2442  0206  1206               	bcf	6,4	;volatile
  2443  0207  29F5               	goto	i1l1360
  2444  0208                     i1l1368:
  2445                           
  2446                           ;main.c: 219:             PWM_TICKS ++;
  2447  0208  3001               	movlw	1
  2448  0209  07BE               	addwf	_PWM_TICKS,f	;volatile
  2449  020A  1803               	skipnc
  2450  020B  0ABF               	incf	_PWM_TICKS+1,f	;volatile
  2451  020C  3000               	movlw	0
  2452  020D  07BF               	addwf	_PWM_TICKS+1,f	;volatile
  2453                           
  2454                           ;main.c: 220:         }
  2455  020E  2A12               	goto	i1l124
  2456  020F                     i1l120:	
  2457                           ;main.c: 221:         else {
  2458                           
  2459                           
  2460                           ;main.c: 222:             RB4 = 0x0;
  2461  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0211  1206               	bcf	6,4	;volatile
  2464  0212                     i1l124:	
  2465                           ;main.c: 223:         }
  2466                           
  2467                           
  2468                           ;main.c: 225:         T0IF = 0x0;
  2469  0212  110B               	bcf	11,2	;volatile
  2470  0213                     i1l125:
  2471  0213  0871               	movf	??_pwm_routine+1,w
  2472  0214  008A               	movwf	10
  2473  0215  0E70               	swapf	??_pwm_routine,w
  2474  0216  0083               	movwf	3
  2475  0217  0EFE               	swapf	btemp,f
  2476  0218  0E7E               	swapf	btemp,w
  2477  0219  0009               	retfie
  2478  021A                     __end_of_pwm_routine:
  2479  007E                     btemp	set	126	;btemp
  2480  007E                     wtemp0	set	126
  2481                           
  2482                           	psect	intentry
  2483  0004                     __pintentry:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _pwm_routine: [wreg+status,2]
  2486                           
  2487  0004                     interrupt_function:
  2488  007E                     saved_w	set	btemp
  2489  0004  00FE               	movwf	btemp
  2490  0005  0E03               	swapf	3,w
  2491  0006  00F0               	movwf	??_pwm_routine
  2492  0007  080A               	movf	10,w
  2493  0008  00F1               	movwf	??_pwm_routine+1
  2494  0009  29DC               	ljmp	_pwm_routine
  2495                           
  2496                           	psect	config
  2497                           
  2498                           ;Config register CONFIG @ 0x2007
  2499                           ;	Oscillator Selection bits
  2500                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
  2501                           ;	Watchdog Timer Enable bit
  2502                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2503                           ;	Power-up Timer Enable bit
  2504                           ;	PWRTE = OFF, PWRT disabled
  2505                           ;	MCLR Pin Function Select bit
  2506                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  2507                           ;	Code Protection bit
  2508                           ;	CP = OFF, Program memory code protection is disabled
  2509                           ;	Data Code Protection bit
  2510                           ;	CPD = OFF, Data memory code protection is disabled
  2511                           ;	Brown-out Reset Selection bits
  2512                           ;	BOREN = OFF, BOR disabled
  2513                           ;	Internal External Switchover bit
  2514                           ;	IESO = OFF, Internal External Switchover mode is disabled
  2515                           ;	Fail-Safe Clock Monitor Enabled bit
  2516                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2517  2007                     	org	8199
  2518  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     26      36
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set_pwm_cycle
    _set_pwm_enabled->_set_pwm_cycle
    _set_pwm_cycle->___awdiv
    _calc_cycle->___lwdiv
    ___lwdiv->___awdiv
    _blink->___awdiv
    ___awdiv->___wmul

Critical Paths under _pwm_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calc_cycle
    _set_pwm_enabled->_set_pwm_cycle
    _set_pwm_cycle->___awdiv
    _calc_cycle->___lwdiv
    ___lwdiv->___awdiv
    _blink->___awdiv

Critical Paths under _pwm_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pwm_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6738
                                             22 BANK0      4     4      0
                              _blink
                         _calc_cycle
                          _probe_bat
                         _probe_temp
                          _read_data
                      _set_pwm_cycle
                    _set_pwm_enabled
                              _setup
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _write_data                                           3     2      1     120
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_pwm_enabled                                      1     1      0    1626
                                              9 BANK0      1     1      0
                      _set_pwm_cycle
 ---------------------------------------------------------------------------------
 (2) _set_pwm_cycle                                        3     3      0    1564
                                              9 COMMON     2     2      0
                                              8 BANK0      1     1      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _read_data                                            3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _probe_temp                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _probe_bat                                            2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _calc_cycle                                           7     7      0    2087
                                             15 BANK0      7     7      0
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              9 COMMON     1     1      0
                                              8 BANK0      7     3      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _blink                                                7     7      0    1189
                                              8 BANK0      7     7      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _pwm_routine                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
     ___awdiv
       ___wmul (ARG)
   _calc_cycle
     ___awdiv
       ___wmul (ARG)
     ___lwdiv
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
   _probe_bat
   _probe_temp
   _read_data
   _set_pwm_cycle
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _set_pwm_enabled
     _set_pwm_cycle
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _setup
   _write_data

 _pwm_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     1A      24       4       45.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      30       7        0.0%
DATA                 0      0      30       8        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 13 07:44:58 2021

                      _GO 00F9                        _RD 0C60                        _WR 0C61  
            ___awdiv@sign 0025       ___wmul@multiplicand 0074               _pwm_routine 01DC  
                     l131 02B0                       l151 0195                       l143 014A  
                     l135 02D6                       l144 015F                       l128 0281  
                     l146 016C                       l147 0181                       l139 0251  
                     l163 0322                       l157 02FC                       l175 0384  
                     l168 0362                       l169 0366                       l296 032F  
                     l449 0133                       l298 0347                       l568 01DB  
                     _GIE 005F                       _RC0 0038                       _RB4 0034  
                     _RB5 0035                       u510 0329                       _PS0 0408  
                     u511 0328                       _PS1 0409                       _PS2 040A  
                     _HTS 047A                       u540 0343                       u541 0342  
                     u525 0330                       u535 0337                       u800 02F4  
                     u801 02F3                       u810 031A                       u811 0319  
                     u820 0362                       u821 0361                       _SCS 0478  
                     u830 0373                       u831 0372                       _LTS 0479  
                     u990 00D2                       u991 00D1                      l1120 0325  
                    l1122 0329                      l1210 025B                      l1124 0336  
                    l1300 02F4                      l1220 0263                      l1212 025D  
                    l1126 033D                      l1118 0323                      l1310 0314  
                    l1302 02FD                      l1230 026A                      l1222 0264  
                    l1214 0260                      l1128 0343                      l1312 031A  
                    l1304 0304                      l1320 0354                      l1240 0271  
                    l1232 026B                      l1224 0265                      l1216 0261  
                    l1208 0252                      l1306 030C                      l1322 035C  
                    l1314 0349                      l1250 027C                      l1242 0272  
                    l1234 026C                      l1226 0266                      l1218 0262  
                    l1330 0369                      l1308 0310                      l1324 0363  
                    l1316 034A                      l1500 02B4                      l1252 027F  
                    l1244 0275                      l1236 026D                      l1228 0269  
                    l1340 0381                      l1332 036D                      l1430 00D7  
                    l1318 0352                      l1510 02CA                      l1502 02B8  
                    l1254 0280                      l1246 0276                      l1238 0270  
                    l1342 0382                      l1334 0373                      l1440 00E8  
                    l1432 00D9                      l1424 00CB                      l1520 0137  
                    l1512 021D                      l1504 02BC                      l1248 027B  
                    l1344 0383                      l1336 0379                      l1328 0368  
                    l1450 0100                      l1442 00EE                      l1434 00DD  
                    l1426 00CE                      l1530 0170                      l1522 0137  
                    l1290 02D7                      l1506 02C2                      l1346 0384  
                    l1338 037A                      l1452 0111                      l1444 00F1  
                    l1460 0125                      l1436 00E2                      l1428 00D2  
                    l1524 014B                      l1532 018E                      l1516 021D  
                    l1292 02DE                      l1508 02C8                      l1540 0031  
                    l1462 012A                      l1454 0117                      l1446 00F8  
                    l1438 00E6                      l1526 014E                      l1294 02E6  
                    l1470 0287                      l1550 0043                      l1542 0033  
                    l1534 001A                      l1464 012F                      l1456 0118  
                    l1448 00FC                      l1528 016D                      l1480 01A3  
                    l1296 02EA                      l1472 02A4                      l1552 0050  
                    l1560 0067                      l1544 0035                      l1536 0021  
                    _C1ON 08CF                      l1458 011F                      l1490 01C9  
                    l1482 01AA                      l1474 0196                      l1298 02EE  
                    l1570 007F                      l1562 006B                      l1554 0053  
                    l1546 0036                      l1538 0030                      l1492 01CA  
                    l1484 01AE                      l1476 019A                      l1468 0285  
                    l1580 00AC                      l1572 0083                      l1564 006E  
                    l1556 0062                      l1548 0040                      _C2ON 08D7  
                    l1494 01D1                      l1486 01B2                      l1478 01A0  
                    l1582 00B4                      l1574 0092                      l1566 006F  
                    l1558 0065                      l1488 01C3                      l1496 01D7  
                    l1584 00BE                      l1576 0096                      l1568 0072  
                    l1578 00A5                      l1586 00C7                      _ADIE 0466  
                    _ADFM 00FF                      _ADON 00F8                      _CHS0 00FA  
                    _CHS1 00FB                      _CHS2 00FC                      _CHS3 00FD  
                    _T0IE 005D                      u1000 00DD                      _T0IF 005A  
                    u1001 00DC                      _T0CS 040D                      u1010 00EE  
                    u1011 00ED                      u1030 0100                      u1110 01B2  
                    u1031 00FF                      u1111 01B1                      u1025 00F2  
                    u1105 01A4                      u1050 0111                      u1210 016C  
                    u1130 01C3                      u1051 0110                      u1211 016B  
                    u1131 01C2                      u1220 018E                      u1204 02D6  
                    u1300 00A5                      u1045 0101                      u1221 018D  
                    u1125 01B3                      u1301 00A4                      u1070 0125  
                    u1230 0195                      u1150 01D7                      u1310 00AC  
                    u1071 0124                      u1055 010D                      u1231 0194  
                    u1215 0168                      u1151 01D6                      u1135 01BF  
                    u1311 00AB                      u1080 012A                      u1320 00C7  
                    u1240 0040                      u1081 0129                      u1065 0119  
                    u1225 018A                      u1145 01CB                      u1321 00C6  
                    u1305 00A1                      u1241 003F                      u1090 01A0  
                    u1170 02C2                      u1250 0050                      u1091 019F  
                    u1171 02C1                      u1251 004F                      u1180 02C8  
                    u1260 0062                      u1181 02C7                      u1165 02B8  
                    u1261 0061                      u1190 02D3                      u1270 006B  
                    u1407 0152                      u1191 02CF                      u1271 006A  
                    u1255 004C                      u1280 007F                      u1417 0174  
                    u1281 007E                      u1265 005E                      u1337 0029  
                    u1290 0092                      u1347 036B                      u1291 0091  
                    u1357 0358                      u1285 007B                      u1367 02E2  
                    u1295 008E                      u1377 02EC                      u1387 0308  
                    u1397 0312                      _PEIE 005E                      _INTE 005C  
                    _VCFG 00FE                      _OSTS 047B                      _WREN 0C62  
                    _main 001A                      btemp 007E                      start 000A  
                   _ADCS0 04FC                     _ADCS1 04FD                     _ADCS2 04FE  
                   ?_main 0070           __end_of___awdiv 0134                     _EEADR 010D  
                   _EEDAT 010C                     _ANSEL 011E           ___awdiv@divisor 0020  
                   _IRCF0 047C                     _IRCF1 047D                     _IRCF2 047E  
         __end_of___lwdiv 01DC                     _RABIE 005B                     i1l120 020F  
                   i1l121 01F8                     i1l124 0212                     i1l125 0213  
         ___awdiv@counter 0024                     u84_20 01E0                     u84_21 01DF  
                   u85_20 01E4                     u85_21 01E3                     u86_20 01EA  
                   u86_21 01E9                     u87_20 01F4                     u87_21 01F3  
                   _WRERR 0C63                     u87_25 01F0                     u88_20 01FC  
                   u88_21 01FB                     u89_20 0206                     u89_21 0205  
                   u89_25 0202                     _blink 0134                     _setup 0252  
          __pbitbssCOMMON 03D8                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 000B           write_data@value 0072  
         _set_pwm_enabled 02B1              __end_of_main 00CB                    ??_main 0036  
                  ?_blink 0070                    _ADRESH 001E                    _ADRESL 009E  
                  _EECON1 018C                    _EECON2 018D          ___awdiv@dividend 0022  
                  ?_setup 0070                    _ANSELH 011F                    i1l1350 01DC  
                  i1l1360 01F5                    i1l1352 01E0                    i1l1362 01FC  
                  i1l1354 01E4                    i1l1364 0206                    i1l1356 01EA  
                  i1l1358 01F4                    i1l1368 0208                    _TRISC0 0438  
                  _TRISA5 042D                    _TRISB4 0434                    _PWM_ON 003C  
                  ___wmul 0323                 ??___awdiv 0078                 ??___lwdiv 0079  
        ___awdiv@quotient 0026                    blink@i 002D                    blink@n 002B  
        read_data@address 0074                    saved_w 007E   __end_of__initialization 0018  
 __end_of_set_pwm_enabled 02D7            __pcstackCOMMON 0070             __end_of_blink 0196  
           __end_of_setup 0282              ?_pwm_routine 0070                _calc_cycle 021A  
                 ??_blink 0028                   ??_setup 0072                __pbssBANK0 003A  
   __end_of_set_pwm_cycle 02B1        __size_of_read_data 001F                __pmaintext 001A  
                 ?___wmul 0072                __pintentry 0004                   _ADC_REF 0040  
      __size_of_probe_bat 0026                   _PWM_OFF 003A          ?_set_pwm_enabled 0070  
                 ___awdiv 00CB           __size_of___wmul 0025                   ___lwdiv 0196  
  set_pwm_enabled@enabled 0029                   __ptext1 0367                   __ptext2 0252  
                 __ptext3 02B1                   __ptext4 0282                   __ptext5 0348  
                 __ptext6 02D7                   __ptext7 02FD                   __ptext8 021A  
                 __ptext9 0323         __end_of_read_data 0367               ?_calc_cycle 0070  
    end_of_initialization 0018                blink@delay 002C         __end_of_probe_bat 0323  
              _probe_temp 02D7      __size_of_pwm_routine 003E                 _PWM_TICKS 003E  
       write_data@address 0074       __size_of_calc_cycle 0038            __end_of___wmul 0348  
              _write_data 0367       start_initialization 000B                  ??___wmul 0076  
             ?_probe_temp 0070                 ___latbits 0000             __pcstackBANK0 0020  
        ___lwdiv@dividend 002A                  ?___awdiv 0020                  ?___lwdiv 0028  
             ?_write_data 0072    __size_of_set_pwm_cycle 002F                  _ADC_TEMP 0042  
            ??_calc_cycle 002F          ___lwdiv@quotient 002D            __size_of_blink 0062  
               _read_data 0348            __size_of_setup 0030            _calc_cycle$731 0032  
       interrupt_function 0004            ___wmul@product 0076       __size_of_probe_temp 0026  
      __end_of_calc_cycle 0252                 _probe_bat 02FD  __size_of_set_pwm_enabled 0026  
       ___wmul@multiplier 0072                 main@cycle 0039                ?_read_data 0070  
     __size_of_write_data 001E             _set_pwm_cycle 0282                ?_probe_bat 0070  
        __size_of___awdiv 0069          __size_of___lwdiv 0046             ??_pwm_routine 0070  
         ___lwdiv@divisor 0028           ___lwdiv@counter 002C                  __ptext10 0196  
                __ptext11 0134                  __ptext12 00CB                  __ptext13 01DC  
          ?_set_pwm_cycle 0070             __size_of_main 00B1              ??_probe_temp 0072  
       ??_set_pwm_enabled 007B       __end_of_pwm_routine 021A               ??_read_data 0072  
      set_pwm_cycle@cycle 0028                  intlevel1 0000        __end_of_probe_temp 02FD  
             ??_probe_bat 0072              ??_write_data 0073                _OPTION_REG 0081  
        calc_cycle@charge 0031           ??_set_pwm_cycle 0079               _PWM_ENABLED 03D8  
      __end_of_write_data 0385  
