

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 12:10:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F687 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008F                     	;# 
    84  0090                     	;# 
    85  0093                     	;# 
    86  0093                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0095                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011E                     	;# 
   110  011F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  019E                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011E                     	;# 
   171  011F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  019E                     	;# 
   175  001E                     _ADRESH	set	30
   176  00F9                     _GO	set	249
   177  00FA                     _CHS0	set	250
   178  00FB                     _CHS1	set	251
   179  00FC                     _CHS2	set	252
   180  00FD                     _CHS3	set	253
   181  0038                     _RC0	set	56
   182  00F8                     _ADON	set	248
   183  00FE                     _VCFG	set	254
   184  00FF                     _ADFM	set	255
   185  005B                     _RABIE	set	91
   186  005C                     _INTE	set	92
   187  005D                     _T0IE	set	93
   188  005E                     _PEIE	set	94
   189  005F                     _GIE	set	95
   190  0034                     _RB4	set	52
   191  005A                     _T0IF	set	90
   192  009E                     _ADRESL	set	158
   193  0081                     _OPTION_REG	set	129
   194  0438                     _TRISC0	set	1080
   195  0434                     _TRISB4	set	1076
   196  04FC                     _ADCS0	set	1276
   197  04FD                     _ADCS1	set	1277
   198  04FE                     _ADCS2	set	1278
   199  0408                     _PS0	set	1032
   200  0409                     _PS1	set	1033
   201  040A                     _PS2	set	1034
   202  040D                     _T0CS	set	1037
   203  0478                     _SCS	set	1144
   204  0479                     _LTS	set	1145
   205  047A                     _HTS	set	1146
   206  047B                     _OSTS	set	1147
   207  047E                     _IRCF2	set	1150
   208  047D                     _IRCF1	set	1149
   209  047C                     _IRCF0	set	1148
   210  011F                     _ANSELH	set	287
   211  011E                     _ANSEL	set	286
   212  08D7                     _C2ON	set	2263
   213  08CF                     _C1ON	set	2255
   214                           
   215                           	psect	cinit
   216  000B                     start_initialization:	
   217                           ; #config settings
   218                           
   219  000B                     __initialization:
   220                           
   221                           ; Clear objects allocated to BITCOMMON
   222  000B  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   223                           
   224                           ; Clear objects allocated to COMMON
   225  000C  01F0               	clrf	__pbssCOMMON& (0+127)
   226  000D  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   227  000E  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   228  000F  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   229  0010  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   230  0011  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   231                           
   232                           ; Clear objects allocated to BANK0
   233  0012  1283               	bcf	3,5	;RP0=0, select bank0
   234  0013  1303               	bcf	3,6	;RP1=0, select bank0
   235  0014  01A0               	clrf	__pbssBANK0& (0+127)
   236  0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   237  0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   238  0017  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   239  0018                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  0018                     __end_of__initialization:
   243  0018  0183               	clrf	3
   244  0019  28A6               	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bitbssCOMMON
   247  03D0                     __pbitbssCOMMON:
   248  03D0                     _PWM_ENABLED:
   249  03D0                     	ds	1
   250                           
   251                           	psect	bssCOMMON
   252  0070                     __pbssCOMMON:
   253  0070                     _PWM_OFF:
   254  0070                     	ds	2
   255  0072                     _PWM_ON:
   256  0072                     	ds	2
   257  0074                     _PWM_TICKS:
   258  0074                     	ds	2
   259                           
   260                           	psect	bssBANK0
   261  0020                     __pbssBANK0:
   262  0020                     _ADC_REF:
   263  0020                     	ds	2
   264  0022                     _ADC_TEMP:
   265  0022                     	ds	2
   266                           
   267                           	psect	cstackCOMMON
   268  0076                     __pcstackCOMMON:
   269  0076                     ?_probe_temp:
   270  0076                     ?_pwm_routine:	
   271                           ; 1 bit 
   272                           
   273  0076                     ??_pwm_routine:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0076                     ?_setup:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0076                     ?_charge:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0076                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287  0076                     	ds	2
   288  0078                     ??_setup:
   289  0078                     ??_probe_temp:	
   290                           ; 1 bytes @ 0x2
   291                           
   292  0078                     ??_charge:	
   293                           ; 1 bytes @ 0x2
   294                           
   295                           
   296                           ; 1 bytes @ 0x2
   297  0078                     	ds	2
   298                           
   299                           	psect	cstackBANK0
   300  0024                     __pcstackBANK0:
   301  0024                     ??_main:
   302                           
   303                           ; 1 bytes @ 0x0
   304  0024                     	ds	3
   305                           
   306                           	psect	maintext
   307  00A6                     __pmaintext:	
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 406 in file "main.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, pclath, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : B00/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1
   327 ;;      Params:         0       0       0
   328 ;;      Locals:         0       0       0
   329 ;;      Temps:          0       3       0
   330 ;;      Totals:         0       3       0
   331 ;;Total ram usage:        3 bytes
   332 ;; Hardware stack levels required when called:    2
   333 ;; This function calls:
   334 ;;		_charge
   335 ;;		_probe_temp
   336 ;;		_setup
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _main
   344  00A6                     _main:
   345  00A6                     l859:	
   346                           ;incstack = 0
   347                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   348                           
   349                           
   350                           ;main.c: 408:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   351  00A6  3006               	movlw	6
   352  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   353  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   354  00A9  00A6               	movwf	??_main+2
   355  00AA  3013               	movlw	19
   356  00AB  00A5               	movwf	??_main+1
   357  00AC  30AD               	movlw	173
   358  00AD  00A4               	movwf	??_main
   359  00AE                     u157:
   360  00AE  0BA4               	decfsz	??_main,f
   361  00AF  28AE               	goto	u157
   362  00B0  0BA5               	decfsz	??_main+1,f
   363  00B1  28AE               	goto	u157
   364  00B2  0BA6               	decfsz	??_main+2,f
   365  00B3  28AE               	goto	u157
   366  00B4  0000               	nop
   367  00B5                     l861:
   368                           
   369                           ;main.c: 410:     setup();
   370  00B5  2058               	fcall	_setup
   371  00B6                     l863:
   372                           
   373                           ;main.c: 416:     probe_temp();
   374  00B6  2086               	fcall	_probe_temp
   375  00B7                     l865:
   376                           
   377                           ;main.c: 417:         charge();
   378  00B7  20BA               	fcall	_charge
   379  00B8  28B6               	goto	l863
   380  00B9  280A               	ljmp	start
   381  00BA                     __end_of_main:
   382                           
   383                           	psect	text1
   384  0058                     __ptext1:	
   385 ;; *************** function _setup *****************
   386 ;; Defined at:
   387 ;;		line 222 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1
   401 ;;      Params:         0       0       0
   402 ;;      Locals:         0       0       0
   403 ;;      Temps:          0       0       0
   404 ;;      Totals:         0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _setup
   417  0058                     _setup:
   418  0058                     l729:	
   419                           ;incstack = 0
   420                           ; Regs used in _setup: [wreg+status,2]
   421                           
   422                           
   423                           ;main.c: 226:     IRCF0 = 0x1;
   424  0058  1683               	bsf	3,5	;RP0=1, select bank1
   425  0059  1303               	bcf	3,6	;RP1=0, select bank1
   426  005A  160F               	bsf	15,4	;volatile
   427                           
   428                           ;main.c: 227:     IRCF1 = 0x1;
   429  005B  168F               	bsf	15,5	;volatile
   430                           
   431                           ;main.c: 228:     IRCF2 = 0x1;
   432  005C  170F               	bsf	15,6	;volatile
   433                           
   434                           ;main.c: 229:     OSTS = 0x0;
   435  005D  118F               	bcf	15,3	;volatile
   436                           
   437                           ;main.c: 230:     HTS = 0x1;
   438  005E  150F               	bsf	15,2	;volatile
   439                           
   440                           ;main.c: 231:     LTS = 0x1;
   441  005F  148F               	bsf	15,1	;volatile
   442                           
   443                           ;main.c: 232:     SCS = 0x1;
   444  0060  140F               	bsf	15,0	;volatile
   445  0061                     l731:
   446                           
   447                           ;main.c: 236:     OPTION_REG = 0x80;
   448  0061  3080               	movlw	128
   449  0062  0081               	movwf	1	;volatile
   450  0063                     l733:
   451                           
   452                           ;main.c: 237:     C1ON = 0x0;
   453  0063  1283               	bcf	3,5	;RP0=0, select bank2
   454  0064  1703               	bsf	3,6	;RP1=1, select bank2
   455  0065  1399               	bcf	25,7	;volatile
   456  0066                     l735:
   457                           
   458                           ;main.c: 238:     C2ON = 0x0;
   459  0066  139A               	bcf	26,7	;volatile
   460  0067                     l737:
   461                           
   462                           ;main.c: 242:     GIE = 0x1;
   463  0067  178B               	bsf	11,7	;volatile
   464  0068                     l739:
   465                           
   466                           ;main.c: 243:     PEIE = 0x0;
   467  0068  130B               	bcf	11,6	;volatile
   468  0069                     l741:
   469                           
   470                           ;main.c: 244:     T0IE = 0x1;
   471  0069  168B               	bsf	11,5	;volatile
   472  006A                     l743:
   473                           
   474                           ;main.c: 245:     INTE = 0x0;
   475  006A  120B               	bcf	11,4	;volatile
   476  006B                     l745:
   477                           
   478                           ;main.c: 246:     RABIE = 0x0;
   479  006B  118B               	bcf	11,3	;volatile
   480  006C                     l747:
   481                           
   482                           ;main.c: 250:     T0CS = 0x0;
   483  006C  1683               	bsf	3,5	;RP0=1, select bank1
   484  006D  1303               	bcf	3,6	;RP1=0, select bank1
   485  006E  1281               	bcf	1,5	;volatile
   486  006F                     l749:
   487                           
   488                           ;main.c: 251:     PS2 = 0x0;
   489  006F  1101               	bcf	1,2	;volatile
   490  0070                     l751:
   491                           
   492                           ;main.c: 252:     PS1 = 0x1;
   493  0070  1481               	bsf	1,1	;volatile
   494  0071                     l753:
   495                           
   496                           ;main.c: 253:     PS0 = 0x0;
   497  0071  1001               	bcf	1,0	;volatile
   498  0072                     l755:
   499                           
   500                           ;main.c: 257:     ADFM = 0x0;
   501  0072  1283               	bcf	3,5	;RP0=0, select bank0
   502  0073  1303               	bcf	3,6	;RP1=0, select bank0
   503  0074  139F               	bcf	31,7	;volatile
   504  0075                     l757:
   505                           
   506                           ;main.c: 258:     VCFG = 0x0;
   507  0075  131F               	bcf	31,6	;volatile
   508  0076                     l759:
   509                           
   510                           ;main.c: 259:     ADON = 0x0;
   511  0076  101F               	bcf	31,0	;volatile
   512  0077                     l761:
   513                           
   514                           ;main.c: 260:     ADCS2 = 0x0;
   515  0077  1683               	bsf	3,5	;RP0=1, select bank1
   516  0078  1303               	bcf	3,6	;RP1=0, select bank1
   517  0079  131F               	bcf	31,6	;volatile
   518  007A                     l763:
   519                           
   520                           ;main.c: 261:     ADCS1 = 0x1;
   521  007A  169F               	bsf	31,5	;volatile
   522  007B                     l765:
   523                           
   524                           ;main.c: 262:     ADCS0 = 0x1;
   525  007B  161F               	bsf	31,4	;volatile
   526                           
   527                           ;main.c: 263:     ANSEL = 0xC;
   528  007C  300C               	movlw	12
   529  007D  1283               	bcf	3,5	;RP0=0, select bank2
   530  007E  1703               	bsf	3,6	;RP1=1, select bank2
   531  007F  009E               	movwf	30	;volatile
   532  0080                     l767:
   533                           
   534                           ;main.c: 264:     ANSELH = 0x0;
   535  0080  019F               	clrf	31	;volatile
   536  0081                     l769:
   537                           
   538                           ;main.c: 268:     TRISB4 = 0x0;
   539  0081  1683               	bsf	3,5	;RP0=1, select bank1
   540  0082  1303               	bcf	3,6	;RP1=0, select bank1
   541  0083  1206               	bcf	6,4	;volatile
   542  0084                     l771:
   543                           
   544                           ;main.c: 269:     TRISC0 = 0x0;
   545  0084  1007               	bcf	7,0	;volatile
   546  0085                     l106:
   547  0085  0008               	return
   548  0086                     __end_of_setup:
   549                           
   550                           	psect	text2
   551  0086                     __ptext2:	
   552 ;; *************** function _probe_temp *****************
   553 ;; Defined at:
   554 ;;		line 347 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;		None               void
   561 ;; Registers used:
   562 ;;		wreg
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1
   568 ;;      Params:         0       0       0
   569 ;;      Locals:         0       0       0
   570 ;;      Temps:          2       0       0
   571 ;;      Totals:         2       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _probe_temp
   584  0086                     _probe_temp:
   585  0086                     l839:	
   586                           ;incstack = 0
   587                           ; Regs used in _probe_temp: [wreg]
   588                           
   589                           
   590                           ;main.c: 351:     CHS3 = 0x0;
   591  0086  1283               	bcf	3,5	;RP0=0, select bank0
   592  0087  1303               	bcf	3,6	;RP1=0, select bank0
   593  0088  129F               	bcf	31,5	;volatile
   594                           
   595                           ;main.c: 352:     CHS2 = 0x0;
   596  0089  121F               	bcf	31,4	;volatile
   597                           
   598                           ;main.c: 353:     CHS1 = 0x1;
   599  008A  159F               	bsf	31,3	;volatile
   600                           
   601                           ;main.c: 354:     CHS0 = 0x1;
   602  008B  151F               	bsf	31,2	;volatile
   603                           
   604                           ;main.c: 356:     ADON = 0x1;
   605  008C  141F               	bsf	31,0	;volatile
   606                           
   607                           ;main.c: 360:     GO = 0x1;
   608  008D  149F               	bsf	31,1	;volatile
   609                           
   610                           ;main.c: 362:     while (!GO) {
   611  008E  2893               	goto	l843
   612  008F                     l841:
   613                           
   614                           ;main.c: 363:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   615  008F  3003               	movlw	3
   616  0090  00F8               	movwf	??_probe_temp
   617  0091                     u167:
   618  0091  0BF8               	decfsz	??_probe_temp,f
   619  0092  2891               	goto	u167
   620  0093                     l843:
   621                           
   622                           ;main.c: 362:     while (!GO) {
   623  0093  1283               	bcf	3,5	;RP0=0, select bank0
   624  0094  1303               	bcf	3,6	;RP1=0, select bank0
   625  0095  1C9F               	btfss	31,1	;volatile
   626  0096  2898               	goto	u141
   627  0097  2899               	goto	u140
   628  0098                     u141:
   629  0098  288F               	goto	l841
   630  0099                     u140:
   631  0099                     l845:
   632                           
   633                           ;main.c: 366:     ADC_TEMP = (ADRESH) | (ADRESL >> 8);
   634  0099  1683               	bsf	3,5	;RP0=1, select bank1
   635  009A  1303               	bcf	3,6	;RP1=0, select bank1
   636  009B  081E               	movf	30,w	;volatile
   637  009C  1283               	bcf	3,5	;RP0=0, select bank0
   638  009D  1303               	bcf	3,6	;RP1=0, select bank0
   639  009E  081E               	movf	30,w	;volatile
   640  009F  00F8               	movwf	??_probe_temp
   641  00A0  01F9               	clrf	??_probe_temp+1
   642  00A1  0878               	movf	??_probe_temp,w
   643  00A2  00A2               	movwf	_ADC_TEMP
   644  00A3  0879               	movf	??_probe_temp+1,w
   645  00A4  00A3               	movwf	_ADC_TEMP+1
   646  00A5                     l126:
   647  00A5  0008               	return
   648  00A6                     __end_of_probe_temp:
   649                           
   650                           	psect	text3
   651  00BA                     __ptext3:	
   652 ;; *************** function _charge *****************
   653 ;; Defined at:
   654 ;;		line 400 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		None
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1
   668 ;;      Params:         0       0       0
   669 ;;      Locals:         0       0       0
   670 ;;      Temps:          0       0       0
   671 ;;      Totals:         0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _charge
   684  00BA                     _charge:
   685  00BA                     l129:	
   686                           ;incstack = 0
   687                           ; Regs used in _charge: []
   688                           
   689  00BA  0008               	return
   690  00BB                     __end_of_charge:
   691                           
   692                           	psect	text4
   693  001A                     __ptext4:	
   694 ;; *************** function _pwm_routine *****************
   695 ;; Defined at:
   696 ;;		line 181 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1
   710 ;;      Params:         0       0       0
   711 ;;      Locals:         0       0       0
   712 ;;      Temps:          2       0       0
   713 ;;      Totals:         2       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		Interrupt level 1
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _pwm_routine
   725  001A                     _pwm_routine:
   726  001A                     i1l791:
   727                           
   728                           ;main.c: 185:     if (T0IF) {
   729  001A  1D0B               	btfss	11,2	;volatile
   730  001B  281D               	goto	u2_21
   731  001C  281E               	goto	u2_20
   732  001D                     u2_21:
   733  001D  2851               	goto	i1l103
   734  001E                     u2_20:
   735  001E                     i1l793:
   736                           
   737                           ;main.c: 187:         if (PWM_ENABLED) {
   738  001E  1C7A               	btfss	_PWM_ENABLED/(0+8),_PWM_ENABLED& (0+7)
   739  001F  2821               	goto	u3_21
   740  0020  2822               	goto	u3_20
   741  0021                     u3_21:
   742  0021  284D               	goto	i1l98
   743  0022                     u3_20:
   744  0022                     i1l795:
   745                           
   746                           ;main.c: 189:             if (RB4 == 0x0 && PWM_TICKS >= PWM_OFF) {
   747  0022  1283               	bcf	3,5	;RP0=0, select bank0
   748  0023  1303               	bcf	3,6	;RP1=0, select bank0
   749  0024  1A06               	btfsc	6,4	;volatile
   750  0025  2827               	goto	u4_21
   751  0026  2828               	goto	u4_20
   752  0027                     u4_21:
   753  0027  2836               	goto	i1l99
   754  0028                     u4_20:
   755  0028                     i1l797:
   756  0028  0871               	movf	_PWM_OFF+1,w
   757  0029  0275               	subwf	_PWM_TICKS+1,w	;volatile
   758  002A  1D03               	skipz
   759  002B  282E               	goto	u5_25
   760  002C  0870               	movf	_PWM_OFF,w
   761  002D  0274               	subwf	_PWM_TICKS,w	;volatile
   762  002E                     u5_25:
   763  002E  1C03               	skipc
   764  002F  2831               	goto	u5_21
   765  0030  2832               	goto	u5_20
   766  0031                     u5_21:
   767  0031  2836               	goto	i1l99
   768  0032                     u5_20:
   769  0032                     i1l799:
   770                           
   771                           ;main.c: 190:                 RB4 = 0x1;
   772  0032  1606               	bsf	6,4	;volatile
   773  0033                     i1l801:
   774                           
   775                           ;main.c: 191:                 PWM_TICKS = 0x0;
   776  0033  01F4               	clrf	_PWM_TICKS	;volatile
   777  0034  01F5               	clrf	_PWM_TICKS+1	;volatile
   778                           
   779                           ;main.c: 192:             }
   780  0035  2846               	goto	i1l809
   781  0036                     i1l99:	
   782                           ;main.c: 193:             else if (RB4 == 0x1 && PWM_TICKS >= PWM_ON) {
   783                           
   784  0036  1E06               	btfss	6,4	;volatile
   785  0037  2839               	goto	u6_21
   786  0038  283A               	goto	u6_20
   787  0039                     u6_21:
   788  0039  2846               	goto	i1l809
   789  003A                     u6_20:
   790  003A                     i1l803:
   791  003A  0873               	movf	_PWM_ON+1,w
   792  003B  0275               	subwf	_PWM_TICKS+1,w	;volatile
   793  003C  1D03               	skipz
   794  003D  2840               	goto	u7_25
   795  003E  0872               	movf	_PWM_ON,w
   796  003F  0274               	subwf	_PWM_TICKS,w	;volatile
   797  0040                     u7_25:
   798  0040  1C03               	skipc
   799  0041  2843               	goto	u7_21
   800  0042  2844               	goto	u7_20
   801  0043                     u7_21:
   802  0043  2846               	goto	i1l809
   803  0044                     u7_20:
   804  0044                     i1l805:
   805                           
   806                           ;main.c: 194:                 RB4 = 0x0;
   807  0044  1206               	bcf	6,4	;volatile
   808  0045  2833               	goto	i1l801
   809  0046                     i1l809:
   810                           
   811                           ;main.c: 198:             PWM_TICKS ++;
   812  0046  3001               	movlw	1
   813  0047  07F4               	addwf	_PWM_TICKS,f	;volatile
   814  0048  1803               	skipnc
   815  0049  0AF5               	incf	_PWM_TICKS+1,f	;volatile
   816  004A  3000               	movlw	0
   817  004B  07F5               	addwf	_PWM_TICKS+1,f	;volatile
   818                           
   819                           ;main.c: 199:         }
   820  004C  2850               	goto	i1l102
   821  004D                     i1l98:	
   822                           ;main.c: 200:         else {
   823                           
   824                           
   825                           ;main.c: 201:             RB4 = 0x0;
   826  004D  1283               	bcf	3,5	;RP0=0, select bank0
   827  004E  1303               	bcf	3,6	;RP1=0, select bank0
   828  004F  1206               	bcf	6,4	;volatile
   829  0050                     i1l102:	
   830                           ;main.c: 202:         }
   831                           
   832                           
   833                           ;main.c: 204:         T0IF = 0x0;
   834  0050  110B               	bcf	11,2	;volatile
   835  0051                     i1l103:
   836  0051  0877               	movf	??_pwm_routine+1,w
   837  0052  008A               	movwf	10
   838  0053  0E76               	swapf	??_pwm_routine,w
   839  0054  0083               	movwf	3
   840  0055  0EFE               	swapf	btemp,f
   841  0056  0E7E               	swapf	btemp,w
   842  0057  0009               	retfie
   843  0058                     __end_of_pwm_routine:
   844  007E                     btemp	set	126	;btemp
   845  007E                     wtemp0	set	126
   846                           
   847                           	psect	intentry
   848  0004                     __pintentry:	
   849                           ;incstack = 0
   850                           ; Regs used in _pwm_routine: [wreg+status,2]
   851                           
   852  0004                     interrupt_function:
   853  007E                     saved_w	set	btemp
   854  0004  00FE               	movwf	btemp
   855  0005  0E03               	swapf	3,w
   856  0006  00F6               	movwf	??_pwm_routine
   857  0007  080A               	movf	10,w
   858  0008  00F7               	movwf	??_pwm_routine+1
   859  0009  281A               	ljmp	_pwm_routine
   860                           
   861                           	psect	config
   862                           
   863                           ;Config register CONFIG @ 0x2007
   864                           ;	Oscillator Selection bits
   865                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   866                           ;	Watchdog Timer Enable bit
   867                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   868                           ;	Power-up Timer Enable bit
   869                           ;	PWRTE = OFF, PWRT disabled
   870                           ;	MCLR Pin Function Select bit
   871                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   872                           ;	Code Protection bit
   873                           ;	CP = OFF, Program memory code protection is disabled
   874                           ;	Data Code Protection bit
   875                           ;	CPD = OFF, Data memory code protection is disabled
   876                           ;	Brown-out Reset Selection bits
   877                           ;	BOREN = OFF, BOR disabled
   878                           ;	Internal External Switchover bit
   879                           ;	IESO = OFF, Internal External Switchover mode is disabled
   880                           ;	Fail-Safe Clock Monitor Enabled bit
   881                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   882  2007                     	org	8199
   883  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80      3       7
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_probe_temp

Critical Paths under _pwm_routine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pwm_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pwm_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
                             _charge
                         _probe_temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _probe_temp                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _charge                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _pwm_routine                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _charge
   _probe_temp
   _setup

 _pwm_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      3       7       4        8.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      12       7        0.0%
DATA                 0      0      12       8        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 12:10:55 2021

                     _GO 00F9              _pwm_routine 001A                      l106 0085  
                    l126 00A5                      l129 00BA                      l731 0061  
                    l741 0069                      l733 0063                      l751 0070  
                    l743 006A                      l735 0066                      l841 008F  
                    l761 0077                      l753 0071                      l745 006B  
                    l737 0067                      l729 0058                      l843 0093  
                    l771 0084                      l763 007A                      l755 0072  
                    l747 006C                      l739 0068                      l845 0099  
                    l765 007B                      l757 0075                      l749 006F  
                    l861 00B5                      l839 0086                      l767 0080  
                    l759 0076                      l863 00B6                      l769 0081  
                    l865 00B7                      l859 00A6                      _GIE 005F  
                    _RC0 0038                      _RB4 0034                      u140 0099  
                    u141 0098                      u157 00AE                      _PS0 0408  
                    u167 0091                      _PS1 0409                      _PS2 040A  
                    _HTS 047A                      _SCS 0478                      _LTS 0479  
                   _C1ON 08CF                     _C2ON 08D7                     _ADFM 00FF  
                   _ADON 00F8                     _CHS0 00FA                     _CHS1 00FB  
                   _CHS2 00FC                     _CHS3 00FD                     _T0IE 005D  
                   _T0IF 005A                     _T0CS 040D                     _PEIE 005E  
                   _INTE 005C                     i1l98 004D                     i1l99 0036  
                   _VCFG 00FE                     _OSTS 047B                     u2_20 001E  
                   u2_21 001D                     u3_20 0022                     u3_21 0021  
                   u4_20 0028                     u4_21 0027                     u5_20 0032  
                   u5_21 0031                     u5_25 002E                     u6_20 003A  
                   u6_21 0039                     u7_20 0044                     u7_21 0043  
                   u7_25 0040                     _main 00A6                     btemp 007E  
                   start 000A                    _ADCS0 04FC                    _ADCS1 04FD  
                  _ADCS2 04FE                    ?_main 0076                    _ANSEL 011E  
                  _IRCF0 047C                    _IRCF1 047D                    _IRCF2 047E  
                  i1l102 0050                    i1l103 0051                    _RABIE 005B  
                  i1l801 0033                    i1l803 003A                    i1l805 0044  
                  i1l809 0046                    i1l791 001A                    i1l793 001E  
                  i1l795 0022                    i1l797 0028                    i1l799 0032  
                  _setup 0058           __pbitbssCOMMON 03D0                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 00BA                   ??_main 0024                   _ADRESH 001E  
                 _ADRESL 009E                   ?_setup 0076                   _ANSELH 011F  
                 _TRISC0 0438                   _TRISB4 0434                   _PWM_ON 0072  
                 _charge 00BA                   saved_w 007E  __end_of__initialization 0018  
         __pcstackCOMMON 0076            __end_of_setup 0086             ?_pwm_routine 0076  
                ??_setup 0078               __pbssBANK0 0020               __pmaintext 00A6  
                ?_charge 0076               __pintentry 0004                  _ADC_REF 0020  
                _PWM_OFF 0070          __size_of_charge 0001                  __ptext1 0058  
                __ptext2 0086                  __ptext3 00BA                  __ptext4 001A  
   end_of_initialization 0018               _probe_temp 0086     __size_of_pwm_routine 003E  
              _PWM_TICKS 0074           __end_of_charge 00BB      start_initialization 000B  
               ??_charge 0078              ?_probe_temp 0076              __pbssCOMMON 0070  
              ___latbits 0000            __pcstackBANK0 0024                 _ADC_TEMP 0022  
         __size_of_setup 002E        interrupt_function 0004      __size_of_probe_temp 0020  
          ??_pwm_routine 0076            __size_of_main 0014             ??_probe_temp 0078  
    __end_of_pwm_routine 0058                 intlevel1 0000       __end_of_probe_temp 00A6  
             _OPTION_REG 0081              _PWM_ENABLED 03D0  
